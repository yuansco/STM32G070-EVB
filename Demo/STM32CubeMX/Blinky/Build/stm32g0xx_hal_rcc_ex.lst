ARM GAS  /tmp/cc8tq3OU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32g0xx_hal_rcc_ex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_RCCEx_PeriphCLKConfig,"ax",%progbits
  20              		.align	2
  21              		.global	HAL_RCCEx_PeriphCLKConfig
  22              		.code	16
  23              		.thumb_func
  25              	HAL_RCCEx_PeriphCLKConfig:
  26              	.LFB310:
  27              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @file    stm32g0xx_hal_rcc_ex.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @brief   Extended RCC HAL module driver.
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *          functionalities RCC extended peripheral:
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *           + Extended Peripheral Control functions
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *           + Extended Clock management functions
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *           + Extended Clock Recovery System Control functions
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   ******************************************************************************
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @attention
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * Copyright (c) 2018 STMicroelectronics.
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * All rights reserved.
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * the root directory of this software component.
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   ******************************************************************************
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /* Includes ------------------------------------------------------------------*/
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #include "stm32g0xx_hal.h"
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /** @addtogroup STM32G0xx_HAL_Driver
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @{
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /** @defgroup RCCEx RCCEx
ARM GAS  /tmp/cc8tq3OU.s 			page 2


  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @brief RCC Extended HAL module driver
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @{
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #ifdef HAL_RCC_MODULE_ENABLED
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /* Private defines -----------------------------------------------------------*/
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Private_Constants RCCEx Private Constants
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @{
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #define PLL_TIMEOUT_VALUE        100U /* 100 ms (minimum Tick + 1)  */
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #define LSCO_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #define LSCO_GPIO_PORT        GPIOA
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #define LSCO_PIN              GPIO_PIN_2
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /**
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @}
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /* Private macros ------------------------------------------------------------*/
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /* Private variables ---------------------------------------------------------*/
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /* Exported functions --------------------------------------------------------*/
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions RCCEx Exported Functions
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @{
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions_Group1 Extended Peripheral Control functions
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @brief  Extended Peripheral Control functions
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** @verbatim
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****  ===============================================================================
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****                 ##### Extended Peripheral Control functions  #####
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****  ===============================================================================
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     [..]
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     frequencies.
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     [..]
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     (@) Important note: Care must be taken when HAL_RCCEx_PeriphCLKConfig() is used to
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         select the RTC clock source; in this case the Backup domain will be reset in
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         order to modify the RTC Clock source, as consequence RTC registers (including
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         the backup registers) and RCC_BDCR register are set to their reset values.
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** @endverbatim
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @{
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /**
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @brief  Initialize the RCC extended peripherals clocks according to the specified
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *         parameters in the @ref RCC_PeriphCLKInitTypeDef.
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @param  PeriphClkInit  pointer to a @ref RCC_PeriphCLKInitTypeDef structure that
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *         contains a field PeriphClockSelection which can be a combination of the following value
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_RTC     RTC peripheral clock
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_ADC     ADC peripheral clock
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C1    I2C1 peripheral clock
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C2    I2C2 peripheral clock (2)
ARM GAS  /tmp/cc8tq3OU.s 			page 3


  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2S1    I2S1 peripheral clock
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2S2    I2S2 peripheral clock (1)
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART1  USART1 peripheral clock
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_CEC     CEC peripheral clock     (1)
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPTIM1  LPTIM1 peripheral clock  (1)
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPTIM2  LPTIM2 peripheral clock  (1)
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPUART1 LPUART1 peripheral clock (1)
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPUART2 LPUART2 peripheral clock (1)
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_RNG     RNG peripheral clock     (1)
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_TIM1    TIM1 peripheral clock    (1)(2)
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_TIM15   TIM15 peripheral clock   (1)(2)
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART2  USART2 peripheral clock     (2)
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART3  USART3 peripheral clock     (2)
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_FDCAN   FDCAN peripheral clock   (1)
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB     USB peripheral clock     (1)
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @note   (1) Peripherals are not available on all devices
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @note   (2) Peripherals clock selection is not available on all devices
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @note   Care must be taken when @ref HAL_RCCEx_PeriphCLKConfig() is used to select
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *         the RTC clock source: in this case the access to Backup domain is enabled.
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @retval HAL status
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** {
  28              		.loc 1 113 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 83B0     		sub	sp, sp, #12
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 32
  44 0004 0400     		movs	r4, r0
  45              	.LVL1:
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t tmpregister;
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t tickstart;
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   HAL_StatusTypeDef ret    = HAL_OK;   /* Intermediate status */
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Check the parameters */
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- RTC clock source configuration ----------------------*/
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
  46              		.loc 1 123 0
  47 0006 0368     		ldr	r3, [r0]
  48 0008 9B03     		lsls	r3, r3, #14
  49 000a 62D5     		bpl	.L17
ARM GAS  /tmp/cc8tq3OU.s 			page 4


  50              	.LVL2:
  51              	.LBB2:
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     FlagStatus       pwrclkchanged = RESET;
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check for RTC Parameters used to output RTCCLK */
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Enable Power Clock */
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     if (__HAL_RCC_PWR_IS_CLK_DISABLED())
  52              		.loc 1 131 0
  53 000c 574B     		ldr	r3, .L21
  54 000e DB6B     		ldr	r3, [r3, #60]
  55 0010 DB00     		lsls	r3, r3, #3
  56 0012 0BD4     		bmi	.L18
  57              	.LBB3:
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       __HAL_RCC_PWR_CLK_ENABLE();
  58              		.loc 1 133 0
  59 0014 554A     		ldr	r2, .L21
  60 0016 D16B     		ldr	r1, [r2, #60]
  61 0018 8023     		movs	r3, #128
  62 001a 5B05     		lsls	r3, r3, #21
  63 001c 1943     		orrs	r1, r3
  64 001e D163     		str	r1, [r2, #60]
  65 0020 D26B     		ldr	r2, [r2, #60]
  66 0022 1340     		ands	r3, r2
  67 0024 0193     		str	r3, [sp, #4]
  68 0026 019B     		ldr	r3, [sp, #4]
  69              	.LVL3:
  70              	.LBE3:
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       pwrclkchanged = SET;
  71              		.loc 1 134 0
  72 0028 0126     		movs	r6, #1
  73 002a 00E0     		b	.L3
  74              	.LVL4:
  75              	.L18:
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
  76              		.loc 1 125 0
  77 002c 0026     		movs	r6, #0
  78              	.LVL5:
  79              	.L3:
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Enable write access to Backup domain */
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     SET_BIT(PWR->CR1, PWR_CR1_DBP);
  80              		.loc 1 138 0
  81 002e 504A     		ldr	r2, .L21+4
  82 0030 1368     		ldr	r3, [r2]
  83 0032 8021     		movs	r1, #128
  84 0034 4900     		lsls	r1, r1, #1
  85 0036 0B43     		orrs	r3, r1
  86 0038 1360     		str	r3, [r2]
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Wait for Backup domain Write protection disable */
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     tickstart = HAL_GetTick();
  87              		.loc 1 141 0
ARM GAS  /tmp/cc8tq3OU.s 			page 5


  88 003a FFF7FEFF 		bl	HAL_GetTick
  89              	.LVL6:
  90 003e 0500     		movs	r5, r0
  91              	.LVL7:
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
  92              		.loc 1 143 0
  93 0040 04E0     		b	.L4
  94              	.LVL8:
  95              	.L6:
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
  96              		.loc 1 145 0
  97 0042 FFF7FEFF 		bl	HAL_GetTick
  98              	.LVL9:
  99 0046 401B     		subs	r0, r0, r5
 100 0048 0228     		cmp	r0, #2
 101 004a 05D8     		bhi	.L19
 102              	.L4:
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 103              		.loc 1 143 0
 104 004c 484B     		ldr	r3, .L21+4
 105 004e 1B68     		ldr	r3, [r3]
 106 0050 DB05     		lsls	r3, r3, #23
 107 0052 F6D5     		bpl	.L6
 108              	.LBE2:
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 109              		.loc 1 116 0
 110 0054 0025     		movs	r5, #0
 111              	.LVL10:
 112              	.LBB4:
 113 0056 00E0     		b	.L5
 114              	.LVL11:
 115              	.L19:
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       {
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         ret = HAL_TIMEOUT;
 116              		.loc 1 147 0
 117 0058 0325     		movs	r5, #3
 118              	.LVL12:
 119              	.L5:
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       }
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     if (ret == HAL_OK)
 120              		.loc 1 152 0
 121 005a 002D     		cmp	r5, #0
 122 005c 31D1     		bne	.L7
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       /* Reset the Backup domain only if the RTC Clock source selection is modified from default */
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 123              		.loc 1 155 0
 124 005e 434B     		ldr	r3, .L21
 125 0060 DA6D     		ldr	r2, [r3, #92]
 126 0062 C023     		movs	r3, #192
 127 0064 9B00     		lsls	r3, r3, #2
 128 0066 1340     		ands	r3, r2
ARM GAS  /tmp/cc8tq3OU.s 			page 6


 129              	.LVL13:
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       /* Reset the Backup domain only if the RTC Clock source selection is modified */
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       if ((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelectio
 130              		.loc 1 158 0
 131 0068 10D0     		beq	.L8
 132              		.loc 1 158 0 is_stmt 0 discriminator 1
 133 006a A269     		ldr	r2, [r4, #24]
 134 006c 9342     		cmp	r3, r2
 135 006e 0DD0     		beq	.L8
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       {
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Store the content of BDCR register before the reset of Backup Domain */
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 136              		.loc 1 161 0 is_stmt 1
 137 0070 3E4A     		ldr	r2, .L21
 138 0072 D16D     		ldr	r1, [r2, #92]
 139 0074 3F4B     		ldr	r3, .L21+8
 140              	.LVL14:
 141 0076 0B40     		ands	r3, r1
 142              	.LVL15:
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* RTC Clock selection can be changed only if the Backup Domain is reset */
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         __HAL_RCC_BACKUPRESET_FORCE();
 143              		.loc 1 163 0
 144 0078 D16D     		ldr	r1, [r2, #92]
 145 007a 8020     		movs	r0, #128
 146 007c 4002     		lsls	r0, r0, #9
 147 007e 0143     		orrs	r1, r0
 148 0080 D165     		str	r1, [r2, #92]
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         __HAL_RCC_BACKUPRESET_RELEASE();
 149              		.loc 1 164 0
 150 0082 D06D     		ldr	r0, [r2, #92]
 151 0084 3C49     		ldr	r1, .L21+12
 152 0086 0140     		ands	r1, r0
 153 0088 D165     		str	r1, [r2, #92]
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Restore the Content of BDCR register */
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         RCC->BDCR = tmpregister;
 154              		.loc 1 166 0
 155 008a D365     		str	r3, [r2, #92]
 156              	.L8:
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       }
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 157              		.loc 1 170 0
 158 008c DB07     		lsls	r3, r3, #31
 159 008e 0FD5     		bpl	.L9
 160              	.LVL16:
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       {
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Get Start Tick*/
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         tickstart = HAL_GetTick();
 161              		.loc 1 173 0
 162 0090 FFF7FEFF 		bl	HAL_GetTick
 163              	.LVL17:
 164 0094 0700     		movs	r7, r0
 165              	.LVL18:
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Wait till LSE is ready */
ARM GAS  /tmp/cc8tq3OU.s 			page 7


 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 166              		.loc 1 176 0
 167 0096 05E0     		b	.L10
 168              	.LVL19:
 169              	.L11:
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 170              		.loc 1 178 0
 171 0098 FFF7FEFF 		bl	HAL_GetTick
 172              	.LVL20:
 173 009c C01B     		subs	r0, r0, r7
 174 009e 374B     		ldr	r3, .L21+16
 175 00a0 9842     		cmp	r0, r3
 176 00a2 04D8     		bhi	.L20
 177              	.L10:
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 178              		.loc 1 176 0
 179 00a4 314B     		ldr	r3, .L21
 180 00a6 DB6D     		ldr	r3, [r3, #92]
 181 00a8 9B07     		lsls	r3, r3, #30
 182 00aa F5D5     		bpl	.L11
 183 00ac 00E0     		b	.L9
 184              	.L20:
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           {
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             ret = HAL_TIMEOUT;
 185              		.loc 1 180 0
 186 00ae 0325     		movs	r5, #3
 187              	.LVL21:
 188              	.L9:
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             break;
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           }
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       }
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       if (ret == HAL_OK)
 189              		.loc 1 186 0
 190 00b0 002D     		cmp	r5, #0
 191 00b2 06D1     		bne	.L7
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       {
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Apply new RTC clock source selection */
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 192              		.loc 1 189 0
 193 00b4 2D4A     		ldr	r2, .L21
 194 00b6 D16D     		ldr	r1, [r2, #92]
 195 00b8 2E4B     		ldr	r3, .L21+8
 196 00ba 0B40     		ands	r3, r1
 197 00bc A169     		ldr	r1, [r4, #24]
 198 00be 0B43     		orrs	r3, r1
 199 00c0 D365     		str	r3, [r2, #92]
 200              	.L7:
 201              	.LVL22:
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       }
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       else
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       {
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* set overall return value */
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         status = ret;
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       }
ARM GAS  /tmp/cc8tq3OU.s 			page 8


 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     else
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       /* set overall return value */
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       status = ret;
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Restore clock configuration if changed */
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     if (pwrclkchanged == SET)
 202              		.loc 1 204 0
 203 00c2 012E     		cmp	r6, #1
 204 00c4 06D1     		bne	.L2
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 205              		.loc 1 206 0
 206 00c6 294A     		ldr	r2, .L21
 207 00c8 D16B     		ldr	r1, [r2, #60]
 208 00ca 2D4B     		ldr	r3, .L21+20
 209 00cc 0B40     		ands	r3, r1
 210 00ce D363     		str	r3, [r2, #60]
 211 00d0 00E0     		b	.L2
 212              	.LVL23:
 213              	.L17:
 214              	.LBE4:
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 215              		.loc 1 117 0
 216 00d2 0025     		movs	r5, #0
 217              	.LVL24:
 218              	.L2:
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- USART1 clock source configuration -------------------*/
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 219              		.loc 1 211 0
 220 00d4 2368     		ldr	r3, [r4]
 221 00d6 DB07     		lsls	r3, r3, #31
 222 00d8 06D5     		bpl	.L12
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the USART1 clock source */
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 223              		.loc 1 217 0
 224 00da 244A     		ldr	r2, .L21
 225 00dc 536D     		ldr	r3, [r2, #84]
 226 00de 0321     		movs	r1, #3
 227 00e0 8B43     		bics	r3, r1
 228 00e2 6168     		ldr	r1, [r4, #4]
 229 00e4 0B43     		orrs	r3, r1
 230 00e6 5365     		str	r3, [r2, #84]
 231              	.L12:
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_USART2SEL)
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- USART2 clock source configuration -------------------*/
ARM GAS  /tmp/cc8tq3OU.s 			page 9


 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 232              		.loc 1 222 0
 233 00e8 2368     		ldr	r3, [r4]
 234 00ea 9B07     		lsls	r3, r3, #30
 235 00ec 06D5     		bpl	.L13
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the USART2 clock source */
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 236              		.loc 1 228 0
 237 00ee 1F4A     		ldr	r2, .L21
 238 00f0 536D     		ldr	r3, [r2, #84]
 239 00f2 0C21     		movs	r1, #12
 240 00f4 8B43     		bics	r3, r1
 241 00f6 A168     		ldr	r1, [r4, #8]
 242 00f8 0B43     		orrs	r3, r1
 243 00fa 5365     		str	r3, [r2, #84]
 244              	.L13:
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_USART2SEL */
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_USART3SEL)
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- USART3 clock source configuration -------------------*/
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the USART3 clock source */
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_USART3SEL */
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(LPUART1)
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- LPUART1 clock source configuration ------------------*/
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_LPUART1CLKSOURCE(PeriphClkInit->Lpuart1ClockSelection));
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the LPUART1 clock source */
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* LPUART1 */
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(LPUART2)
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- LPUART2 clock source configuration ------------------*/
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART2) == RCC_PERIPHCLK_LPUART2)
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_LPUART2CLKSOURCE(PeriphClkInit->Lpuart2ClockSelection));
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the LPUART clock source */
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_LPUART2_CONFIG(PeriphClkInit->Lpuart2ClockSelection);
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
ARM GAS  /tmp/cc8tq3OU.s 			page 10


 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* LPUART2 */
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_LPTIM1SEL)
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- LPTIM1 clock source configuration -------------------*/
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_LPTIM1CLKSOURCE(PeriphClkInit->Lptim1ClockSelection));
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_LPTIM1SEL */
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_LPTIM2SEL)
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- LPTIM2 clock source configuration -------------------*/
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_LPTIM2CLKSOURCE(PeriphClkInit->Lptim2ClockSelection));
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_LPTIM2SEL */
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- I2C1 clock source configuration ---------------------*/
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 245              		.loc 1 287 0
 246 00fc 2368     		ldr	r3, [r4]
 247 00fe 9B06     		lsls	r3, r3, #26
 248 0100 06D5     		bpl	.L14
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the I2C1 clock source */
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 249              		.loc 1 293 0
 250 0102 1A4A     		ldr	r2, .L21
 251 0104 516D     		ldr	r1, [r2, #84]
 252 0106 1F4B     		ldr	r3, .L21+24
 253 0108 0B40     		ands	r3, r1
 254 010a E168     		ldr	r1, [r4, #12]
 255 010c 0B43     		orrs	r3, r1
 256 010e 5365     		str	r3, [r2, #84]
 257              	.L14:
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_I2C2SEL)
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- I2C2 clock source configuration ---------------------*/
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the I2C2 clock source */
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* (RCC_CCIPR_I2C2SEL */
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RNG)
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- RNG clock source configuration ----------------------*/
ARM GAS  /tmp/cc8tq3OU.s 			page 11


 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == (RCC_PERIPHCLK_RNG))
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_RNGCLKSOURCE(PeriphClkInit->RngClockSelection));
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     if (PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL)
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       /* Enable PLLQCLK output */
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLQCLK);
 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RNG */
 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- ADC clock source configuration ----------------------*/
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 258              		.loc 1 323 0
 259 0110 2368     		ldr	r3, [r4]
 260 0112 5B04     		lsls	r3, r3, #17
 261 0114 11D5     		bpl	.L15
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_ADCCLKSOURCE(PeriphClkInit->AdcClockSelection));
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the ADC interface clock source */
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 262              		.loc 1 329 0
 263 0116 154A     		ldr	r2, .L21
 264 0118 536D     		ldr	r3, [r2, #84]
 265 011a 9B00     		lsls	r3, r3, #2
 266 011c 9B08     		lsrs	r3, r3, #2
 267 011e 6169     		ldr	r1, [r4, #20]
 268 0120 0B43     		orrs	r3, r1
 269 0122 5365     		str	r3, [r2, #84]
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     if (PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLADC)
 270              		.loc 1 331 0
 271 0124 8023     		movs	r3, #128
 272 0126 DB05     		lsls	r3, r3, #23
 273 0128 6269     		ldr	r2, [r4, #20]
 274 012a 9A42     		cmp	r2, r3
 275 012c 05D1     		bne	.L15
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       /* Enable PLLPCLK output */
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLPCLK);
 276              		.loc 1 334 0
 277 012e 0F4A     		ldr	r2, .L21
 278 0130 D368     		ldr	r3, [r2, #12]
 279 0132 8021     		movs	r1, #128
 280 0134 4902     		lsls	r1, r1, #9
 281 0136 0B43     		orrs	r3, r1
 282 0138 D360     		str	r3, [r2, #12]
 283              	.L15:
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(CEC)
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- CEC clock source configuration ---------------------*/
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
ARM GAS  /tmp/cc8tq3OU.s 			page 12


 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the CEC clock source */
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* CEC */
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_TIM1SEL)
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- TIM1 clock source configuration ---------------------*/
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM1) == RCC_PERIPHCLK_TIM1)
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_TIM1CLKSOURCE(PeriphClkInit->Tim1ClockSelection));
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the TIM1 clock source */
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_TIM1_CONFIG(PeriphClkInit->Tim1ClockSelection);
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     if (PeriphClkInit->Tim1ClockSelection == RCC_TIM1CLKSOURCE_PLL)
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       /* Enable PLLQCLK output */
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLQCLK);
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_TIM1SEL */
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_TIM15SEL)
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- TIM15 clock source configuration ---------------------*/
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM15) == RCC_PERIPHCLK_TIM15)
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_TIM15CLKSOURCE(PeriphClkInit->Tim15ClockSelection));
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the TIM15 clock source */
 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_TIM15_CONFIG(PeriphClkInit->Tim15ClockSelection);
 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     if (PeriphClkInit->Tim15ClockSelection == RCC_TIM15CLKSOURCE_PLL)
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       /* Enable PLLQCLK output */
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLQCLK);
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_TIM15SEL */
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- I2S1 clock source configuration ---------------------*/
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S1) == RCC_PERIPHCLK_I2S1)
 284              		.loc 1 387 0
 285 013a 2368     		ldr	r3, [r4]
 286 013c 1B05     		lsls	r3, r3, #20
 287 013e 11D5     		bpl	.L16
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2S1CLKSOURCE(PeriphClkInit->I2s1ClockSelection));
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the I2S1 clock source */
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_I2S1_CONFIG(PeriphClkInit->I2s1ClockSelection);
ARM GAS  /tmp/cc8tq3OU.s 			page 13


 288              		.loc 1 393 0
 289 0140 0A4A     		ldr	r2, .L21
 290 0142 516D     		ldr	r1, [r2, #84]
 291 0144 104B     		ldr	r3, .L21+28
 292 0146 0B40     		ands	r3, r1
 293 0148 2169     		ldr	r1, [r4, #16]
 294 014a 0B43     		orrs	r3, r1
 295 014c 5365     		str	r3, [r2, #84]
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     if (PeriphClkInit->I2s1ClockSelection == RCC_I2S1CLKSOURCE_PLL)
 296              		.loc 1 395 0
 297 014e 2269     		ldr	r2, [r4, #16]
 298 0150 8023     		movs	r3, #128
 299 0152 DB01     		lsls	r3, r3, #7
 300 0154 9A42     		cmp	r2, r3
 301 0156 05D1     		bne	.L16
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       /* Enable PLLPCLK output */
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLPCLK);
 302              		.loc 1 398 0
 303 0158 044A     		ldr	r2, .L21
 304 015a D368     		ldr	r3, [r2, #12]
 305 015c 8021     		movs	r1, #128
 306 015e 4902     		lsls	r1, r1, #9
 307 0160 0B43     		orrs	r3, r1
 308 0162 D360     		str	r3, [r2, #12]
 309              	.L16:
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR2_I2S2SEL)
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- I2S2 clock source configuration ---------------------*/
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S2) == RCC_PERIPHCLK_I2S2)
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2S2CLKSOURCE(PeriphClkInit->I2s2ClockSelection));
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the I2S2 clock source */
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_I2S2_CONFIG(PeriphClkInit->I2s2ClockSelection);
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     if (PeriphClkInit->I2s2ClockSelection == RCC_I2S2CLKSOURCE_PLL)
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       /* Enable PLLPCLK output */
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLPCLK);
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR2_I2S2SEL */
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(STM32G0C1xx) || defined(STM32G0B1xx)  || defined(STM32G0B0xx)
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- USB clock source configuration ---------------------*/
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the USB clock source */
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
ARM GAS  /tmp/cc8tq3OU.s 			page 14


 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     if (PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLL)
 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       /* Enable PLLQCLK output */
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLQCLK);
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* STM32G0C1xx || STM32G0B1xx || STM32G0B0xx */
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(FDCAN1) || defined(FDCAN2)
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /*-------------------------- FDCAN clock source configuration ---------------------*/
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check the parameters */
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_FDCANCLKSOURCE(PeriphClkInit->FdcanClockSelection));
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Configure the FDCAN clock source */
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     if (PeriphClkInit->FdcanClockSelection == RCC_FDCANCLKSOURCE_PLL)
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       /* Enable PLLQCLK output */
 451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLQCLK);
 452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* FDCAN1 || FDCAN2 */
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   return status;
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** }
 310              		.loc 1 457 0
 311 0164 2800     		movs	r0, r5
 312 0166 03B0     		add	sp, sp, #12
 313              		@ sp needed
 314              	.LVL25:
 315              	.LVL26:
 316 0168 F0BD     		pop	{r4, r5, r6, r7, pc}
 317              	.L22:
 318 016a C046     		.align	2
 319              	.L21:
 320 016c 00100240 		.word	1073876992
 321 0170 00700040 		.word	1073770496
 322 0174 FFFCFFFF 		.word	-769
 323 0178 FFFFFEFF 		.word	-65537
 324 017c 88130000 		.word	5000
 325 0180 FFFFFFEF 		.word	-268435457
 326 0184 FFCFFFFF 		.word	-12289
 327 0188 FF3FFFFF 		.word	-49153
 328              		.cfi_endproc
 329              	.LFE310:
 331              		.section	.text.HAL_RCCEx_GetPeriphCLKConfig,"ax",%progbits
 332              		.align	2
 333              		.global	HAL_RCCEx_GetPeriphCLKConfig
 334              		.code	16
 335              		.thumb_func
 337              	HAL_RCCEx_GetPeriphCLKConfig:
 338              	.LFB311:
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
ARM GAS  /tmp/cc8tq3OU.s 			page 15


 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /**
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal RCC configuration registers.
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *         returns the configuration information for the Extended Peripherals
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *         clocks: I2C1, I2S1, USART1, RTC, ADC,
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *         LPTIM1 (1), LPTIM2 (1), TIM1 (2), TIM15 (1)(2), USART2 (2), LPUART1 (1), CEC (1) and RN
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @note (1) Peripheral is not available on all devices
 466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @note (2) Peripheral clock selection is not available on all devices
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @retval None
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** void HAL_RCCEx_GetPeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** {
 339              		.loc 1 470 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 344              	.LVL27:
 471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Set all possible values for the extended clock type parameter------------*/
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1 | RCC_PERIPHCLK_I2C1 | RCC_PERIPHCLK_I
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****                                         RCC_PERIPHCLK_ADC     | RCC_PERIPHCLK_RTC ;
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_LPTIM1SEL) && defined(RCC_CCIPR_LPTIM2SEL)
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |=  RCC_PERIPHCLK_LPTIM2  | RCC_PERIPHCLK_LPTIM1;
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_LPTIM1SEL && RCC_CCIPR_LPTIM2SEL */
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_RNGSEL)
 479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |=  RCC_PERIPHCLK_RNG;
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_RNGSEL */
 481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_LPUART1SEL)
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |=  RCC_PERIPHCLK_LPUART1;
 483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_LPUART1SEL */
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_LPUART2SEL)
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |=  RCC_PERIPHCLK_LPUART2;
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_LPUART2SEL */
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_CECSEL)
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |=  RCC_PERIPHCLK_CEC;
 489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_CECSEL */
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_TIM1SEL)
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |=  RCC_PERIPHCLK_TIM1;
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_TIM1SEL */
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_TIM15SEL)
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |=  RCC_PERIPHCLK_TIM15;
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_TIM15SEL */
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_USART2SEL)
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |=  RCC_PERIPHCLK_USART2;
 345              		.loc 1 497 0
 346 0000 0F4B     		ldr	r3, .L24
 347 0002 0360     		str	r3, [r0]
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_USART2SEL */
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_USART3SEL)
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |=  RCC_PERIPHCLK_USART3;
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_USART3SEL */
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_I2C2SEL)
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |=  RCC_PERIPHCLK_I2C2;
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_I2C2SEL */
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR2_I2S2SEL)
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |=  RCC_PERIPHCLK_I2S2;
ARM GAS  /tmp/cc8tq3OU.s 			page 16


 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR2_I2S2SEL */
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR2_USBSEL)
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |=  RCC_PERIPHCLK_USB;
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR2_USBSEL */
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR2_FDCANSEL)
 512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |=  RCC_PERIPHCLK_FDCAN;
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_FDCANSEL */
 514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the USART1 clock source ---------------------------------------------*/
 515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->Usart1ClockSelection  = __HAL_RCC_GET_USART1_SOURCE();
 348              		.loc 1 515 0
 349 0004 0F4B     		ldr	r3, .L24+4
 350 0006 5A6D     		ldr	r2, [r3, #84]
 351 0008 0321     		movs	r1, #3
 352 000a 0A40     		ands	r2, r1
 353 000c 4260     		str	r2, [r0, #4]
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_USART2SEL)
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the USART2 clock source ---------------------------------------------*/
 518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->Usart2ClockSelection  = __HAL_RCC_GET_USART2_SOURCE();
 354              		.loc 1 518 0
 355 000e 5A6D     		ldr	r2, [r3, #84]
 356 0010 0931     		adds	r1, r1, #9
 357 0012 0A40     		ands	r2, r1
 358 0014 8260     		str	r2, [r0, #8]
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_USART2SEL */
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_USART3SEL)
 521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the USART3 clock source ---------------------------------------------*/
 522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->Usart3ClockSelection  = __HAL_RCC_GET_USART3_SOURCE();
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_USART3SEL */
 524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_LPUART1SEL)
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the LPUART1 clock source --------------------------------------------*/
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->Lpuart1ClockSelection = __HAL_RCC_GET_LPUART1_SOURCE();
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_LPUART1SEL */
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_LPUART2SEL)
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the LPUART2 clock source --------------------------------------------*/
 530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->Lpuart2ClockSelection = __HAL_RCC_GET_LPUART2_SOURCE();
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_LPUART2SEL */
 532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the I2C1 clock source -----------------------------------------------*/
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->I2c1ClockSelection    = __HAL_RCC_GET_I2C1_SOURCE();
 359              		.loc 1 533 0
 360 0016 596D     		ldr	r1, [r3, #84]
 361 0018 C022     		movs	r2, #192
 362 001a 9201     		lsls	r2, r2, #6
 363 001c 0A40     		ands	r2, r1
 364 001e C260     		str	r2, [r0, #12]
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_I2C2SEL)
 535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the I2C2 clock source -----------------------------------------------*/
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->I2c2ClockSelection    = __HAL_RCC_GET_I2C2_SOURCE();
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_I2C2SEL */
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_LPTIM1SEL)
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the LPTIM1 clock source ---------------------------------------------*/
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->Lptim1ClockSelection  = __HAL_RCC_GET_LPTIM1_SOURCE();
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_LPTIM1SEL */
 542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_LPTIM2SEL)
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the LPTIM2 clock source ---------------------------------------------*/
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->Lptim2ClockSelection  = __HAL_RCC_GET_LPTIM2_SOURCE();
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_LPTIM2SEL */
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_TIM1SEL)
ARM GAS  /tmp/cc8tq3OU.s 			page 17


 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the TIM1 clock source ---------------------------------------------*/
 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->Tim1ClockSelection  = __HAL_RCC_GET_TIM1_SOURCE();
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_TIM1SEL */
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_TIM15SEL)
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the TIM15 clock source ---------------------------------------------*/
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->Tim15ClockSelection  = __HAL_RCC_GET_TIM15_SOURCE();
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_TIM15SEL */
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the RTC clock source ------------------------------------------------*/
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->RTCClockSelection     = __HAL_RCC_GET_RTC_SOURCE();
 365              		.loc 1 555 0
 366 0020 D96D     		ldr	r1, [r3, #92]
 367 0022 C022     		movs	r2, #192
 368 0024 9200     		lsls	r2, r2, #2
 369 0026 0A40     		ands	r2, r1
 370 0028 8261     		str	r2, [r0, #24]
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_RNGSEL)
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the RNG clock source ------------------------------------------------*/
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->RngClockSelection     = __HAL_RCC_GET_RNG_SOURCE();
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif  /* RCC_CCIPR_RNGSEL */
 560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the ADC clock source -----------------------------------------------*/
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->AdcClockSelection     = __HAL_RCC_GET_ADC_SOURCE();
 371              		.loc 1 561 0
 372 002a 5A6D     		ldr	r2, [r3, #84]
 373 002c 920F     		lsrs	r2, r2, #30
 374 002e 9207     		lsls	r2, r2, #30
 375 0030 4261     		str	r2, [r0, #20]
 562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_CECSEL)
 563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the CEC clock source -----------------------------------------------*/
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->CecClockSelection     = __HAL_RCC_GET_CEC_SOURCE();
 565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif  /* RCC_CCIPR_CECSEL */
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR2_USBSEL)
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the USB clock source -----------------------------------------------*/
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->UsbClockSelection     = __HAL_RCC_GET_USB_SOURCE();
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif  /* RCC_CCIPR2_USBSEL */
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR2_FDCANSEL)
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the FDCAN clock source -----------------------------------------------*/
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->FdcanClockSelection     = __HAL_RCC_GET_FDCAN_SOURCE();
 573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif  /* RCC_CCIPR2_FDCANSEL */
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the I2S1 clock source -----------------------------------------------*/
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->I2s1ClockSelection    = __HAL_RCC_GET_I2S1_SOURCE();
 376              		.loc 1 575 0
 377 0032 5A6D     		ldr	r2, [r3, #84]
 378 0034 C023     		movs	r3, #192
 379 0036 1B02     		lsls	r3, r3, #8
 380 0038 1340     		ands	r3, r2
 381 003a 0361     		str	r3, [r0, #16]
 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR2_I2S2SEL)
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Get the I2S2 clock source -----------------------------------------------*/
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   PeriphClkInit->I2s2ClockSelection    = __HAL_RCC_GET_I2S2_SOURCE();
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR2_I2S2SEL */
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** }
 382              		.loc 1 580 0
 383              		@ sp needed
 384 003c 7047     		bx	lr
 385              	.L25:
 386 003e C046     		.align	2
 387              	.L24:
ARM GAS  /tmp/cc8tq3OU.s 			page 18


 388 0040 23480200 		.word	149539
 389 0044 00100240 		.word	1073876992
 390              		.cfi_endproc
 391              	.LFE311:
 393              		.global	__aeabi_uidiv
 394              		.section	.text.HAL_RCCEx_GetPeriphCLKFreq,"ax",%progbits
 395              		.align	2
 396              		.global	HAL_RCCEx_GetPeriphCLKFreq
 397              		.code	16
 398              		.thumb_func
 400              	HAL_RCCEx_GetPeriphCLKFreq:
 401              	.LFB312:
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /**
 583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @brief  Return the peripheral clock frequency for peripherals with clock source from PLL
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @note   Return 0 if peripheral clock identifier not managed by this API
 585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @param  PeriphClk  Peripheral clock identifier
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *         This parameter can be one of the following values:
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_RTC     RTC peripheral clock
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_ADC     ADC peripheral clock
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C1    I2C1 peripheral clock
 590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C2    I2C2 peripheral clock (1)
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2S1    I2S1 peripheral clock
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2S2    I2S2 peripheral clock (1)
 593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART1  USART1 peripheral clock
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART2  USART2 peripheral clock (1)(2)
 595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART3  USART3 peripheral clock (1)
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_RNG     RNG peripheral clock    (1)
 597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_TIM15   TIM15 peripheral clock  (1)(2)
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_TIM1    TIM1 peripheral clock   (1)(2)
 599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPTIM1  LPTIM1 peripheral clock (1)
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPTIM2  LPTIM2 peripheral clock (1)
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPUART1 LPUART1 peripheral clock(1)
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LPUART2 LPUART2 peripheral clock(1)
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_CEC     CEC peripheral clock    (1)
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_FDCAN    FDCAN peripheral clock (1)
 605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB      USB peripheral clock   (1)
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @note   (1) Peripheral not available on all devices
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @note   (2) Peripheral Clock configuration not available on all devices
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @retval Frequency in Hz
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** {
 402              		.loc 1 611 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              	.LVL28:
 407 0000 10B5     		push	{r4, lr}
 408              	.LCFI2:
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 4, -8
 411              		.cfi_offset 14, -4
 412 0002 0400     		movs	r4, r0
 413              	.LVL29:
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t frequency = 0U;
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t srcclk;
ARM GAS  /tmp/cc8tq3OU.s 			page 19


 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t pllvco;
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t plln;
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_RNGSEL)
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t rngclk;
 618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t rngdiv;
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_RNGSEL */
 620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Check the parameters */
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClk));
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (PeriphClk == RCC_PERIPHCLK_RTC)
 414              		.loc 1 623 0
 415 0004 8023     		movs	r3, #128
 416 0006 9B02     		lsls	r3, r3, #10
 417 0008 9842     		cmp	r0, r3
 418 000a 21D1     		bne	.L27
 624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Get the current RTC source */
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     srcclk = __HAL_RCC_GET_RTC_SOURCE();
 419              		.loc 1 626 0
 420 000c 8D4A     		ldr	r2, .L71
 421 000e D16D     		ldr	r1, [r2, #92]
 422 0010 C023     		movs	r3, #192
 423 0012 9B00     		lsls	r3, r3, #2
 424 0014 0B40     		ands	r3, r1
 425              	.LVL30:
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check if LSE is ready and if RTC clock selection is LSE */
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_RTCCLKSOURCE_LSE))
 426              		.loc 1 629 0
 427 0016 D26D     		ldr	r2, [r2, #92]
 428 0018 9207     		lsls	r2, r2, #30
 429 001a 04D5     		bpl	.L28
 430              		.loc 1 629 0 is_stmt 0 discriminator 1
 431 001c 8022     		movs	r2, #128
 432 001e 5200     		lsls	r2, r2, #1
 433 0020 9342     		cmp	r3, r2
 434 0022 00D1     		bne	.LCB425
 435 0024 E4E0     		b	.L50	@long jump
 436              	.LCB425:
 437              	.L28:
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       frequency = LSE_VALUE;
 632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check if LSI is ready and if RTC clock selection is LSI */
 634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     else if ((HAL_IS_BIT_SET(RCC->CSR, RCC_CSR_LSIRDY)) && (srcclk == RCC_RTCCLKSOURCE_LSI))
 438              		.loc 1 634 0 is_stmt 1
 439 0026 874A     		ldr	r2, .L71
 440 0028 126E     		ldr	r2, [r2, #96]
 441 002a 9207     		lsls	r2, r2, #30
 442 002c 04D5     		bpl	.L30
 443              		.loc 1 634 0 is_stmt 0 discriminator 1
 444 002e 8022     		movs	r2, #128
 445 0030 9200     		lsls	r2, r2, #2
 446 0032 9342     		cmp	r3, r2
 447 0034 00D1     		bne	.LCB436
 448 0036 DEE0     		b	.L51	@long jump
 449              	.LCB436:
ARM GAS  /tmp/cc8tq3OU.s 			page 20


 450              	.L30:
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       frequency = LSI_VALUE;
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Check if HSE is ready  and if RTC clock selection is HSI_DIV32*/
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_RTCCLKSOURCE_HSE_DIV32))
 451              		.loc 1 639 0 is_stmt 1
 452 0038 824A     		ldr	r2, .L71
 453 003a 1268     		ldr	r2, [r2]
 454 003c 9203     		lsls	r2, r2, #14
 455 003e 00D4     		bmi	.LCB443
 456 0040 DCE0     		b	.L52	@long jump
 457              	.LCB443:
 458              		.loc 1 639 0 is_stmt 0 discriminator 1
 459 0042 C022     		movs	r2, #192
 460 0044 9200     		lsls	r2, r2, #2
 461 0046 9342     		cmp	r3, r2
 462 0048 00D1     		bne	.LCB447
 463 004a D9E0     		b	.L53	@long jump
 464              	.LCB447:
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t srcclk;
 465              		.loc 1 612 0 is_stmt 1
 466 004c 0020     		movs	r0, #0
 467              	.LVL31:
 468 004e F8E0     		b	.L29
 469              	.LVL32:
 470              	.L27:
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       frequency = HSE_VALUE / 32U;
 642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Clock not enabled for RTC*/
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     else
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       /* Nothing to do as frequency already initialized to 0U */
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   else
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Other external peripheral clock source than RTC */
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Compute PLL clock input */
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)  /* HSI ? */
 471              		.loc 1 654 0
 472 0050 7C4B     		ldr	r3, .L71
 473 0052 DB68     		ldr	r3, [r3, #12]
 474 0054 0322     		movs	r2, #3
 475 0056 1340     		ands	r3, r2
 476 0058 022B     		cmp	r3, #2
 477 005a 06D0     		beq	.L54
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       pllvco = HSI_VALUE;
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     else if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)  /* HSE ? */
 478              		.loc 1 658 0
 479 005c 794B     		ldr	r3, .L71
 480 005e DB68     		ldr	r3, [r3, #12]
 481 0060 1340     		ands	r3, r2
ARM GAS  /tmp/cc8tq3OU.s 			page 21


 482 0062 032B     		cmp	r3, #3
 483 0064 03D1     		bne	.L55
 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       pllvco = HSE_VALUE;
 484              		.loc 1 660 0
 485 0066 7848     		ldr	r0, .L71+4
 486              	.LVL33:
 487 0068 02E0     		b	.L31
 488              	.LVL34:
 489              	.L54:
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 490              		.loc 1 656 0
 491 006a 7848     		ldr	r0, .L71+8
 492              	.LVL35:
 493 006c 00E0     		b	.L31
 494              	.LVL36:
 495              	.L55:
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     else /* No source */
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       pllvco = 0U;
 496              		.loc 1 664 0
 497 006e 0020     		movs	r0, #0
 498              	.LVL37:
 499              	.L31:
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* f(PLL Source) / PLLM */
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     pllvco = (pllvco / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U));
 500              		.loc 1 668 0
 501 0070 744B     		ldr	r3, .L71
 502 0072 D968     		ldr	r1, [r3, #12]
 503 0074 0909     		lsrs	r1, r1, #4
 504 0076 0723     		movs	r3, #7
 505 0078 1940     		ands	r1, r3
 506 007a 0131     		adds	r1, r1, #1
 507 007c FFF7FEFF 		bl	__aeabi_uidiv
 508              	.LVL38:
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     switch (PeriphClk)
 509              		.loc 1 670 0
 510 0080 202C     		cmp	r4, #32
 511 0082 6DD0     		beq	.L32
 512 0084 04D8     		bhi	.L33
 513 0086 012C     		cmp	r4, #1
 514 0088 0CD0     		beq	.L34
 515 008a 022C     		cmp	r4, #2
 516 008c 28D0     		beq	.L35
 517 008e B9E0     		b	.L56
 518              	.L33:
 519 0090 8023     		movs	r3, #128
 520 0092 1B01     		lsls	r3, r3, #4
 521 0094 9C42     		cmp	r4, r3
 522 0096 00D1     		bne	.LCB511
 523 0098 7CE0     		b	.L36	@long jump
 524              	.LCB511:
 525 009a 8023     		movs	r3, #128
ARM GAS  /tmp/cc8tq3OU.s 			page 22


 526 009c DB01     		lsls	r3, r3, #7
 527 009e 9C42     		cmp	r4, r3
 528 00a0 3CD0     		beq	.L37
 529 00a2 AFE0     		b	.L56
 530              	.L34:
 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     {
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_RNGSEL)
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_RNG:
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = READ_BIT(RCC->CCIPR, RCC_CCIPR_RNGSEL);
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_RNGCLKSOURCE_HSI_DIV8)  /* HSI_DIV8 ? */
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           rngclk = HSI_VALUE / 8U;
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_RNGCLKSOURCE_PLL) /* PLL ? */
 681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* f(PLLQ) = f(VCO input) * PLLN / PLLQ */
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           rngclk = (pllvco * plln) / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ
 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_RNGCLKSOURCE_SYSCLK) /* SYSCLK ? */
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           rngclk = HAL_RCC_GetSysClockFreq();
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else /* No clock source */
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           rngclk = 0U;
 693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         rngdiv = (1UL << ((READ_BIT(RCC->CCIPR, RCC_CCIPR_RNGDIV)) >> RCC_CCIPR_RNGDIV_Pos));
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         frequency = (rngclk / rngdiv);
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
 699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif  /* RCC_CCIPR_RNGSEL */
 700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_USART1:
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Get the current USART1 source */
 702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_USART1_SOURCE();
 531              		.loc 1 702 0
 532 00a4 674B     		ldr	r3, .L71
 533 00a6 5B6D     		ldr	r3, [r3, #84]
 534 00a8 0322     		movs	r2, #3
 535 00aa 1340     		ands	r3, r2
 536              	.LVL39:
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_USART1CLKSOURCE_PCLK1)            /* PCLK1 ? */
 537              		.loc 1 704 0
 538 00ac 02D1     		bne	.L38
 705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
 539              		.loc 1 706 0
 540 00ae FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 541              	.LVL40:
 542 00b2 C6E0     		b	.L29
 543              	.LVL41:
 544              	.L38:
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_USART1CLKSOURCE_SYSCLK)     /* SYSCLK ? */
ARM GAS  /tmp/cc8tq3OU.s 			page 23


 545              		.loc 1 708 0
 546 00b4 012B     		cmp	r3, #1
 547 00b6 02D1     		bne	.L39
 709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
 548              		.loc 1 710 0
 549 00b8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 550              	.LVL42:
 551 00bc C1E0     		b	.L29
 552              	.LVL43:
 553              	.L39:
 711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_USART1CLKSOURCE_HSI))
 554              		.loc 1 712 0
 555 00be 614A     		ldr	r2, .L71
 556 00c0 1268     		ldr	r2, [r2]
 557 00c2 5205     		lsls	r2, r2, #21
 558 00c4 02D5     		bpl	.L40
 559              		.loc 1 712 0 is_stmt 0 discriminator 1
 560 00c6 022B     		cmp	r3, #2
 561 00c8 00D1     		bne	.LCB560
 562 00ca 9DE0     		b	.L57	@long jump
 563              	.LCB560:
 564              	.L40:
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HSI_VALUE;
 715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_USART1CLKSOURCE_LSE
 565              		.loc 1 716 0 is_stmt 1
 566 00cc 5D4A     		ldr	r2, .L71
 567 00ce D26D     		ldr	r2, [r2, #92]
 568 00d0 9207     		lsls	r2, r2, #30
 569 00d2 00D4     		bmi	.LCB567
 570 00d4 9AE0     		b	.L58	@long jump
 571              	.LCB567:
 572              		.loc 1 716 0 is_stmt 0 discriminator 1
 573 00d6 032B     		cmp	r3, #3
 574 00d8 00D1     		bne	.LCB569
 575 00da 99E0     		b	.L59	@long jump
 576              	.LCB569:
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t srcclk;
 577              		.loc 1 612 0 is_stmt 1
 578 00dc 0020     		movs	r0, #0
 579              	.LVL44:
 580 00de B0E0     		b	.L29
 581              	.LVL45:
 582              	.L35:
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = LSE_VALUE;
 719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Clock not enabled for USART1 */
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
 724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
 726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_USART2SEL)
ARM GAS  /tmp/cc8tq3OU.s 			page 24


 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_USART2:
 728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Get the current USART2 source */
 729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_USART2_SOURCE();
 583              		.loc 1 729 0
 584 00e0 584B     		ldr	r3, .L71
 585 00e2 5B6D     		ldr	r3, [r3, #84]
 586 00e4 0C22     		movs	r2, #12
 587 00e6 1340     		ands	r3, r2
 588              	.LVL46:
 730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_USART2CLKSOURCE_PCLK1)
 589              		.loc 1 731 0
 590 00e8 02D1     		bne	.L41
 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
 591              		.loc 1 733 0
 592 00ea FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 593              	.LVL47:
 594 00ee A8E0     		b	.L29
 595              	.LVL48:
 596              	.L41:
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_USART2CLKSOURCE_SYSCLK)
 597              		.loc 1 735 0
 598 00f0 042B     		cmp	r3, #4
 599 00f2 02D1     		bne	.L42
 736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
 600              		.loc 1 737 0
 601 00f4 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 602              	.LVL49:
 603 00f8 A3E0     		b	.L29
 604              	.LVL50:
 605              	.L42:
 738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_USART2CLKSOURCE_HSI))
 606              		.loc 1 739 0
 607 00fa 524A     		ldr	r2, .L71
 608 00fc 1268     		ldr	r2, [r2]
 609 00fe 5205     		lsls	r2, r2, #21
 610 0100 02D5     		bpl	.L43
 611              		.loc 1 739 0 is_stmt 0 discriminator 1
 612 0102 082B     		cmp	r3, #8
 613 0104 00D1     		bne	.LCB618
 614 0106 86E0     		b	.L60	@long jump
 615              	.LCB618:
 616              	.L43:
 740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HSI_VALUE;
 742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_USART2CLKSOURCE_LSE
 617              		.loc 1 743 0 is_stmt 1
 618 0108 4E4A     		ldr	r2, .L71
 619 010a D26D     		ldr	r2, [r2, #92]
 620 010c 9207     		lsls	r2, r2, #30
 621 010e 00D4     		bmi	.LCB625
 622 0110 83E0     		b	.L61	@long jump
ARM GAS  /tmp/cc8tq3OU.s 			page 25


 623              	.LCB625:
 624              		.loc 1 743 0 is_stmt 0 discriminator 1
 625 0112 0C2B     		cmp	r3, #12
 626 0114 00D1     		bne	.LCB627
 627 0116 82E0     		b	.L62	@long jump
 628              	.LCB627:
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t srcclk;
 629              		.loc 1 612 0 is_stmt 1
 630 0118 0020     		movs	r0, #0
 631              	.LVL51:
 632 011a 92E0     		b	.L29
 633              	.LVL52:
 634              	.L37:
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = LSE_VALUE;
 746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Clock not enabled for USART2 */
 748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else
 749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
 751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_USART2SEL */
 754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_USART3SEL)
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_USART3:
 757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Get the current USART3 source */
 758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_USART3_SOURCE();
 759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_USART3CLKSOURCE_PCLK1)
 761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
 763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_USART3CLKSOURCE_SYSCLK)
 765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
 767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_USART3CLKSOURCE_HSI))
 769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HSI_VALUE;
 771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_USART3CLKSOURCE_LSE
 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = LSE_VALUE;
 775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Clock not enabled for USART3 */
 777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else
 778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
 780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
 782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_USART3SEL */
 783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_CECSEL)
 785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_CEC:
 786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Get the current CEC source */
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_CEC_SOURCE();
ARM GAS  /tmp/cc8tq3OU.s 			page 26


 788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_CECCLKSOURCE_HSI_DIV488))
 790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = (HSI_VALUE / 488U);
 792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_CECCLKSOURCE_LSE))
 794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = LSE_VALUE;
 796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Clock not enabled for CEC */
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else
 799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
 801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_CECSEL */
 804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_LPUART1SEL)
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_LPUART1:
 807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Get the current LPUART1 source */
 808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_LPUART1_SOURCE();
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_LPUART1CLKSOURCE_PCLK1)
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
 813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_LPUART1CLKSOURCE_SYSCLK)
 815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_LPUART1CLKSOURCE_HSI))
 819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HSI_VALUE;
 821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_LPUART1CLKSOURCE_LS
 823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = LSE_VALUE;
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Clock not enabled for LPUART1 */
 827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else
 828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
 830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
 832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_LPUART1SEL */
 833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_LPUART2SEL)
 835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_LPUART2:
 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Get the current LPUART2 source */
 837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_LPUART2_SOURCE();
 838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_LPUART2CLKSOURCE_PCLK1)
 840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_LPUART2CLKSOURCE_SYSCLK)
 844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
ARM GAS  /tmp/cc8tq3OU.s 			page 27


 845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
 846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_LPUART2CLKSOURCE_HSI))
 848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HSI_VALUE;
 850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_LPUART2CLKSOURCE_LS
 852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = LSE_VALUE;
 854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Clock not enabled for LPUART2 */
 856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else
 857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
 859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
 861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_LPUART2SEL */
 862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_ADC:
 864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_ADC_SOURCE();
 635              		.loc 1 865 0
 636 011c 494B     		ldr	r3, .L71
 637 011e 5B6D     		ldr	r3, [r3, #84]
 638 0120 9B0F     		lsrs	r3, r3, #30
 639 0122 9B07     		lsls	r3, r3, #30
 640              	.LVL53:
 866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_ADCCLKSOURCE_SYSCLK)
 641              		.loc 1 867 0
 642 0124 02D1     		bne	.L44
 868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
 643              		.loc 1 869 0
 644 0126 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 645              	.LVL54:
 646 012a 8AE0     		b	.L29
 647              	.LVL55:
 648              	.L44:
 870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_ADCCLKSOURCE_HSI)
 649              		.loc 1 871 0
 650 012c 8022     		movs	r2, #128
 651 012e 1206     		lsls	r2, r2, #24
 652 0130 9342     		cmp	r3, r2
 653 0132 77D0     		beq	.L63
 872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HSI_VALUE;
 874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_ADCCLKSOURCE_PLLADC)
 654              		.loc 1 875 0
 655 0134 8022     		movs	r2, #128
 656 0136 D205     		lsls	r2, r2, #23
 657 0138 9342     		cmp	r3, r2
 658 013a 75D1     		bne	.L64
 876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           if (__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLLPCLK) != 0U)
ARM GAS  /tmp/cc8tq3OU.s 			page 28


 659              		.loc 1 877 0
 660 013c 414B     		ldr	r3, .L71
 661              	.LVL56:
 662 013e DB68     		ldr	r3, [r3, #12]
 663 0140 DB03     		lsls	r3, r3, #15
 664 0142 73D5     		bpl	.L65
 878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           {
 879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             /* f(PLLP) = f(VCO input) * PLLN / PLLP */
 880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 665              		.loc 1 880 0
 666 0144 3F4A     		ldr	r2, .L71
 667 0146 D368     		ldr	r3, [r2, #12]
 668 0148 1B0A     		lsrs	r3, r3, #8
 669 014a 7F21     		movs	r1, #127
 670 014c 0B40     		ands	r3, r1
 671              	.LVL57:
 881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             frequency = (pllvco * plln) / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR
 672              		.loc 1 881 0
 673 014e 5843     		muls	r0, r3
 674              	.LVL58:
 675 0150 D168     		ldr	r1, [r2, #12]
 676 0152 490C     		lsrs	r1, r1, #17
 677 0154 1F23     		movs	r3, #31
 678              	.LVL59:
 679 0156 1940     		ands	r1, r3
 680 0158 0131     		adds	r1, r1, #1
 681 015a FFF7FEFF 		bl	__aeabi_uidiv
 682              	.LVL60:
 683 015e 70E0     		b	.L29
 684              	.LVL61:
 685              	.L32:
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           }
 883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Clock not enabled for ADC */
 885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else
 886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
 888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
 890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_I2C1:
 892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Get the current I2C1 source */
 893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_I2C1_SOURCE();
 686              		.loc 1 893 0
 687 0160 384B     		ldr	r3, .L71
 688 0162 5A6D     		ldr	r2, [r3, #84]
 689 0164 C023     		movs	r3, #192
 690 0166 9B01     		lsls	r3, r3, #6
 691 0168 1340     		ands	r3, r2
 692              	.LVL62:
 894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_I2C1CLKSOURCE_PCLK1)
 693              		.loc 1 895 0
 694 016a 02D1     		bne	.L45
 896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
 695              		.loc 1 897 0
ARM GAS  /tmp/cc8tq3OU.s 			page 29


 696 016c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 697              	.LVL63:
 698 0170 67E0     		b	.L29
 699              	.LVL64:
 700              	.L45:
 898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_I2C1CLKSOURCE_SYSCLK)
 701              		.loc 1 899 0
 702 0172 8022     		movs	r2, #128
 703 0174 5201     		lsls	r2, r2, #5
 704 0176 9342     		cmp	r3, r2
 705 0178 02D1     		bne	.L46
 900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
 706              		.loc 1 901 0
 707 017a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 708              	.LVL65:
 709 017e 60E0     		b	.L29
 710              	.LVL66:
 711              	.L46:
 902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2C1CLKSOURCE_HSI))
 712              		.loc 1 903 0
 713 0180 304A     		ldr	r2, .L71
 714 0182 1268     		ldr	r2, [r2]
 715 0184 5205     		lsls	r2, r2, #21
 716 0186 53D5     		bpl	.L66
 717              		.loc 1 903 0 is_stmt 0 discriminator 1
 718 0188 8022     		movs	r2, #128
 719 018a 9201     		lsls	r2, r2, #6
 720 018c 9342     		cmp	r3, r2
 721 018e 51D0     		beq	.L67
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t srcclk;
 722              		.loc 1 612 0 is_stmt 1
 723 0190 0020     		movs	r0, #0
 724              	.LVL67:
 725 0192 56E0     		b	.L29
 726              	.LVL68:
 727              	.L36:
 904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HSI_VALUE;
 906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Clock not enabled for I2C1 */
 908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else
 909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
 911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
 913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_I2C2SEL)
 915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_I2C2:
 916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Get the current I2C2 source */
 917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_I2C2_SOURCE();
 918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_I2C2CLKSOURCE_PCLK1)
 920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
ARM GAS  /tmp/cc8tq3OU.s 			page 30


 922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_I2C2CLKSOURCE_SYSCLK)
 924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
 926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2C2CLKSOURCE_HSI))
 928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HSI_VALUE;
 930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Clock not enabled for I2C2 */
 932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else
 933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
 935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
 937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_I2C2SEL */
 938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_I2S1:
 940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Get the current I2S1 source */
 941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_I2S1_SOURCE();
 728              		.loc 1 941 0
 729 0194 2B4B     		ldr	r3, .L71
 730 0196 5A6D     		ldr	r2, [r3, #84]
 731 0198 C023     		movs	r3, #192
 732 019a 1B02     		lsls	r3, r3, #8
 733 019c 1340     		ands	r3, r2
 734              	.LVL69:
 942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_I2S1CLKSOURCE_PLL)
 735              		.loc 1 943 0
 736 019e 8022     		movs	r2, #128
 737 01a0 D201     		lsls	r2, r2, #7
 738 01a2 9342     		cmp	r3, r2
 739 01a4 11D1     		bne	.L47
 944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           if (__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLLPCLK) != 0U)
 740              		.loc 1 945 0
 741 01a6 274B     		ldr	r3, .L71
 742              	.LVL70:
 743 01a8 DB68     		ldr	r3, [r3, #12]
 744 01aa DB03     		lsls	r3, r3, #15
 745 01ac 44D5     		bpl	.L68
 946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           {
 947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             /* f(PLLP) = f(VCO input) * PLLN / PLLP */
 948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 746              		.loc 1 948 0
 747 01ae 254A     		ldr	r2, .L71
 748 01b0 D368     		ldr	r3, [r2, #12]
 749 01b2 1B0A     		lsrs	r3, r3, #8
 750 01b4 7F21     		movs	r1, #127
 751 01b6 0B40     		ands	r3, r1
 752              	.LVL71:
 949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             frequency = (pllvco * plln) / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR
 753              		.loc 1 949 0
 754 01b8 5843     		muls	r0, r3
 755              	.LVL72:
 756 01ba D168     		ldr	r1, [r2, #12]
ARM GAS  /tmp/cc8tq3OU.s 			page 31


 757 01bc 490C     		lsrs	r1, r1, #17
 758 01be 1F23     		movs	r3, #31
 759              	.LVL73:
 760 01c0 1940     		ands	r1, r3
 761 01c2 0131     		adds	r1, r1, #1
 762 01c4 FFF7FEFF 		bl	__aeabi_uidiv
 763              	.LVL74:
 764 01c8 3BE0     		b	.L29
 765              	.LVL75:
 766              	.L47:
 950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           }
 951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_I2S1CLKSOURCE_SYSCLK)
 767              		.loc 1 952 0
 768 01ca 002B     		cmp	r3, #0
 769 01cc 02D1     		bne	.L48
 953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
 770              		.loc 1 954 0
 771 01ce FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 772              	.LVL76:
 773 01d2 36E0     		b	.L29
 774              	.LVL77:
 775              	.L48:
 955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2S1CLKSOURCE_HSI))
 776              		.loc 1 956 0
 777 01d4 1B4A     		ldr	r2, .L71
 778 01d6 1268     		ldr	r2, [r2]
 779 01d8 5205     		lsls	r2, r2, #21
 780 01da 03D5     		bpl	.L49
 781              		.loc 1 956 0 is_stmt 0 discriminator 1
 782 01dc 8022     		movs	r2, #128
 783 01de 1202     		lsls	r2, r2, #8
 784 01e0 9342     		cmp	r3, r2
 785 01e2 2BD0     		beq	.L69
 786              	.L49:
 957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HSI_VALUE;
 959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_I2S1CLKSOURCE_EXT)
 787              		.loc 1 960 0 is_stmt 1
 788 01e4 C022     		movs	r2, #192
 789 01e6 1202     		lsls	r2, r2, #8
 790 01e8 9342     		cmp	r3, r2
 791 01ea 29D0     		beq	.L70
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t srcclk;
 792              		.loc 1 612 0
 793 01ec 0020     		movs	r0, #0
 794              	.LVL78:
 795 01ee 28E0     		b	.L29
 796              	.LVL79:
 797              	.L50:
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 798              		.loc 1 631 0
 799 01f0 8020     		movs	r0, #128
 800              	.LVL80:
ARM GAS  /tmp/cc8tq3OU.s 			page 32


 801 01f2 0002     		lsls	r0, r0, #8
 802 01f4 25E0     		b	.L29
 803              	.LVL81:
 804              	.L51:
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 805              		.loc 1 636 0
 806 01f6 FA20     		movs	r0, #250
 807              	.LVL82:
 808 01f8 C001     		lsls	r0, r0, #7
 809 01fa 22E0     		b	.L29
 810              	.LVL83:
 811              	.L52:
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t srcclk;
 812              		.loc 1 612 0
 813 01fc 0020     		movs	r0, #0
 814              	.LVL84:
 815 01fe 20E0     		b	.L29
 816              	.LVL85:
 817              	.L53:
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
 818              		.loc 1 641 0
 819 0200 1348     		ldr	r0, .L71+12
 820              	.LVL86:
 821 0202 1EE0     		b	.L29
 822              	.LVL87:
 823              	.L56:
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t srcclk;
 824              		.loc 1 612 0
 825 0204 0020     		movs	r0, #0
 826              	.LVL88:
 827 0206 1CE0     		b	.L29
 828              	.LVL89:
 829              	.L57:
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 830              		.loc 1 714 0
 831 0208 1048     		ldr	r0, .L71+8
 832              	.LVL90:
 833 020a 1AE0     		b	.L29
 834              	.LVL91:
 835              	.L58:
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t srcclk;
 836              		.loc 1 612 0
 837 020c 0020     		movs	r0, #0
 838              	.LVL92:
 839 020e 18E0     		b	.L29
 840              	.LVL93:
 841              	.L59:
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 842              		.loc 1 718 0
 843 0210 8020     		movs	r0, #128
 844              	.LVL94:
 845 0212 0002     		lsls	r0, r0, #8
 846 0214 15E0     		b	.L29
 847              	.LVL95:
 848              	.L60:
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 849              		.loc 1 741 0
ARM GAS  /tmp/cc8tq3OU.s 			page 33


 850 0216 0D48     		ldr	r0, .L71+8
 851              	.LVL96:
 852 0218 13E0     		b	.L29
 853              	.LVL97:
 854              	.L61:
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t srcclk;
 855              		.loc 1 612 0
 856 021a 0020     		movs	r0, #0
 857              	.LVL98:
 858 021c 11E0     		b	.L29
 859              	.LVL99:
 860              	.L62:
 745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 861              		.loc 1 745 0
 862 021e 8020     		movs	r0, #128
 863              	.LVL100:
 864 0220 0002     		lsls	r0, r0, #8
 865 0222 0EE0     		b	.L29
 866              	.LVL101:
 867              	.L63:
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 868              		.loc 1 873 0
 869 0224 0948     		ldr	r0, .L71+8
 870              	.LVL102:
 871 0226 0CE0     		b	.L29
 872              	.LVL103:
 873              	.L64:
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t srcclk;
 874              		.loc 1 612 0
 875 0228 0020     		movs	r0, #0
 876              	.LVL104:
 877 022a 0AE0     		b	.L29
 878              	.LVL105:
 879              	.L65:
 880 022c 0020     		movs	r0, #0
 881              	.LVL106:
 882 022e 08E0     		b	.L29
 883              	.LVL107:
 884              	.L66:
 885 0230 0020     		movs	r0, #0
 886              	.LVL108:
 887 0232 06E0     		b	.L29
 888              	.LVL109:
 889              	.L67:
 905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 890              		.loc 1 905 0
 891 0234 0548     		ldr	r0, .L71+8
 892              	.LVL110:
 893 0236 04E0     		b	.L29
 894              	.LVL111:
 895              	.L68:
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   uint32_t srcclk;
 896              		.loc 1 612 0
 897 0238 0020     		movs	r0, #0
 898              	.LVL112:
 899 023a 02E0     		b	.L29
 900              	.LVL113:
ARM GAS  /tmp/cc8tq3OU.s 			page 34


 901              	.L69:
 958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 902              		.loc 1 958 0
 903 023c 0348     		ldr	r0, .L71+8
 904              	.LVL114:
 905 023e 00E0     		b	.L29
 906              	.LVL115:
 907              	.L70:
 961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* External clock used.*/
 963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = EXTERNAL_I2S1_CLOCK_VALUE;
 908              		.loc 1 963 0
 909 0240 0448     		ldr	r0, .L71+16
 910              	.LVL116:
 911              	.L29:
 964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Clock not enabled for I2S1 */
 966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else
 967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
 969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
 971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR2_I2S2SEL)
 973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_I2S2:
 974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Get the current I2S2 source */
 975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_I2S2_SOURCE();
 976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_I2S2CLKSOURCE_PLL)
 978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           if (__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLLPCLK) != 0U)
 980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           {
 981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             /* f(PLLP) = f(VCO input) * PLLN / PLLP */
 982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             frequency = (pllvco * plln) / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR
 984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           }
 985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_I2S2CLKSOURCE_SYSCLK)
 987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetSysClockFreq();
 989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2S2CLKSOURCE_HSI))
 991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HSI_VALUE;
 993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_I2S2CLKSOURCE_EXT)
 995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
 996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* External clock used.*/
 997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = EXTERNAL_I2S2_CLOCK_VALUE;
 998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
 999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Clock not enabled for I2S2 */
1000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else
1001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
1003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
1005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR2_I2S2SEL */
ARM GAS  /tmp/cc8tq3OU.s 			page 35


1006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_LPTIM1SEL)
1008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_LPTIM1:
1009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Get the current LPTIM1 source */
1010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_LPTIM1_SOURCE();
1011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_LPTIM1CLKSOURCE_PCLK1)
1013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CSR, RCC_CSR_LSIRDY)) && (srcclk == RCC_LPTIM1CLKSOURCE_LSI))
1017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = LSI_VALUE;
1019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_LPTIM1CLKSOURCE_HSI))
1021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HSI_VALUE;
1023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_LPTIM1CLKSOURCE_LSE
1025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = LSE_VALUE;
1027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Clock not enabled for LPTIM1 */
1029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else
1030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
1032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
1034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_LPTIM1SEL */
1035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_LPTIM2SEL)
1037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_LPTIM2:
1038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Get the current LPTIM2 source */
1039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = __HAL_RCC_GET_LPTIM2_SOURCE();
1040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_LPTIM2CLKSOURCE_PCLK1)
1042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CSR, RCC_CSR_LSIRDY)) && (srcclk == RCC_LPTIM2CLKSOURCE_LSI))
1046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = LSI_VALUE;
1048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_LPTIM2CLKSOURCE_HSI))
1050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HSI_VALUE;
1052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_LPTIM2CLKSOURCE_LSE
1054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = LSE_VALUE;
1056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         /* Clock not enabled for LPTIM2 */
1058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else
1059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
1061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
ARM GAS  /tmp/cc8tq3OU.s 			page 36


1063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_LPTIM2SEL */
1064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_TIM1SEL)
1066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_TIM1:
1067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = READ_BIT(RCC->CCIPR, RCC_CCIPR_TIM1SEL);
1069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_TIM1CLKSOURCE_PLL) /* PLL ? */
1071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           if (__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLLQCLK) != 0U)
1073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           {
1074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             /* f(PLLQ) = f(VCO input) * PLLN / PLLQ */
1075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
1076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             frequency = (pllvco * plln) / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR
1077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           }
1078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_TIM1CLKSOURCE_PCLK1) /* PCLK1 ? */
1080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else /* No clock source */
1084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
1086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
1088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_TIM1SEL */
1089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR_TIM15SEL)
1091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_TIM15:
1092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = READ_BIT(RCC->CCIPR, RCC_CCIPR_TIM15SEL);
1094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_TIM15CLKSOURCE_PLL) /* PLL ? */
1096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           if (__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLLQCLK) != 0U)
1098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           {
1099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             /* f(PLLQ) = f(VCO input) * PLLN / PLLQ */
1100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
1101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             frequency = (pllvco * plln) / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR
1102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           }
1103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_TIM15CLKSOURCE_PCLK1) /* PCLK1 ? */
1105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else /* No clock source */
1109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
1111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
1113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR_TIM15SEL */
1114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR2_USBSEL)
1116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_USB:
1117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = READ_BIT(RCC->CCIPR2, RCC_CCIPR2_USBSEL);
1119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
ARM GAS  /tmp/cc8tq3OU.s 			page 37


1120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_USBCLKSOURCE_PLL) /* PLL ? */
1121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           if (__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLLQCLK) != 0U)
1123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           {
1124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             /* f(PLLQ) = f(VCO input) * PLLN / PLLQ */
1125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
1126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             frequency = (pllvco * plln) / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR
1127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           }
1128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_HSI48_SUPPORT)
1130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_USBCLKSOURCE_HSI48) /* HSI48 ? */
1131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSI48RDY)) && (srcclk == RCC_USBCLKSOURCE_HSI48))
1133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           {
1134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             frequency = HSI48_VALUE;
1135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           }
1136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_HSI48_SUPPORT */
1138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_USBCLKSOURCE_HSE)
1139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_USBCLKSOURCE_HSE))
1141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           {
1142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             frequency = HSE_VALUE;
1143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           }
1144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else /* No clock source */
1146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
1148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
1150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR2_USBSEL */
1151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #if defined(RCC_CCIPR2_FDCANSEL)
1153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       case RCC_PERIPHCLK_FDCAN:
1154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         srcclk = READ_BIT(RCC->CCIPR2, RCC_CCIPR2_FDCANSEL);
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         if (srcclk == RCC_FDCANCLKSOURCE_PLL) /* PLL ? */
1158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           if (__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLLQCLK) != 0U)
1160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           {
1161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             /* f(PLLQ) = f(VCO input) * PLLN / PLLQ */
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             plln = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
1163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****             frequency = (pllvco * plln) / ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR
1164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           }
1165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if (srcclk == RCC_FDCANCLKSOURCE_PCLK1) /* PCLK1 ? */
1167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HAL_RCC_GetPCLK1Freq();
1169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_FDCANCLKSOURCE_HSE))
1171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           frequency = HSE_VALUE;
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         else /* No clock source */
1175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         {
1176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****           /* Nothing to do as frequency already initialized to 0U */
ARM GAS  /tmp/cc8tq3OU.s 			page 38


1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         }
1178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
1179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** #endif /* RCC_CCIPR2_FDCANSEL */
1180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****       default:
1182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****         break;
1183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     }
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
1185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   return (frequency);
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** }
 912              		.loc 1 1187 0
 913              		@ sp needed
 914              	.LVL117:
 915 0242 10BD     		pop	{r4, pc}
 916              	.L72:
 917              		.align	2
 918              	.L71:
 919 0244 00100240 		.word	1073876992
 920 0248 00127A00 		.word	8000000
 921 024c 0024F400 		.word	16000000
 922 0250 90D00300 		.word	250000
 923 0254 80BB0000 		.word	48000
 924              		.cfi_endproc
 925              	.LFE312:
 927              		.section	.text.HAL_RCCEx_EnableLSCO,"ax",%progbits
 928              		.align	2
 929              		.global	HAL_RCCEx_EnableLSCO
 930              		.code	16
 931              		.thumb_func
 933              	HAL_RCCEx_EnableLSCO:
 934              	.LFB313:
1188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /**
1190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @}
1191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
1192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions_Group2 Extended Clock management functions
1194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *  @brief  Extended Clock management functions
1195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *
1196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** @verbatim
1197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****  ===============================================================================
1198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****                 ##### Extended clock management functions  #####
1199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****  ===============================================================================
1200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     [..]
1201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     This subsection provides a set of functions allowing to control the
1202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     activation or deactivation of LSE CSS, Low speed clock output and
1203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     clock after wake-up from STOP mode.
1204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** @endverbatim
1205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @{
1206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
1207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /**
1209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @brief  Select the Low Speed clock source to output on LSCO pin (PA2).
1210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @param  LSCOSource  specifies the Low Speed clock source to output.
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *          This parameter can be one of the following values:
1212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_LSCOSOURCE_LSI  LSI clock selected as LSCO source
ARM GAS  /tmp/cc8tq3OU.s 			page 39


1213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_LSCOSOURCE_LSE  LSE clock selected as LSCO source
1214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @retval None
1215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
1216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** void HAL_RCCEx_EnableLSCO(uint32_t LSCOSource)
1217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** {
 935              		.loc 1 1217 0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 32
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939              	.LVL118:
 940 0000 30B5     		push	{r4, r5, lr}
 941              	.LCFI3:
 942              		.cfi_def_cfa_offset 12
 943              		.cfi_offset 4, -12
 944              		.cfi_offset 5, -8
 945              		.cfi_offset 14, -4
 946 0002 89B0     		sub	sp, sp, #36
 947              	.LCFI4:
 948              		.cfi_def_cfa_offset 48
 949 0004 0400     		movs	r4, r0
 950              	.LVL119:
 951              	.LBB5:
1218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   GPIO_InitTypeDef GPIO_InitStruct;
1219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   FlagStatus       pwrclkchanged = RESET;
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   FlagStatus       backupchanged = RESET;
1221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Check the parameters */
1223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   assert_param(IS_RCC_LSCOSOURCE(LSCOSource));
1224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* LSCO Pin Clock Enable */
1226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   LSCO_CLK_ENABLE();
 952              		.loc 1 1226 0
 953 0006 214D     		ldr	r5, .L80
 954 0008 6A6B     		ldr	r2, [r5, #52]
 955 000a 0121     		movs	r1, #1
 956 000c 0A43     		orrs	r2, r1
 957 000e 6A63     		str	r2, [r5, #52]
 958 0010 6B6B     		ldr	r3, [r5, #52]
 959 0012 0B40     		ands	r3, r1
 960 0014 0193     		str	r3, [sp, #4]
 961 0016 019B     		ldr	r3, [sp, #4]
 962              	.LBE5:
1227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Configure the LSCO pin in analog mode */
1229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   GPIO_InitStruct.Pin = LSCO_PIN;
 963              		.loc 1 1229 0
 964 0018 0423     		movs	r3, #4
 965 001a 0393     		str	r3, [sp, #12]
1230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 966              		.loc 1 1230 0
 967 001c 013B     		subs	r3, r3, #1
 968 001e 0493     		str	r3, [sp, #16]
1231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 969              		.loc 1 1231 0
 970 0020 0693     		str	r3, [sp, #24]
1232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 971              		.loc 1 1232 0
ARM GAS  /tmp/cc8tq3OU.s 			page 40


 972 0022 0023     		movs	r3, #0
 973 0024 0593     		str	r3, [sp, #20]
1233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   HAL_GPIO_Init(LSCO_GPIO_PORT, &GPIO_InitStruct);
 974              		.loc 1 1233 0
 975 0026 03A9     		add	r1, sp, #12
 976 0028 A020     		movs	r0, #160
 977              	.LVL120:
 978 002a C005     		lsls	r0, r0, #23
 979 002c FFF7FEFF 		bl	HAL_GPIO_Init
 980              	.LVL121:
1234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Update LSCOSEL clock source in Backup Domain control register */
1236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 981              		.loc 1 1236 0
 982 0030 EB6B     		ldr	r3, [r5, #60]
 983 0032 DB00     		lsls	r3, r3, #3
 984 0034 0AD4     		bmi	.L78
 985              	.LBB6:
1237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
1238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 986              		.loc 1 1238 0
 987 0036 E96B     		ldr	r1, [r5, #60]
 988 0038 8023     		movs	r3, #128
 989 003a 5B05     		lsls	r3, r3, #21
 990 003c 1943     		orrs	r1, r3
 991 003e E963     		str	r1, [r5, #60]
 992 0040 EA6B     		ldr	r2, [r5, #60]
 993 0042 1340     		ands	r3, r2
 994 0044 0293     		str	r3, [sp, #8]
 995 0046 029B     		ldr	r3, [sp, #8]
 996              	.LVL122:
 997              	.LBE6:
1239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 998              		.loc 1 1239 0
 999 0048 0125     		movs	r5, #1
 1000 004a 00E0     		b	.L74
 1001              	.LVL123:
 1002              	.L78:
1219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   FlagStatus       backupchanged = RESET;
 1003              		.loc 1 1219 0
 1004 004c 0025     		movs	r5, #0
 1005              	.LVL124:
 1006              	.L74:
1240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
1241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 1007              		.loc 1 1241 0
 1008 004e 104B     		ldr	r3, .L80+4
 1009 0050 1B68     		ldr	r3, [r3]
 1010 0052 DB05     		lsls	r3, r3, #23
 1011 0054 03D4     		bmi	.L79
1242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
1243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     HAL_PWR_EnableBkUpAccess();
 1012              		.loc 1 1243 0
 1013 0056 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 1014              	.LVL125:
1244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     backupchanged = SET;
 1015              		.loc 1 1244 0
ARM GAS  /tmp/cc8tq3OU.s 			page 41


 1016 005a 0121     		movs	r1, #1
 1017 005c 00E0     		b	.L75
 1018              	.LVL126:
 1019              	.L79:
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 1020              		.loc 1 1220 0
 1021 005e 0021     		movs	r1, #0
 1022              	.LVL127:
 1023              	.L75:
1245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
1246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_LSCOSEL | RCC_BDCR_LSCOEN, LSCOSource | RCC_BDCR_LSCOEN);
 1024              		.loc 1 1247 0
 1025 0060 0A4A     		ldr	r2, .L80
 1026 0062 D06D     		ldr	r0, [r2, #92]
 1027 0064 0B4B     		ldr	r3, .L80+8
 1028 0066 0340     		ands	r3, r0
 1029 0068 1C43     		orrs	r4, r3
 1030              	.LVL128:
 1031 006a 8023     		movs	r3, #128
 1032 006c 5B04     		lsls	r3, r3, #17
 1033 006e 1C43     		orrs	r4, r3
 1034 0070 D465     		str	r4, [r2, #92]
1248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (backupchanged == SET)
 1035              		.loc 1 1249 0
 1036 0072 0129     		cmp	r1, #1
 1037 0074 01D1     		bne	.L76
1250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
1251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     HAL_PWR_DisableBkUpAccess();
 1038              		.loc 1 1251 0
 1039 0076 FFF7FEFF 		bl	HAL_PWR_DisableBkUpAccess
 1040              	.LVL129:
 1041              	.L76:
1252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
1253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (pwrclkchanged == SET)
 1042              		.loc 1 1253 0
 1043 007a 012D     		cmp	r5, #1
 1044 007c 04D1     		bne	.L73
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
1255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_DISABLE();
 1045              		.loc 1 1255 0
 1046 007e 034A     		ldr	r2, .L80
 1047 0080 D16B     		ldr	r1, [r2, #60]
 1048 0082 054B     		ldr	r3, .L80+12
 1049 0084 0B40     		ands	r3, r1
 1050 0086 D363     		str	r3, [r2, #60]
 1051              	.L73:
1256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
1257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** }
 1052              		.loc 1 1257 0
 1053 0088 09B0     		add	sp, sp, #36
 1054              		@ sp needed
 1055              	.LVL130:
 1056 008a 30BD     		pop	{r4, r5, pc}
 1057              	.L81:
 1058              		.align	2
ARM GAS  /tmp/cc8tq3OU.s 			page 42


 1059              	.L80:
 1060 008c 00100240 		.word	1073876992
 1061 0090 00700040 		.word	1073770496
 1062 0094 FFFFFFFC 		.word	-50331649
 1063 0098 FFFFFFEF 		.word	-268435457
 1064              		.cfi_endproc
 1065              	.LFE313:
 1067              		.section	.text.HAL_RCCEx_DisableLSCO,"ax",%progbits
 1068              		.align	2
 1069              		.global	HAL_RCCEx_DisableLSCO
 1070              		.code	16
 1071              		.thumb_func
 1073              	HAL_RCCEx_DisableLSCO:
 1074              	.LFB314:
1258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** /**
1260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @brief  Disable the Low Speed clock output.
1261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   * @retval None
1262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   */
1263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** void HAL_RCCEx_DisableLSCO(void)
1264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** {
 1075              		.loc 1 1264 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 8
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079 0000 10B5     		push	{r4, lr}
 1080              	.LCFI5:
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 4, -8
 1083              		.cfi_offset 14, -4
 1084 0002 82B0     		sub	sp, sp, #8
 1085              	.LCFI6:
 1086              		.cfi_def_cfa_offset 16
 1087              	.LVL131:
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   FlagStatus       pwrclkchanged = RESET;
1266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   FlagStatus       backupchanged = RESET;
1267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Update LSCOEN bit in Backup Domain control register */
1269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 1088              		.loc 1 1269 0
 1089 0004 154B     		ldr	r3, .L89
 1090 0006 DB6B     		ldr	r3, [r3, #60]
 1091 0008 DB00     		lsls	r3, r3, #3
 1092 000a 0BD4     		bmi	.L87
 1093              	.LBB7:
1270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
1271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 1094              		.loc 1 1271 0
 1095 000c 134A     		ldr	r2, .L89
 1096 000e D16B     		ldr	r1, [r2, #60]
 1097 0010 8023     		movs	r3, #128
 1098 0012 5B05     		lsls	r3, r3, #21
 1099 0014 1943     		orrs	r1, r3
 1100 0016 D163     		str	r1, [r2, #60]
 1101 0018 D26B     		ldr	r2, [r2, #60]
 1102 001a 1340     		ands	r3, r2
 1103 001c 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cc8tq3OU.s 			page 43


 1104 001e 019B     		ldr	r3, [sp, #4]
 1105              	.LVL132:
 1106              	.LBE7:
1272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     pwrclkchanged = SET;
 1107              		.loc 1 1272 0
 1108 0020 0124     		movs	r4, #1
 1109 0022 00E0     		b	.L83
 1110              	.LVL133:
 1111              	.L87:
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   FlagStatus       pwrclkchanged = RESET;
 1112              		.loc 1 1265 0
 1113 0024 0024     		movs	r4, #0
 1114              	.LVL134:
 1115              	.L83:
1273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
1274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 1116              		.loc 1 1274 0
 1117 0026 0E4B     		ldr	r3, .L89+4
 1118 0028 1B68     		ldr	r3, [r3]
 1119 002a DB05     		lsls	r3, r3, #23
 1120 002c 03D4     		bmi	.L88
1275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
1276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Enable access to the backup domain */
1277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     HAL_PWR_EnableBkUpAccess();
 1121              		.loc 1 1277 0
 1122 002e FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 1123              	.LVL135:
1278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     backupchanged = SET;
 1124              		.loc 1 1278 0
 1125 0032 0121     		movs	r1, #1
 1126 0034 00E0     		b	.L84
 1127              	.LVL136:
 1128              	.L88:
1266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
 1129              		.loc 1 1266 0
 1130 0036 0021     		movs	r1, #0
 1131              	.LVL137:
 1132              	.L84:
1279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
1280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSCOEN);
 1133              		.loc 1 1281 0
 1134 0038 084A     		ldr	r2, .L89
 1135 003a D06D     		ldr	r0, [r2, #92]
 1136 003c 094B     		ldr	r3, .L89+8
 1137 003e 0340     		ands	r3, r0
 1138 0040 D365     		str	r3, [r2, #92]
1282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** 
1283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   /* Restore previous configuration */
1284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (backupchanged == SET)
 1139              		.loc 1 1284 0
 1140 0042 0129     		cmp	r1, #1
 1141 0044 01D1     		bne	.L85
1285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
1286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     /* Disable access to the backup domain */
1287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     HAL_PWR_DisableBkUpAccess();
 1142              		.loc 1 1287 0
ARM GAS  /tmp/cc8tq3OU.s 			page 44


 1143 0046 FFF7FEFF 		bl	HAL_PWR_DisableBkUpAccess
 1144              	.LVL138:
 1145              	.L85:
1288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
1289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   if (pwrclkchanged == SET)
 1146              		.loc 1 1289 0
 1147 004a 012C     		cmp	r4, #1
 1148 004c 04D1     		bne	.L82
1290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   {
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_DISABLE();
 1149              		.loc 1 1291 0
 1150 004e 034A     		ldr	r2, .L89
 1151 0050 D16B     		ldr	r1, [r2, #60]
 1152 0052 054B     		ldr	r3, .L89+12
 1153 0054 0B40     		ands	r3, r1
 1154 0056 D363     		str	r3, [r2, #60]
 1155              	.L82:
1292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c ****   }
1293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c **** }
 1156              		.loc 1 1293 0
 1157 0058 02B0     		add	sp, sp, #8
 1158              		@ sp needed
 1159              	.LVL139:
 1160 005a 10BD     		pop	{r4, pc}
 1161              	.L90:
 1162              		.align	2
 1163              	.L89:
 1164 005c 00100240 		.word	1073876992
 1165 0060 00700040 		.word	1073770496
 1166 0064 FFFFFFFE 		.word	-16777217
 1167 0068 FFFFFFEF 		.word	-268435457
 1168              		.cfi_endproc
 1169              	.LFE314:
 1171              		.text
 1172              	.Letext0:
 1173              		.file 2 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 1174              		.file 3 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 1175              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g070xx.h"
 1176              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 1177              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 1178              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc_ex.h"
 1179              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 1180              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 1181              		.file 10 "Drivers/CMSIS/Include/cmsis_gcc.h"
 1182              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 1183              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 1184              		.file 13 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_pwr.h"
ARM GAS  /tmp/cc8tq3OU.s 			page 45


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal_rcc_ex.c
     /tmp/cc8tq3OU.s:20     .text.HAL_RCCEx_PeriphCLKConfig:00000000 $t
     /tmp/cc8tq3OU.s:25     .text.HAL_RCCEx_PeriphCLKConfig:00000000 HAL_RCCEx_PeriphCLKConfig
     /tmp/cc8tq3OU.s:320    .text.HAL_RCCEx_PeriphCLKConfig:0000016c $d
     /tmp/cc8tq3OU.s:332    .text.HAL_RCCEx_GetPeriphCLKConfig:00000000 $t
     /tmp/cc8tq3OU.s:337    .text.HAL_RCCEx_GetPeriphCLKConfig:00000000 HAL_RCCEx_GetPeriphCLKConfig
     /tmp/cc8tq3OU.s:388    .text.HAL_RCCEx_GetPeriphCLKConfig:00000040 $d
     /tmp/cc8tq3OU.s:395    .text.HAL_RCCEx_GetPeriphCLKFreq:00000000 $t
     /tmp/cc8tq3OU.s:400    .text.HAL_RCCEx_GetPeriphCLKFreq:00000000 HAL_RCCEx_GetPeriphCLKFreq
     /tmp/cc8tq3OU.s:919    .text.HAL_RCCEx_GetPeriphCLKFreq:00000244 $d
     /tmp/cc8tq3OU.s:928    .text.HAL_RCCEx_EnableLSCO:00000000 $t
     /tmp/cc8tq3OU.s:933    .text.HAL_RCCEx_EnableLSCO:00000000 HAL_RCCEx_EnableLSCO
     /tmp/cc8tq3OU.s:1060   .text.HAL_RCCEx_EnableLSCO:0000008c $d
     /tmp/cc8tq3OU.s:1068   .text.HAL_RCCEx_DisableLSCO:00000000 $t
     /tmp/cc8tq3OU.s:1073   .text.HAL_RCCEx_DisableLSCO:00000000 HAL_RCCEx_DisableLSCO
     /tmp/cc8tq3OU.s:1164   .text.HAL_RCCEx_DisableLSCO:0000005c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_GPIO_Init
HAL_PWR_EnableBkUpAccess
HAL_PWR_DisableBkUpAccess
