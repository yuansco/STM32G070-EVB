ARM GAS  /tmp/cceLjgLz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32g0xx_hal_uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  24              	UART_EndTxTransfer:
  25              	.LFB359:
  26              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @file    stm32g0xx_hal_uart.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ******************************************************************************
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @attention
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * Copyright (c) 2018 STMicroelectronics.
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * All rights reserved.
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * in the root directory of this software component.
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ******************************************************************************
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   @verbatim
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                         ##### How to use this driver #####
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   [..]
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
ARM GAS  /tmp/cceLjgLz.s 			page 2


  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) UART pins configuration:
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) UART interrupts handling:
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                 inside the transmit and receive processes.
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         the HAL_UART_Init() API.
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ##### Callback registration #####
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ==================================
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
ARM GAS  /tmp/cceLjgLz.s 			page 3


  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     and a pointer to the user callback function.
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     weak (surcharged) function.
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     and the Callback ID.
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     This function allows to reset following callbacks:
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
ARM GAS  /tmp/cceLjgLz.s 			page 4


 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     or HAL_UART_Init() function.
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     not defined, the callback registration feature is not available
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   @endverbatim
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ******************************************************************************
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #include "stm32g0xx_hal.h"
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @addtogroup STM32G0xx_HAL_Driver
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART UART
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief HAL UART module driver
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | U
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                       USART_CR1_OVER8 | USART_CR1_FIFOEN)) /*!< UART or USART CR1 f
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT | USART_CR
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                       USART_CR3_RXFTCFG)) /*!< UART or USART CR3 fields of paramete
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/cceLjgLz.s 			page 5


 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @addtogroup UART_Private_variables
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** const uint16_t UARTPrescTable[12] = {1U, 2U, 4U, 6U, 8U, 10U, 12U, 16U, 32U, 64U, 128U, 256U};
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Exported Constants --------------------------------------------------------*/
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @verbatim
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** ===============================================================================
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     in asynchronous mode.
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Baud Rate
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Word Length
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Stop Bit
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Hardware flow control
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) Over Sampling Method
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) One-Bit Sampling Method
ARM GAS  /tmp/cceLjgLz.s 			page 6


 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) data logical level inversion
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) RX and TX pins swap
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) RX overrun detection disabling
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) DMA disabling on RX error
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) MSB first on communication line
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (++) auto Baud rate detection
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     are available in reference manual).
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @endverbatim
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   following table.
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   Table 1. UART frame format.
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart == NULL)
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Check the parameters */
ARM GAS  /tmp/cceLjgLz.s 			page 7


 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Check the parameters */
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware */
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
ARM GAS  /tmp/cceLjgLz.s 			page 8


 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart == NULL)
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check UART instance */
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware */
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
ARM GAS  /tmp/cceLjgLz.s 			page 9


 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart             UART handle.
 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart == NULL)
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the LIN UART instance */
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the Break detection length parameter */
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
ARM GAS  /tmp/cceLjgLz.s 			page 10


 489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware */
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart        UART handle.
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
ARM GAS  /tmp/cceLjgLz.s 			page 11


 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart == NULL)
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the wake up method parameter */
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware */
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 12


 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart == NULL)
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the parameters */
 633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DeInit the low level hardware */
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DeInit the low level hardware */
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
ARM GAS  /tmp/cceLjgLz.s 			page 13


 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
 670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
 675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
 684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Register a User UART Callback
 699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart uart handle
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
ARM GAS  /tmp/cceLjgLz.s 			page 14


 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (pCallback == NULL)
 725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (CallbackID)
 736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
ARM GAS  /tmp/cceLjgLz.s 			page 15


 774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default :
 790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         status =  HAL_ERROR;
 793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (CallbackID)
 799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default :
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         status =  HAL_ERROR;
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
 816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     status =  HAL_ERROR;
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return status;
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart uart handle
ARM GAS  /tmp/cceLjgLz.s 			page 16


 831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (CallbackID)
 857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak
 884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                                                                   AbortTransmitCplt
 885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
ARM GAS  /tmp/cceLjgLz.s 			page 17


 888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak
 889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                                                                   AbortReceiveCpltC
 890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default :
 913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         status =  HAL_ERROR;
 916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (CallbackID)
 922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default :
 932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         status =  HAL_ERROR;
 935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
 939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     status =  HAL_ERROR;
 943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 18


 945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return status;
 948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart     Uart handle
 954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (pCallback == NULL)
 962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
 966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Process locked */
 969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
 976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     status =  HAL_ERROR;
 980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Release Lock */
 983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return status;
 986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
 990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
 991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart     Uart handle
 992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
 993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
 994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
 995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Process locked */
 999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
1000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
ARM GAS  /tmp/cceLjgLz.s 			page 19


1002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
1006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     status =  HAL_ERROR;
1010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Release Lock */
1013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return status;
1015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
1021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
1025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
1026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @verbatim
1027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
1028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                       ##### IO operation functions #####
1029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
1030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     and Half duplex data transfers.
1032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) There are two mode of transfer:
1034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            after finishing transfer.
1037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
1039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            The end of the data processing will be indicated through the
1040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            using DMA mode.
1042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
1044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Blocking mode API's are :
1047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Receive()
1049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
ARM GAS  /tmp/cceLjgLz.s 			page 20


1059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Abort()
1071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         reception services:
1084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         Errors are handled as follows :
1088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error
1090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            in Interrupt mode reception .
1091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            to identify error type, and HAL_UART_ErrorCallback() user callback is executed.
1093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            Transfer is kept ongoing on UART side.
1094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback()
1098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            user callback is executed.
1099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @endverbatim
1104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
1105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         of u16 provided through pData.
1112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
ARM GAS  /tmp/cceLjgLz.s 			page 21


1116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart   UART handle.
1122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const uint16_t *pdata16bits;
1131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t tickstart;
1132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return  HAL_ERROR;
1139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        handled through a u16 cast. */
1144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return  HAL_ERROR;
1149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init tickstart for timeout management */
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     tickstart = HAL_GetTick();
1157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = Size;
1160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata8bits  = NULL;
1165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
1166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
1168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata8bits  = pData;
1170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata16bits = NULL;
1171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 22


1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return HAL_TIMEOUT;
1178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (pdata8bits == NULL)
1180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata16bits++;
1183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
1185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata8bits++;
1188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxXferCount--;
1190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_TIMEOUT;
1195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_OK;
1201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
1203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_BUSY;
1205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         of u16 available through pData.
1213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (16 bits) (as received data will be handled using u16 pointer cast). Depending on compi
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart   UART handle.
1223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
ARM GAS  /tmp/cceLjgLz.s 			page 23


1230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t *pdata16bits;
1232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t uhMask;
1233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t tickstart;
1234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return  HAL_ERROR;
1241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        handled through a u16 cast. */
1246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return  HAL_ERROR;
1251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Init tickstart for timeout management */
1259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     tickstart = HAL_GetTick();
1260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferSize  = Size;
1262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = Size;
1263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
1267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata8bits  = NULL;
1272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
1275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata8bits  = pData;
1277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata16bits = NULL;
1278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* as long as data have to be received */
1281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return HAL_TIMEOUT;
1286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
ARM GAS  /tmp/cceLjgLz.s 			page 24


1287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (pdata8bits == NULL)
1288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata16bits++;
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
1293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata8bits++;
1296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxXferCount--;
1298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_OK;
1304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
1306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_BUSY;
1308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         of u16 provided through pData.
1316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_ERROR;
1334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        handled through a u16 cast. */
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return  HAL_ERROR;
ARM GAS  /tmp/cceLjgLz.s 			page 25


1344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = Size;
1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxISR       = NULL;
1351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
1364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
1372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
1379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_OK;
1388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
1390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_BUSY;
1392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         of u16 available through pData.
1400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
ARM GAS  /tmp/cceLjgLz.s 			page 26


1401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (16 bits) (as received data will be handled using u16 pointer cast). Depending on compi
1403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_ERROR;
1418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        handled through a u16 cast. */
1423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return  HAL_ERROR;
1428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
1435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
1438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
1441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
1445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
1447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_BUSY;
1449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         of u16 provided through pData.
1457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
ARM GAS  /tmp/cceLjgLz.s 			page 27


1458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
1460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
1468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_ERROR;
1475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be
1479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return  HAL_ERROR;
1485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = Size;
1491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the DMA error callback */
1504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the DMA abort callback */
1507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Set error code to DMA */
1513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 28


1515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Restore huart->gState to ready */
1516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return HAL_ERROR;
1519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     in the UART CR3 register */
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_OK;
1529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
1531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_BUSY;
1533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the parity bit (MSB position).
1540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         of u16 available through pData.
1543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (16 bits) (as received data will be handled by DMA from halfword frontier). Depending o
1546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_ERROR;
1561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be
1565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return  HAL_ERROR;
1571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
ARM GAS  /tmp/cceLjgLz.s 			page 29


1572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
1578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
1581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
1584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
1588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
1590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_BUSY;
1592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
1623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/cceLjgLz.s 			page 30


1629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
1644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
1654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
1659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
ARM GAS  /tmp/cceLjgLz.s 			page 31


1686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set error code to DMA */
1687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           return HAL_TIMEOUT;
1690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
1691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
1710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set error code to DMA */
1711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           return HAL_TIMEOUT;
1714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
1715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
1722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
1727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This procedure performs following operations :
1729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Set handle State to READY
1733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
1740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
1741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 32


1743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
1766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set error code to DMA */
1767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           return HAL_TIMEOUT;
1770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
1771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
1792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set error code to DMA */
1793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           return HAL_TIMEOUT;
1796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
1797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
ARM GAS  /tmp/cceLjgLz.s 			page 33


1800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
1803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Discard the received data */
1815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
1825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
1830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This procedure performs following operations :
1832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Set handle State to READY
1836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
ARM GAS  /tmp/cceLjgLz.s 			page 34


1857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
1862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set error code to DMA */
1863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           return HAL_TIMEOUT;
1866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
1867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
1873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
1884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
1889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This procedure performs following operations :
1891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Set handle State to READY
1895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
ARM GAS  /tmp/cceLjgLz.s 			page 35


1914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
1925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
1927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set error code to DMA */
1928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           return HAL_TIMEOUT;
1931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
1932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
1938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Discard the received data */
1943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
1950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
1953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
1955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This procedure performs following operations :
1957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Set handle State to READY
1961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
1965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
1966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
1968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable interrupts */
ARM GAS  /tmp/cceLjgLz.s 			page 36


1971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEI
1972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE));
1973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
1981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      before any call to DMA Abort functions */
1983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
1986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        Otherwise, set it to NULL */
1988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
1993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
1994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
1996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
1997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        Otherwise, set it to NULL */
2002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
2005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
2007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
2009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
2013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Abort DMA TX */
2025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
ARM GAS  /tmp/cceLjgLz.s 			page 37


2028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
2030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         abortcplt = 0U;
2032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
2037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
2040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Abort DMA RX */
2049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
2052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         abortcplt = 1U;
2053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
2055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         abortcplt = 0U;
2057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (abortcplt == 1U)
2063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear ISR function pointers */
2069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxISR = NULL;
2070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxISR = NULL;
2071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Reset errorCode */
2073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
2074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Discard the received data */
ARM GAS  /tmp/cceLjgLz.s 			page 38


2085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
2089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call registered Abort complete callback */
2095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
2099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
2103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This procedure performs following operations :
2110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Set handle State to READY
2114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable interrupts */
2122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
2126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
2129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Abort DMA TX */
2139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
ARM GAS  /tmp/cceLjgLz.s 			page 39


2142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
2146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Reset Tx transfer counter */
2148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxXferCount = 0U;
2149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Clear TxISR function pointers */
2151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxISR = NULL;
2152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
2167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Reset Tx transfer counter */
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear TxISR function pointers */
2172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxISR = NULL;
2173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
2194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/cceLjgLz.s 			page 40


2199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         This procedure performs following operations :
2201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - Set handle State to READY
2205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
2220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
2223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
2226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Abort DMA RX */
2236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
2243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Reset Rx transfer counter */
2245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxXferCount = 0U;
2246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Clear RxISR function pointer */
2248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Discard the received data */
2254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 41


2256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
2271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Reset Rx transfer counter */
2273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear RxISR function pointer */
2276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
2296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
2301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t errorflags;
2310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t errorcode;
2311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* If no error occurs */
ARM GAS  /tmp/cceLjgLz.s 			page 42


2313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
2314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (errorflags == 0U)
2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (huart->RxISR != NULL)
2322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxISR(huart);
2324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return;
2326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* If some errors occur */
2330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((errorflags != 0U)
2331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
2333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
ARM GAS  /tmp/cceLjgLz.s 			page 43


2370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
2372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
2374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (huart->RxISR != NULL)
2385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
2386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->RxISR(huart);
2387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
2388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           - Receiver Timeout error in Reception
2392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           - Overrun error in Reception
2393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           - any error occurs in DMA mode reception
2394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       */
2395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
2398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Abort the UART DMA Rx channel if enabled */
2405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
2407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Disable the UART DMA Rx request if enabled */
2408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           {
2413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             /* Abort DMA RX */
2418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             {
2420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             }
2423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           }
2424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           else
2425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           {
2426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             /* Call user error callback */
ARM GAS  /tmp/cceLjgLz.s 			page 44


2427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             /*Call registered error callback*/
2429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             huart->ErrorCallback(huart);
2430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             /*Call legacy weak error callback*/
2432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           }
2436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
2437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         else
2438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
2439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Call user error callback */
2440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call registered error callback*/
2442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCallback(huart);
2443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call legacy weak error callback*/
2445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
2448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
2450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            Error is notified to user through user error callback */
2453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call registered error callback*/
2455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCallback(huart);
2456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call legacy weak error callback*/
2458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
2464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   } /* End if some error occurs */
2466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check current reception Mode :
2468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
2471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
2472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
2474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* DMA mode enabled */
2479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          (DMA cplt callback will be called).
2481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
2483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
ARM GAS  /tmp/cceLjgLz.s 			page 45


2484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Reception is not complete */
2487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
2488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (HAL_IS_BIT_CLR(huart->hdmarx->Instance->CCR, DMA_CCR_CIRC))
2491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
2492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****              in the UART CR3 register */
2498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
2502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
2508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
2509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
2513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return;
2523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
2525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* DMA mode not enabled */
2527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
2530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
2531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           && (nb_rx_data > 0U))
2532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
2533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
2535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the UART Error Interrupt:(Frame error, noise error, overrun error) and RX FIFO T
2537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/cceLjgLz.s 			page 46


2541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Clear RxISR function pointer */
2544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxISR = NULL;
2545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
2551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
2558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
2560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return;
2561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->WakeupCallback(huart);
2575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
2580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
2584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->TxISR != NULL)
2588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxISR(huart);
2590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
2592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
ARM GAS  /tmp/cceLjgLz.s 			page 47


2598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
2599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
2612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
2621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
2625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
2631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
ARM GAS  /tmp/cceLjgLz.s 			page 48


2655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  UART error callback.
2690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /tmp/cceLjgLz.s 			page 49


2712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle
2751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *               reception buffer until which, data are available)
2753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(huart);
2759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UNUSED(Size);
2760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****    */
2764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
2768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
ARM GAS  /tmp/cceLjgLz.s 			page 50


2769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  @brief   UART control functions
2772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
2773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @verbatim
2774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
2775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****  ===============================================================================
2777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
2778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @endverbatim
2792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
2793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
2809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Process Locked */
2825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_LOCK(huart);
ARM GAS  /tmp/cceLjgLz.s 			page 51


2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set the USART RTOEN bit */
2830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Process Unlocked */
2835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_OK;
2838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
2840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_BUSY;
2842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
2845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
2847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Process Locked */
2863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_LOCK(huart);
2864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Process Unlocked */
2873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_OK;
2876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
2878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
2879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_BUSY;
2880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
2881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
ARM GAS  /tmp/cceLjgLz.s 			page 52


2883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
2884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return HAL_ERROR;
2885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
2886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
2897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
2917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
2932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
2933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
ARM GAS  /tmp/cceLjgLz.s 			page 53


2940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
2947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear TE and RE bits */
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
2960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status.
2966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
2970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear TE and RE bits */
2973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
2983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
2984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
2987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Transmit break characters.
2988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
2989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
2990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
2991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
2993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the parameters */
2994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  /tmp/cceLjgLz.s 			page 54


2997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
2998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Send break characters */
3001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
3002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
3008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
3012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
3015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
3016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *
3017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @verbatim
3018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ==============================================================================
3019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
3020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ==============================================================================
3021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     [..]
3022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     This subsection provides functions allowing to :
3023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (+) Return the UART handle state.
3024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (+) Return the UART handle error code
3025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** @endverbatim
3027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
3028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Return the UART handle state.
3032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
3033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *               the configuration information for the specified UART.
3034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL state
3035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(const UART_HandleTypeDef *huart)
3037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t temp1;
3039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t temp2;
3040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   temp1 = huart->gState;
3041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   temp2 = huart->RxState;
3042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
3044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
3048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
3049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *               the configuration information for the specified UART.
3050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval UART Error Code
3051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** uint32_t HAL_UART_GetError(const UART_HandleTypeDef *huart)
3053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
ARM GAS  /tmp/cceLjgLz.s 			page 55


3054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return huart->ErrorCode;
3055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
3058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @}
3062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
3065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @{
3066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
3070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
3071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval none
3072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
3075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Init the UART Callback settings */
3077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
3078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
3079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
3080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
3081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
3082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
3083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
3084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
3085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
3086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
3087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
3088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
3089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
3095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
3096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
3097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
3099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t tmpreg;
3101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t brrtemp;
3102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
3103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t usartdiv;
3104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
3105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
3106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t pclk;
3107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the parameters */
3109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
ARM GAS  /tmp/cceLjgLz.s 			page 56


3111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
3112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
3114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
3116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
3119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
3124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
3125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
3126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
3129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
3130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
3131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
3132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
3133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
3134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
3135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
3136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
3139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * to huart->Init.StopBits value */
3140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
3141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Configure
3144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
3145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
3146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
3147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
3148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
3149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
3151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
3153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
3155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
3157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Configure
3158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
3159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
3160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
3163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check LPUART instance */
3165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
3166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Retrieve frequency clock */
ARM GAS  /tmp/cceLjgLz.s 			page 57


3168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (clocksource)
3169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default:
3183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = 0U;
3184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ret = HAL_ERROR;
3185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* If proper clock source reported */
3189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (pclk != 0U)
3190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Compute clock after Prescaler */
3192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
3193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
3196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
3197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ret = HAL_ERROR;
3199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
3201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Check computed UsartDiv value is in allocated range
3203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
3204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescale
3205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
3206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
3207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
3208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
3209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         else
3210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
3211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ret = HAL_ERROR;
3212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
3213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
3214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                 (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
3215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     } /* if (pclk != 0) */
3216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
3218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
3219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (clocksource)
3221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
ARM GAS  /tmp/cceLjgLz.s 			page 58


3225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default:
3235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = 0U;
3236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ret = HAL_ERROR;
3237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (pclk != 0U)
3242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescal
3244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
3247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
3249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
3251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ret = HAL_ERROR;
3253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
3257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     switch (clocksource)
3259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       default:
3273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pclk = 0U;
3274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ret = HAL_ERROR;
3275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
3276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (pclk != 0U)
3279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPresca
ARM GAS  /tmp/cceLjgLz.s 			page 59


3282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)usartdiv;
3285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
3287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ret = HAL_ERROR;
3289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear ISR function pointers */
3298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxISR = NULL;
3299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxISR = NULL;
3300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return ret;
3302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
3307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure data inversion */
3329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
3337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
ARM GAS  /tmp/cceLjgLz.s 			page 60


3339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief Check the UART Idle State.
3380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
3381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
3382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t tickstart;
3386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Init tickstart for timeout management */
3391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   tickstart = HAL_GetTick();
3392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
ARM GAS  /tmp/cceLjgLz.s 			page 61


3396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Timeout occurred */
3400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_TIMEOUT;
3401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Wait until REACK flag is set */
3408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Timeout occurred */
3411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_TIMEOUT;
3412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Initialize the UART State */
3416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
3420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
3424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *                  until a flag is no longer in the specified status.
3429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart     UART handle.
3430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Status    The actual Flag status (SET or RESET)
3432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Tickstart Tick start value
3433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param Timeout   Timeout duration
3434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
3435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Wait until flag is set */
3440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Check for the Timeout */
3443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            interrupts for the interrupt process */
3449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
3450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                                 USART_CR1_TXEIE_TXFNFIE));
3451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 62


3453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         return HAL_TIMEOUT;
3459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
3462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
3463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
3464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
3465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
3467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****              interrupts for the interrupt process */
3470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
3471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                                   USART_CR1_TXEIE_TXFNFIE));
3472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
3475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
3476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
3477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Process Unlocked */
3479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           return HAL_TIMEOUT;
3482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
3483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
3484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
3487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
3496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
3499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
3503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferSize  = Size;
3504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = Size;
3505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxISR       = NULL;
3506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Computation of UART mask to apply to RDR register */
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_MASK_COMPUTATION(huart);
3509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 63


3510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
3515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Configure Rx interrupt processing */
3517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
3518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT_FIFOEN;
3523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
3525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT_FIFOEN;
3527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
3530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
3531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
3535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
3537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
3542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
3544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
3546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
3550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
3552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
3554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
3556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
3559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
ARM GAS  /tmp/cceLjgLz.s 			page 64


3567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
3568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval HAL status
3571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
3575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferSize = Size;
3576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
3583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
3584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
3586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
3587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Set the DMA error callback */
3589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
3590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Set the DMA abort callback */
3592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
3593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the DMA channel */
3595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPt
3596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Set error code to DMA */
3598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->ErrorCode = HAL_UART_ERROR_DMA;
3599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Restore huart->RxState to ready */
3601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return HAL_ERROR;
3604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
3609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
3615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   in the UART CR3 register */
3618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return HAL_OK;
3621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 65


3624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
3627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
  27              		.loc 1 3630 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LBB711:
  38              	.LBB712:
  39              	.LBB713:
  40              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
ARM GAS  /tmp/cceLjgLz.s 			page 66


  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cceLjgLz.s 			page 67


  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cceLjgLz.s 			page 68


 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
ARM GAS  /tmp/cceLjgLz.s 			page 69


 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cceLjgLz.s 			page 70


 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cceLjgLz.s 			page 71


 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cceLjgLz.s 			page 72


 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
ARM GAS  /tmp/cceLjgLz.s 			page 73


 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  41              		.loc 2 453 0
  42              		.syntax divided
  43              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0002 EFF31081 		MRS r1, primask
  45              	@ 0 "" 2
  46              	.LVL1:
  47              		.thumb
  48              		.syntax unified
  49              	.LBE713:
  50              	.LBE712:
  51              	.LBB714:
  52              	.LBB715:
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cceLjgLz.s 			page 74


 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
  53              		.loc 2 481 0
  54 0006 0123     		movs	r3, #1
  55              		.syntax divided
  56              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  57 0008 83F31088 		MSR primask, r3
  58              	@ 0 "" 2
  59              	.LVL2:
  60              		.thumb
  61              		.syntax unified
  62              	.LBE715:
  63              	.LBE714:
3631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
  64              		.loc 1 3632 0
  65 000c 0268     		ldr	r2, [r0]
  66 000e 1368     		ldr	r3, [r2]
  67 0010 C024     		movs	r4, #192
  68 0012 A343     		bics	r3, r4
  69 0014 1360     		str	r3, [r2]
  70              	.LBB716:
  71              	.LBB717:
  72              		.loc 2 481 0
  73              		.syntax divided
  74              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  75 0016 81F31088 		MSR primask, r1
  76              	@ 0 "" 2
  77              		.thumb
  78              		.syntax unified
  79              	.LBE717:
  80              	.LBE716:
  81              	.LBE711:
  82              	.LBB718:
  83              	.LBB719:
  84              	.LBB720:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  85              		.loc 2 453 0
  86              		.syntax divided
  87              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  88 001a EFF31081 		MRS r1, primask
  89              	@ 0 "" 2
  90              	.LVL3:
  91              		.thumb
  92              		.syntax unified
  93              	.LBE720:
  94              	.LBE719:
  95              	.LBB721:
  96              	.LBB722:
  97              		.loc 2 481 0
  98 001e 0123     		movs	r3, #1
  99              		.syntax divided
 100              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 101 0020 83F31088 		MSR primask, r3
 102              	@ 0 "" 2
 103              	.LVL4:
 104              		.thumb
 105              		.syntax unified
ARM GAS  /tmp/cceLjgLz.s 			page 75


 106              	.LBE722:
 107              	.LBE721:
3633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
 108              		.loc 1 3633 0
 109 0024 0268     		ldr	r2, [r0]
 110 0026 9468     		ldr	r4, [r2, #8]
 111 0028 044B     		ldr	r3, .L2
 112 002a 2340     		ands	r3, r4
 113 002c 9360     		str	r3, [r2, #8]
 114              	.LBB723:
 115              	.LBB724:
 116              		.loc 2 481 0
 117              		.syntax divided
 118              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 119 002e 81F31088 		MSR primask, r1
 120              	@ 0 "" 2
 121              		.thumb
 122              		.syntax unified
 123              	.LBE724:
 124              	.LBE723:
 125              	.LBE718:
3634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 126              		.loc 1 3636 0
 127 0032 2022     		movs	r2, #32
 128 0034 8823     		movs	r3, #136
 129 0036 C250     		str	r2, [r0, r3]
3637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 130              		.loc 1 3637 0
 131              		@ sp needed
 132 0038 10BD     		pop	{r4, pc}
 133              	.L3:
 134 003a C046     		.align	2
 135              	.L2:
 136 003c FFFF7FFF 		.word	-8388609
 137              		.cfi_endproc
 138              	.LFE359:
 140              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 141              		.align	2
 142              		.code	16
 143              		.thumb_func
 145              	UART_EndRxTransfer:
 146              	.LFB360:
3638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart UART handle.
3643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 147              		.loc 1 3646 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cceLjgLz.s 			page 76


 151              	.LVL5:
 152 0000 10B5     		push	{r4, lr}
 153              	.LCFI1:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 157              	.LBB725:
 158              	.LBB726:
 159              	.LBB727:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 160              		.loc 2 453 0
 161              		.syntax divided
 162              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 163 0002 EFF31081 		MRS r1, primask
 164              	@ 0 "" 2
 165              	.LVL6:
 166              		.thumb
 167              		.syntax unified
 168              	.LBE727:
 169              	.LBE726:
 170              	.LBB728:
 171              	.LBB729:
 172              		.loc 2 481 0
 173 0006 0123     		movs	r3, #1
 174              		.syntax divided
 175              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 176 0008 83F31088 		MSR primask, r3
 177              	@ 0 "" 2
 178              	.LVL7:
 179              		.thumb
 180              		.syntax unified
 181              	.LBE729:
 182              	.LBE728:
3647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 183              		.loc 1 3648 0
 184 000c 0268     		ldr	r2, [r0]
 185 000e 1468     		ldr	r4, [r2]
 186 0010 124B     		ldr	r3, .L6
 187 0012 2340     		ands	r3, r4
 188 0014 1360     		str	r3, [r2]
 189              	.LBB730:
 190              	.LBB731:
 191              		.loc 2 481 0
 192              		.syntax divided
 193              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 194 0016 81F31088 		MSR primask, r1
 195              	@ 0 "" 2
 196              		.thumb
 197              		.syntax unified
 198              	.LBE731:
 199              	.LBE730:
 200              	.LBE725:
 201              	.LBB732:
 202              	.LBB733:
 203              	.LBB734:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/cceLjgLz.s 			page 77


 204              		.loc 2 453 0
 205              		.syntax divided
 206              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 207 001a EFF31081 		MRS r1, primask
 208              	@ 0 "" 2
 209              	.LVL8:
 210              		.thumb
 211              		.syntax unified
 212              	.LBE734:
 213              	.LBE733:
 214              	.LBB735:
 215              	.LBB736:
 216              		.loc 2 481 0
 217 001e 0123     		movs	r3, #1
 218              		.syntax divided
 219              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 220 0020 83F31088 		MSR primask, r3
 221              	@ 0 "" 2
 222              	.LVL9:
 223              		.thumb
 224              		.syntax unified
 225              	.LBE736:
 226              	.LBE735:
3649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 227              		.loc 1 3649 0
 228 0024 0268     		ldr	r2, [r0]
 229 0026 9468     		ldr	r4, [r2, #8]
 230 0028 0D4B     		ldr	r3, .L6+4
 231 002a 2340     		ands	r3, r4
 232 002c 9360     		str	r3, [r2, #8]
 233              	.LBB737:
 234              	.LBB738:
 235              		.loc 2 481 0
 236              		.syntax divided
 237              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 238 002e 81F31088 		MSR primask, r1
 239              	@ 0 "" 2
 240              		.thumb
 241              		.syntax unified
 242              	.LBE738:
 243              	.LBE737:
 244              	.LBE732:
3650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 245              		.loc 1 3652 0
 246 0032 C36E     		ldr	r3, [r0, #108]
 247 0034 012B     		cmp	r3, #1
 248 0036 0AD1     		bne	.L5
 249              	.LBB739:
 250              	.LBB740:
 251              	.LBB741:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 252              		.loc 2 453 0
 253              		.syntax divided
 254              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 255 0038 EFF31081 		MRS r1, primask
ARM GAS  /tmp/cceLjgLz.s 			page 78


 256              	@ 0 "" 2
 257              	.LVL10:
 258              		.thumb
 259              		.syntax unified
 260              	.LBE741:
 261              	.LBE740:
 262              	.LBB742:
 263              	.LBB743:
 264              		.loc 2 481 0
 265              		.syntax divided
 266              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 267 003c 83F31088 		MSR primask, r3
 268              	@ 0 "" 2
 269              	.LVL11:
 270              		.thumb
 271              		.syntax unified
 272              	.LBE743:
 273              	.LBE742:
3653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 274              		.loc 1 3654 0
 275 0040 0268     		ldr	r2, [r0]
 276 0042 1368     		ldr	r3, [r2]
 277 0044 1024     		movs	r4, #16
 278 0046 A343     		bics	r3, r4
 279 0048 1360     		str	r3, [r2]
 280              	.LBB744:
 281              	.LBB745:
 282              		.loc 2 481 0
 283              		.syntax divided
 284              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 285 004a 81F31088 		MSR primask, r1
 286              	@ 0 "" 2
 287              		.thumb
 288              		.syntax unified
 289              	.L5:
 290              	.LBE745:
 291              	.LBE744:
 292              	.LBE739:
3655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 293              		.loc 1 3658 0
 294 004e 2022     		movs	r2, #32
 295 0050 8C23     		movs	r3, #140
 296 0052 C250     		str	r2, [r0, r3]
3659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 297              		.loc 1 3659 0
 298 0054 0023     		movs	r3, #0
 299 0056 C366     		str	r3, [r0, #108]
3660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxISR = NULL;
 300              		.loc 1 3662 0
 301 0058 4367     		str	r3, [r0, #116]
3663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
ARM GAS  /tmp/cceLjgLz.s 			page 79


 302              		.loc 1 3663 0
 303              		@ sp needed
 304 005a 10BD     		pop	{r4, pc}
 305              	.L7:
 306              		.align	2
 307              	.L6:
 308 005c DFFEFFFF 		.word	-289
 309 0060 FEFFFFEF 		.word	-268435458
 310              		.cfi_endproc
 311              	.LFE360:
 313              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 314              		.align	2
 315              		.code	16
 316              		.thumb_func
 318              	UART_TxISR_8BIT:
 319              	.LFB371:
3664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param hdma DMA handle.
3669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DMA Normal mode */
3676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = 0U;
3679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        in the UART CR3 register */
3682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DMA Circular mode */
3688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
3689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param hdma DMA handle.
3703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
ARM GAS  /tmp/cceLjgLz.s 			page 80


3705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param hdma DMA handle.
3721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* DMA Normal mode */
3728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = 0U;
3731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****        in the UART CR3 register */
3738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
3747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      In this case, Rx Event type is Transfer Complete */
3752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
3753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check current reception Mode :
3755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
ARM GAS  /tmp/cceLjgLz.s 			page 81


3762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
3764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
3767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param hdma DMA handle.
3782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      In this case, Rx Event type is Half Transfer */
3790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_HT;
3791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check current reception Mode :
3793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
3802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
3805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
ARM GAS  /tmp/cceLjgLz.s 			page 82


3819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param hdma DMA handle.
3820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = 0U;
3834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = 0U;
3842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call registered error callback*/
3849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  hdma DMA handle.
3860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call registered error callback*/
3870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
ARM GAS  /tmp/cceLjgLz.s 			page 83


3876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  hdma DMA handle.
3883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return;
3897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Reset errorCode */
3905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call user Abort complete callback */
3922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
ARM GAS  /tmp/cceLjgLz.s 			page 84


3933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  hdma DMA handle.
3938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
3949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
3951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       return;
3952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
3953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
3954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Reset errorCode */
3960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Discard the received data */
3966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call user Abort complete callback */
3974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
3978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
3982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
3985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  hdma DMA handle.
ARM GAS  /tmp/cceLjgLz.s 			page 85


3990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
3991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
3992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
3994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
3998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
4000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
4001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
4002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
4003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
4005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
4006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call user Abort complete callback */
4008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
4010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
4011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
4012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
4013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
4014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
4016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
4018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
4019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
4020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
4021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
4022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  hdma DMA handle.
4023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
4024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
4025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
4026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
4027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
4028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
4030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
4032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
4033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Discard the received data */
4035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
4038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
4039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
4040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call user Abort complete callback */
4042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
4044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
4045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
4046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
ARM GAS  /tmp/cceLjgLz.s 			page 86


4047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
4048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
4050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
4052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length .
4053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
4056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
4057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
4058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
4059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 320              		.loc 1 4059 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              	.LVL12:
 325 0000 10B5     		push	{r4, lr}
 326              	.LCFI2:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 4, -8
 329              		.cfi_offset 14, -4
4060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 330              		.loc 1 4061 0
 331 0002 8823     		movs	r3, #136
 332 0004 C358     		ldr	r3, [r0, r3]
 333 0006 212B     		cmp	r3, #33
 334 0008 29D1     		bne	.L8
4062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
4063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 335              		.loc 1 4063 0
 336 000a 3533     		adds	r3, r3, #53
 337 000c C35A     		ldrh	r3, [r0, r3]
 338 000e 9BB2     		uxth	r3, r3
 339 0010 002B     		cmp	r3, #0
 340 0012 18D1     		bne	.L10
 341              	.LBB746:
 342              	.LBB747:
 343              	.LBB748:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 344              		.loc 2 453 0
 345              		.syntax divided
 346              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 347 0014 EFF31081 		MRS r1, primask
 348              	@ 0 "" 2
 349              	.LVL13:
 350              		.thumb
 351              		.syntax unified
 352              	.LBE748:
 353              	.LBE747:
 354              	.LBB749:
 355              	.LBB750:
 356              		.loc 2 481 0
 357 0018 0133     		adds	r3, r3, #1
 358              		.syntax divided
ARM GAS  /tmp/cceLjgLz.s 			page 87


 359              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 360 001a 83F31088 		MSR primask, r3
 361              	@ 0 "" 2
 362              	.LVL14:
 363              		.thumb
 364              		.syntax unified
 365              	.LBE750:
 366              	.LBE749:
4064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
4065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 367              		.loc 1 4066 0
 368 001e 0268     		ldr	r2, [r0]
 369 0020 1368     		ldr	r3, [r2]
 370 0022 8024     		movs	r4, #128
 371 0024 A343     		bics	r3, r4
 372 0026 1360     		str	r3, [r2]
 373              	.LBB751:
 374              	.LBB752:
 375              		.loc 2 481 0
 376              		.syntax divided
 377              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 378 0028 81F31088 		MSR primask, r1
 379              	@ 0 "" 2
 380              		.thumb
 381              		.syntax unified
 382              	.LBE752:
 383              	.LBE751:
 384              	.LBE746:
 385              	.LBB753:
 386              	.LBB754:
 387              	.LBB755:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388              		.loc 2 453 0
 389              		.syntax divided
 390              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 391 002c EFF31081 		MRS r1, primask
 392              	@ 0 "" 2
 393              	.LVL15:
 394              		.thumb
 395              		.syntax unified
 396              	.LBE755:
 397              	.LBE754:
 398              	.LBB756:
 399              	.LBB757:
 400              		.loc 2 481 0
 401 0030 0123     		movs	r3, #1
 402              		.syntax divided
 403              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 404 0032 83F31088 		MSR primask, r3
 405              	@ 0 "" 2
 406              	.LVL16:
 407              		.thumb
 408              		.syntax unified
 409              	.LBE757:
 410              	.LBE756:
4067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 88


4068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 411              		.loc 1 4069 0
 412 0036 0268     		ldr	r2, [r0]
 413 0038 1068     		ldr	r0, [r2]
 414              	.LVL17:
 415 003a 3F33     		adds	r3, r3, #63
 416 003c 0343     		orrs	r3, r0
 417 003e 1360     		str	r3, [r2]
 418              	.LBB758:
 419              	.LBB759:
 420              		.loc 2 481 0
 421              		.syntax divided
 422              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 423 0040 81F31088 		MSR primask, r1
 424              	@ 0 "" 2
 425              		.thumb
 426              		.syntax unified
 427 0044 0BE0     		b	.L8
 428              	.LVL18:
 429              	.L10:
 430              	.LBE759:
 431              	.LBE758:
 432              	.LBE753:
4070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
4071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
4072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
4073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 433              		.loc 1 4073 0
 434 0046 0368     		ldr	r3, [r0]
 435 0048 026D     		ldr	r2, [r0, #80]
 436 004a 1278     		ldrb	r2, [r2]
 437 004c 9A62     		str	r2, [r3, #40]
4074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 438              		.loc 1 4074 0
 439 004e 036D     		ldr	r3, [r0, #80]
 440 0050 0133     		adds	r3, r3, #1
 441 0052 0365     		str	r3, [r0, #80]
4075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxXferCount--;
 442              		.loc 1 4075 0
 443 0054 5622     		movs	r2, #86
 444 0056 835A     		ldrh	r3, [r0, r2]
 445 0058 013B     		subs	r3, r3, #1
 446 005a 9BB2     		uxth	r3, r3
 447 005c 8352     		strh	r3, [r0, r2]
 448              	.LVL19:
 449              	.L8:
4076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
4077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
4078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 450              		.loc 1 4078 0
 451              		@ sp needed
 452 005e 10BD     		pop	{r4, pc}
 453              		.cfi_endproc
 454              	.LFE371:
 456              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 457              		.align	2
ARM GAS  /tmp/cceLjgLz.s 			page 89


 458              		.code	16
 459              		.thumb_func
 461              	UART_TxISR_16BIT:
 462              	.LFB372:
4079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
4081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length.
4082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
4085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
4086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
4087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
4088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 463              		.loc 1 4088 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              	.LVL20:
 468 0000 10B5     		push	{r4, lr}
 469              	.LCFI3:
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 4, -8
 472              		.cfi_offset 14, -4
4089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const uint16_t *tmp;
4090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 473              		.loc 1 4092 0
 474 0002 8823     		movs	r3, #136
 475 0004 C358     		ldr	r3, [r0, r3]
 476 0006 212B     		cmp	r3, #33
 477 0008 2BD1     		bne	.L11
4093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
4094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 478              		.loc 1 4094 0
 479 000a 3533     		adds	r3, r3, #53
 480 000c C35A     		ldrh	r3, [r0, r3]
 481 000e 9BB2     		uxth	r3, r3
 482 0010 002B     		cmp	r3, #0
 483 0012 18D1     		bne	.L13
 484              	.LBB760:
 485              	.LBB761:
 486              	.LBB762:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 487              		.loc 2 453 0
 488              		.syntax divided
 489              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 490 0014 EFF31081 		MRS r1, primask
 491              	@ 0 "" 2
 492              	.LVL21:
 493              		.thumb
 494              		.syntax unified
 495              	.LBE762:
 496              	.LBE761:
 497              	.LBB763:
 498              	.LBB764:
ARM GAS  /tmp/cceLjgLz.s 			page 90


 499              		.loc 2 481 0
 500 0018 0133     		adds	r3, r3, #1
 501              		.syntax divided
 502              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 503 001a 83F31088 		MSR primask, r3
 504              	@ 0 "" 2
 505              	.LVL22:
 506              		.thumb
 507              		.syntax unified
 508              	.LBE764:
 509              	.LBE763:
4095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
4096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 510              		.loc 1 4097 0
 511 001e 0268     		ldr	r2, [r0]
 512 0020 1368     		ldr	r3, [r2]
 513 0022 8024     		movs	r4, #128
 514 0024 A343     		bics	r3, r4
 515 0026 1360     		str	r3, [r2]
 516              	.LBB765:
 517              	.LBB766:
 518              		.loc 2 481 0
 519              		.syntax divided
 520              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 521 0028 81F31088 		MSR primask, r1
 522              	@ 0 "" 2
 523              		.thumb
 524              		.syntax unified
 525              	.LBE766:
 526              	.LBE765:
 527              	.LBE760:
 528              	.LBB767:
 529              	.LBB768:
 530              	.LBB769:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 531              		.loc 2 453 0
 532              		.syntax divided
 533              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 534 002c EFF31081 		MRS r1, primask
 535              	@ 0 "" 2
 536              	.LVL23:
 537              		.thumb
 538              		.syntax unified
 539              	.LBE769:
 540              	.LBE768:
 541              	.LBB770:
 542              	.LBB771:
 543              		.loc 2 481 0
 544 0030 0123     		movs	r3, #1
 545              		.syntax divided
 546              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 547 0032 83F31088 		MSR primask, r3
 548              	@ 0 "" 2
 549              	.LVL24:
 550              		.thumb
 551              		.syntax unified
ARM GAS  /tmp/cceLjgLz.s 			page 91


 552              	.LBE771:
 553              	.LBE770:
4098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 554              		.loc 1 4100 0
 555 0036 0268     		ldr	r2, [r0]
 556 0038 1068     		ldr	r0, [r2]
 557              	.LVL25:
 558 003a 3F33     		adds	r3, r3, #63
 559 003c 0343     		orrs	r3, r0
 560 003e 1360     		str	r3, [r2]
 561              	.LBB772:
 562              	.LBB773:
 563              		.loc 2 481 0
 564              		.syntax divided
 565              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 566 0040 81F31088 		MSR primask, r1
 567              	@ 0 "" 2
 568              		.thumb
 569              		.syntax unified
 570 0044 0DE0     		b	.L11
 571              	.LVL26:
 572              	.L13:
 573              	.LBE773:
 574              	.LBE772:
 575              	.LBE767:
4101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
4102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     else
4103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
4104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
4105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 576              		.loc 1 4105 0
 577 0046 0268     		ldr	r2, [r0]
 578 0048 036D     		ldr	r3, [r0, #80]
 579 004a 1B88     		ldrh	r3, [r3]
 580 004c DB05     		lsls	r3, r3, #23
 581 004e DB0D     		lsrs	r3, r3, #23
 582 0050 9362     		str	r3, [r2, #40]
 583              	.LVL27:
4106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 584              		.loc 1 4106 0
 585 0052 036D     		ldr	r3, [r0, #80]
 586 0054 0233     		adds	r3, r3, #2
 587 0056 0365     		str	r3, [r0, #80]
4107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->TxXferCount--;
 588              		.loc 1 4107 0
 589 0058 5622     		movs	r2, #86
 590 005a 835A     		ldrh	r3, [r0, r2]
 591 005c 013B     		subs	r3, r3, #1
 592 005e 9BB2     		uxth	r3, r3
 593 0060 8352     		strh	r3, [r0, r2]
 594              	.LVL28:
 595              	.L11:
4108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
4109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
4110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
ARM GAS  /tmp/cceLjgLz.s 			page 92


 596              		.loc 1 4110 0
 597              		@ sp needed
 598 0062 10BD     		pop	{r4, pc}
 599              		.cfi_endproc
 600              	.LFE372:
 602              		.section	.text.UART_TxISR_8BIT_FIFOEN,"ax",%progbits
 603              		.align	2
 604              		.code	16
 605              		.thumb_func
 607              	UART_TxISR_8BIT_FIFOEN:
 608              	.LFB373:
4111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
4113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
4114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
4117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
4118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
4119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
4120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 609              		.loc 1 4120 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              	.LVL29:
 614 0000 10B5     		push	{r4, lr}
 615              	.LCFI4:
 616              		.cfi_def_cfa_offset 8
 617              		.cfi_offset 4, -8
 618              		.cfi_offset 14, -4
4121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  nb_tx_data;
4122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 619              		.loc 1 4124 0
 620 0002 8823     		movs	r3, #136
 621 0004 C358     		ldr	r3, [r0, r3]
 622 0006 212B     		cmp	r3, #33
 623 0008 33D1     		bne	.L14
4125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
4126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 624              		.loc 1 4126 0
 625 000a 4933     		adds	r3, r3, #73
 626 000c C35A     		ldrh	r3, [r0, r3]
 627              	.LVL30:
 628 000e 2EE0     		b	.L16
 629              	.L19:
4127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
4128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
 630              		.loc 1 4128 0
 631 0010 5622     		movs	r2, #86
 632 0012 825A     		ldrh	r2, [r0, r2]
 633 0014 92B2     		uxth	r2, r2
 634 0016 002A     		cmp	r2, #0
 635 0018 18D1     		bne	.L17
 636              	.LBB774:
ARM GAS  /tmp/cceLjgLz.s 			page 93


 637              	.LBB775:
 638              	.LBB776:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 639              		.loc 2 453 0
 640              		.syntax divided
 641              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 642 001a EFF31081 		MRS r1, primask
 643              	@ 0 "" 2
 644              	.LVL31:
 645              		.thumb
 646              		.syntax unified
 647              	.LBE776:
 648              	.LBE775:
 649              	.LBB777:
 650              	.LBB778:
 651              		.loc 2 481 0
 652 001e 0123     		movs	r3, #1
 653              	.LVL32:
 654              		.syntax divided
 655              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 656 0020 83F31088 		MSR primask, r3
 657              	@ 0 "" 2
 658              	.LVL33:
 659              		.thumb
 660              		.syntax unified
 661              	.LBE778:
 662              	.LBE777:
4129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
4130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 663              		.loc 1 4131 0
 664 0024 0268     		ldr	r2, [r0]
 665 0026 9468     		ldr	r4, [r2, #8]
 666 0028 124B     		ldr	r3, .L20
 667 002a 2340     		ands	r3, r4
 668 002c 9360     		str	r3, [r2, #8]
 669              	.LBB779:
 670              	.LBB780:
 671              		.loc 2 481 0
 672              		.syntax divided
 673              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 674 002e 81F31088 		MSR primask, r1
 675              	@ 0 "" 2
 676              		.thumb
 677              		.syntax unified
 678              	.LBE780:
 679              	.LBE779:
 680              	.LBE774:
 681              	.LBB781:
 682              	.LBB782:
 683              	.LBB783:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 684              		.loc 2 453 0
 685              		.syntax divided
 686              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 687 0032 EFF31081 		MRS r1, primask
 688              	@ 0 "" 2
ARM GAS  /tmp/cceLjgLz.s 			page 94


 689              	.LVL34:
 690              		.thumb
 691              		.syntax unified
 692              	.LBE783:
 693              	.LBE782:
 694              	.LBB784:
 695              	.LBB785:
 696              		.loc 2 481 0
 697 0036 0123     		movs	r3, #1
 698              		.syntax divided
 699              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 700 0038 83F31088 		MSR primask, r3
 701              	@ 0 "" 2
 702              	.LVL35:
 703              		.thumb
 704              		.syntax unified
 705              	.LBE785:
 706              	.LBE784:
4132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 707              		.loc 1 4134 0
 708 003c 0268     		ldr	r2, [r0]
 709 003e 1068     		ldr	r0, [r2]
 710              	.LVL36:
 711 0040 3F33     		adds	r3, r3, #63
 712 0042 0343     		orrs	r3, r0
 713 0044 1360     		str	r3, [r2]
 714              	.LBB786:
 715              	.LBB787:
 716              		.loc 2 481 0
 717              		.syntax divided
 718              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 719 0046 81F31088 		MSR primask, r1
 720              	@ 0 "" 2
 721              		.thumb
 722              		.syntax unified
 723 004a 12E0     		b	.L14
 724              	.LVL37:
 725              	.L17:
 726              	.LBE787:
 727              	.LBE786:
 728              	.LBE781:
4135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break; /* force exit loop */
4137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 729              		.loc 1 4138 0
 730 004c 0268     		ldr	r2, [r0]
 731 004e D169     		ldr	r1, [r2, #28]
 732 0050 0906     		lsls	r1, r1, #24
 733 0052 0AD5     		bpl	.L18
4139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
4140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 734              		.loc 1 4140 0
 735 0054 016D     		ldr	r1, [r0, #80]
 736 0056 0978     		ldrb	r1, [r1]
ARM GAS  /tmp/cceLjgLz.s 			page 95


 737 0058 9162     		str	r1, [r2, #40]
4141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->pTxBuffPtr++;
 738              		.loc 1 4141 0
 739 005a 026D     		ldr	r2, [r0, #80]
 740 005c 0132     		adds	r2, r2, #1
 741 005e 0265     		str	r2, [r0, #80]
4142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxXferCount--;
 742              		.loc 1 4142 0
 743 0060 5621     		movs	r1, #86
 744 0062 425A     		ldrh	r2, [r0, r1]
 745 0064 013A     		subs	r2, r2, #1
 746 0066 92B2     		uxth	r2, r2
 747 0068 4252     		strh	r2, [r0, r1]
 748              	.L18:
4126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 749              		.loc 1 4126 0 discriminator 2
 750 006a 013B     		subs	r3, r3, #1
 751              	.LVL38:
 752 006c 9BB2     		uxth	r3, r3
 753              	.LVL39:
 754              	.L16:
4126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 755              		.loc 1 4126 0 is_stmt 0 discriminator 1
 756 006e 002B     		cmp	r3, #0
 757 0070 CED1     		bne	.L19
 758              	.LVL40:
 759              	.L14:
4143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
4145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
4146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Nothing to do */
4147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
4149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
4150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 760              		.loc 1 4150 0 is_stmt 1
 761              		@ sp needed
 762 0072 10BD     		pop	{r4, pc}
 763              	.L21:
 764              		.align	2
 765              	.L20:
 766 0074 FFFF7FFF 		.word	-8388609
 767              		.cfi_endproc
 768              	.LFE373:
 770              		.section	.text.UART_TxISR_16BIT_FIFOEN,"ax",%progbits
 771              		.align	2
 772              		.code	16
 773              		.thumb_func
 775              	UART_TxISR_16BIT_FIFOEN:
 776              	.LFB374:
4151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
4153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length and FIFO mode is enabled.
4154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
4157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/cceLjgLz.s 			page 96


4158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
4159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 777              		.loc 1 4160 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              	.LVL41:
 782 0000 10B5     		push	{r4, lr}
 783              	.LCFI5:
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 4, -8
 786              		.cfi_offset 14, -4
4161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const uint16_t *tmp;
4162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  nb_tx_data;
4163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 787              		.loc 1 4165 0
 788 0002 8823     		movs	r3, #136
 789 0004 C358     		ldr	r3, [r0, r3]
 790 0006 212B     		cmp	r3, #33
 791 0008 35D1     		bne	.L22
4166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
4167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 792              		.loc 1 4167 0
 793 000a 4933     		adds	r3, r3, #73
 794 000c C35A     		ldrh	r3, [r0, r3]
 795              	.LVL42:
 796 000e 30E0     		b	.L24
 797              	.L27:
4168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
4169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
 798              		.loc 1 4169 0
 799 0010 5622     		movs	r2, #86
 800 0012 825A     		ldrh	r2, [r0, r2]
 801 0014 92B2     		uxth	r2, r2
 802 0016 002A     		cmp	r2, #0
 803 0018 18D1     		bne	.L25
 804              	.LBB788:
 805              	.LBB789:
 806              	.LBB790:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 807              		.loc 2 453 0
 808              		.syntax divided
 809              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 810 001a EFF31081 		MRS r1, primask
 811              	@ 0 "" 2
 812              	.LVL43:
 813              		.thumb
 814              		.syntax unified
 815              	.LBE790:
 816              	.LBE789:
 817              	.LBB791:
 818              	.LBB792:
 819              		.loc 2 481 0
 820 001e 0123     		movs	r3, #1
ARM GAS  /tmp/cceLjgLz.s 			page 97


 821              	.LVL44:
 822              		.syntax divided
 823              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 824 0020 83F31088 		MSR primask, r3
 825              	@ 0 "" 2
 826              	.LVL45:
 827              		.thumb
 828              		.syntax unified
 829              	.LBE792:
 830              	.LBE791:
4170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
4171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 831              		.loc 1 4172 0
 832 0024 0268     		ldr	r2, [r0]
 833 0026 9468     		ldr	r4, [r2, #8]
 834 0028 134B     		ldr	r3, .L28
 835 002a 2340     		ands	r3, r4
 836 002c 9360     		str	r3, [r2, #8]
 837              	.LBB793:
 838              	.LBB794:
 839              		.loc 2 481 0
 840              		.syntax divided
 841              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 842 002e 81F31088 		MSR primask, r1
 843              	@ 0 "" 2
 844              		.thumb
 845              		.syntax unified
 846              	.LBE794:
 847              	.LBE793:
 848              	.LBE788:
 849              	.LBB795:
 850              	.LBB796:
 851              	.LBB797:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 852              		.loc 2 453 0
 853              		.syntax divided
 854              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 855 0032 EFF31081 		MRS r1, primask
 856              	@ 0 "" 2
 857              	.LVL46:
 858              		.thumb
 859              		.syntax unified
 860              	.LBE797:
 861              	.LBE796:
 862              	.LBB798:
 863              	.LBB799:
 864              		.loc 2 481 0
 865 0036 0123     		movs	r3, #1
 866              		.syntax divided
 867              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 868 0038 83F31088 		MSR primask, r3
 869              	@ 0 "" 2
 870              	.LVL47:
 871              		.thumb
 872              		.syntax unified
 873              	.LBE799:
ARM GAS  /tmp/cceLjgLz.s 			page 98


 874              	.LBE798:
4173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 875              		.loc 1 4175 0
 876 003c 0268     		ldr	r2, [r0]
 877 003e 1068     		ldr	r0, [r2]
 878              	.LVL48:
 879 0040 3F33     		adds	r3, r3, #63
 880 0042 0343     		orrs	r3, r0
 881 0044 1360     		str	r3, [r2]
 882              	.LBB800:
 883              	.LBB801:
 884              		.loc 2 481 0
 885              		.syntax divided
 886              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 887 0046 81F31088 		MSR primask, r1
 888              	@ 0 "" 2
 889              		.thumb
 890              		.syntax unified
 891 004a 14E0     		b	.L22
 892              	.LVL49:
 893              	.L25:
 894              	.LBE801:
 895              	.LBE800:
 896              	.LBE795:
4176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break; /* force exit loop */
4178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 897              		.loc 1 4179 0
 898 004c 0168     		ldr	r1, [r0]
 899 004e CA69     		ldr	r2, [r1, #28]
 900 0050 1206     		lsls	r2, r2, #24
 901 0052 0CD5     		bpl	.L26
 902              	.LVL50:
4180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
4181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         tmp = (const uint16_t *) huart->pTxBuffPtr;
4182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 903              		.loc 1 4182 0
 904 0054 026D     		ldr	r2, [r0, #80]
 905 0056 1288     		ldrh	r2, [r2]
 906 0058 D205     		lsls	r2, r2, #23
 907 005a D20D     		lsrs	r2, r2, #23
 908 005c 8A62     		str	r2, [r1, #40]
 909              	.LVL51:
4183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 910              		.loc 1 4183 0
 911 005e 026D     		ldr	r2, [r0, #80]
 912 0060 0232     		adds	r2, r2, #2
 913 0062 0265     		str	r2, [r0, #80]
4184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->TxXferCount--;
 914              		.loc 1 4184 0
 915 0064 5621     		movs	r1, #86
 916 0066 425A     		ldrh	r2, [r0, r1]
 917 0068 013A     		subs	r2, r2, #1
 918 006a 92B2     		uxth	r2, r2
ARM GAS  /tmp/cceLjgLz.s 			page 99


 919 006c 4252     		strh	r2, [r0, r1]
 920              	.L26:
4167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 921              		.loc 1 4167 0 discriminator 2
 922 006e 013B     		subs	r3, r3, #1
 923              	.LVL52:
 924 0070 9BB2     		uxth	r3, r3
 925              	.LVL53:
 926              	.L24:
4167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 927              		.loc 1 4167 0 is_stmt 0 discriminator 1
 928 0072 002B     		cmp	r3, #0
 929 0074 CCD1     		bne	.L27
 930              	.LVL54:
 931              	.L22:
4185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
4187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
4188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Nothing to do */
4189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
4191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
4192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 932              		.loc 1 4192 0 is_stmt 1
 933              		@ sp needed
 934 0076 10BD     		pop	{r4, pc}
 935              	.L29:
 936              		.align	2
 937              	.L28:
 938 0078 FFFF7FFF 		.word	-8388609
 939              		.cfi_endproc
 940              	.LFE374:
 942              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 943              		.align	2
 944              		.weak	HAL_UART_MspInit
 945              		.code	16
 946              		.thumb_func
 948              	HAL_UART_MspInit:
 949              	.LFB315:
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 950              		.loc 1 672 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955              	.LVL55:
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 956              		.loc 1 679 0
 957              		@ sp needed
 958 0000 7047     		bx	lr
 959              		.cfi_endproc
 960              	.LFE315:
 962 0002 C046     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 963              		.align	2
 964              		.weak	HAL_UART_MspDeInit
 965              		.code	16
 966              		.thumb_func
ARM GAS  /tmp/cceLjgLz.s 			page 100


 968              	HAL_UART_MspDeInit:
 969              	.LFB316:
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 970              		.loc 1 687 0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 0
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 974              		@ link register save eliminated.
 975              	.LVL56:
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 976              		.loc 1 694 0
 977              		@ sp needed
 978 0000 7047     		bx	lr
 979              		.cfi_endproc
 980              	.LFE316:
 982 0002 C046     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 983              		.align	2
 984              		.global	HAL_UART_DeInit
 985              		.code	16
 986              		.thumb_func
 988              	HAL_UART_DeInit:
 989              	.LFB314:
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 990              		.loc 1 625 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 994              	.LVL57:
 995 0000 70B5     		push	{r4, r5, r6, lr}
 996              	.LCFI6:
 997              		.cfi_def_cfa_offset 16
 998              		.cfi_offset 4, -16
 999              		.cfi_offset 5, -12
 1000              		.cfi_offset 6, -8
 1001              		.cfi_offset 14, -4
 1002 0002 041E     		subs	r4, r0, #0
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 1003              		.loc 1 627 0
 1004 0004 1BD0     		beq	.L34
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1005              		.loc 1 635 0
 1006 0006 8826     		movs	r6, #136
 1007 0008 2423     		movs	r3, #36
 1008 000a 8351     		str	r3, [r0, r6]
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1009              		.loc 1 637 0
 1010 000c 0268     		ldr	r2, [r0]
 1011 000e 1368     		ldr	r3, [r2]
 1012 0010 0121     		movs	r1, #1
 1013 0012 8B43     		bics	r3, r1
 1014 0014 1360     		str	r3, [r2]
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 1015              		.loc 1 639 0
 1016 0016 0368     		ldr	r3, [r0]
 1017 0018 0025     		movs	r5, #0
 1018 001a 1D60     		str	r5, [r3]
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
ARM GAS  /tmp/cceLjgLz.s 			page 101


 1019              		.loc 1 640 0
 1020 001c 0368     		ldr	r3, [r0]
 1021 001e 5D60     		str	r5, [r3, #4]
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1022              		.loc 1 641 0
 1023 0020 0368     		ldr	r3, [r0]
 1024 0022 9D60     		str	r5, [r3, #8]
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 1025              		.loc 1 652 0
 1026 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 1027              	.LVL58:
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 1028              		.loc 1 655 0
 1029 0028 9023     		movs	r3, #144
 1030 002a E550     		str	r5, [r4, r3]
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 1031              		.loc 1 656 0
 1032 002c A551     		str	r5, [r4, r6]
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1033              		.loc 1 657 0
 1034 002e 043B     		subs	r3, r3, #4
 1035 0030 E550     		str	r5, [r4, r3]
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 1036              		.loc 1 658 0
 1037 0032 E566     		str	r5, [r4, #108]
 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1038              		.loc 1 659 0
 1039 0034 2567     		str	r5, [r4, #112]
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1040              		.loc 1 661 0
 1041 0036 083B     		subs	r3, r3, #8
 1042 0038 E554     		strb	r5, [r4, r3]
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 1043              		.loc 1 663 0
 1044 003a 0020     		movs	r0, #0
 1045 003c 00E0     		b	.L33
 1046              	.LVL59:
 1047              	.L34:
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1048              		.loc 1 629 0
 1049 003e 0120     		movs	r0, #1
 1050              	.LVL60:
 1051              	.L33:
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1052              		.loc 1 664 0
 1053              		@ sp needed
 1054              	.LVL61:
 1055 0040 70BD     		pop	{r4, r5, r6, pc}
 1056              		.cfi_endproc
 1057              	.LFE314:
 1059 0042 C046     		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1060              		.align	2
 1061              		.global	HAL_UART_Transmit_IT
 1062              		.code	16
 1063              		.thumb_func
 1065              	HAL_UART_Transmit_IT:
 1066              	.LFB319:
ARM GAS  /tmp/cceLjgLz.s 			page 102


1327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1067              		.loc 1 1327 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071              	.LVL62:
 1072 0000 10B5     		push	{r4, lr}
 1073              	.LCFI7:
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 4, -8
 1076              		.cfi_offset 14, -4
1329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 1077              		.loc 1 1329 0
 1078 0002 8823     		movs	r3, #136
 1079 0004 C358     		ldr	r3, [r0, r3]
 1080 0006 202B     		cmp	r3, #32
 1081 0008 53D1     		bne	.L43
1331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1082              		.loc 1 1331 0
 1083 000a 0029     		cmp	r1, #0
 1084 000c 53D0     		beq	.L44
1331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1085              		.loc 1 1331 0 is_stmt 0 discriminator 1
 1086 000e 002A     		cmp	r2, #0
 1087 0010 53D0     		beq	.L45
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1088              		.loc 1 1339 0 is_stmt 1
 1089 0012 8368     		ldr	r3, [r0, #8]
 1090 0014 8024     		movs	r4, #128
 1091 0016 6401     		lsls	r4, r4, #5
 1092 0018 A342     		cmp	r3, r4
 1093 001a 04D1     		bne	.L37
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1094              		.loc 1 1339 0 is_stmt 0 discriminator 1
 1095 001c 0469     		ldr	r4, [r0, #16]
 1096 001e 002C     		cmp	r4, #0
 1097 0020 01D1     		bne	.L37
1341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1098              		.loc 1 1341 0 is_stmt 1
 1099 0022 CC07     		lsls	r4, r1, #31
 1100 0024 4BD4     		bmi	.L46
 1101              	.L37:
1347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1102              		.loc 1 1347 0
 1103 0026 0165     		str	r1, [r0, #80]
1348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = Size;
 1104              		.loc 1 1348 0
 1105 0028 5421     		movs	r1, #84
 1106              	.LVL63:
 1107 002a 4252     		strh	r2, [r0, r1]
 1108              	.LVL64:
1349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxISR       = NULL;
 1109              		.loc 1 1349 0
 1110 002c 0231     		adds	r1, r1, #2
 1111 002e 4252     		strh	r2, [r0, r1]
1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1112              		.loc 1 1350 0
ARM GAS  /tmp/cceLjgLz.s 			page 103


 1113 0030 0022     		movs	r2, #0
 1114              	.LVL65:
 1115 0032 8267     		str	r2, [r0, #120]
 1116              	.LVL66:
1352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1117              		.loc 1 1352 0
 1118 0034 3A31     		adds	r1, r1, #58
 1119 0036 4250     		str	r2, [r0, r1]
1353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1120              		.loc 1 1353 0
 1121 0038 6F39     		subs	r1, r1, #111
 1122 003a 8832     		adds	r2, r2, #136
 1123 003c 8150     		str	r1, [r0, r2]
1356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1124              		.loc 1 1356 0
 1125 003e 8022     		movs	r2, #128
 1126 0040 9205     		lsls	r2, r2, #22
 1127 0042 416E     		ldr	r1, [r0, #100]
 1128 0044 9142     		cmp	r1, r2
 1129 0046 1AD1     		bne	.L38
1359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1130              		.loc 1 1359 0
 1131 0048 8022     		movs	r2, #128
 1132 004a 5201     		lsls	r2, r2, #5
 1133 004c 9342     		cmp	r3, r2
 1134 004e 05D1     		bne	.L39
1359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1135              		.loc 1 1359 0 is_stmt 0 discriminator 1
 1136 0050 0369     		ldr	r3, [r0, #16]
 1137 0052 002B     		cmp	r3, #0
 1138 0054 02D1     		bne	.L39
1361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 1139              		.loc 1 1361 0 is_stmt 1
 1140 0056 1B4B     		ldr	r3, .L47
 1141 0058 8367     		str	r3, [r0, #120]
 1142 005a 01E0     		b	.L40
 1143              	.L39:
1365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 1144              		.loc 1 1365 0
 1145 005c 1A4B     		ldr	r3, .L47+4
 1146 005e 8367     		str	r3, [r0, #120]
 1147              	.L40:
 1148              	.LBB802:
 1149              	.LBB803:
 1150              	.LBB804:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1151              		.loc 2 453 0
 1152              		.syntax divided
 1153              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1154 0060 EFF31081 		MRS r1, primask
 1155              	@ 0 "" 2
 1156              	.LVL67:
 1157              		.thumb
 1158              		.syntax unified
 1159              	.LBE804:
 1160              	.LBE803:
 1161              	.LBB805:
ARM GAS  /tmp/cceLjgLz.s 			page 104


 1162              	.LBB806:
 1163              		.loc 2 481 0
 1164 0064 0123     		movs	r3, #1
 1165              		.syntax divided
 1166              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1167 0066 83F31088 		MSR primask, r3
 1168              	@ 0 "" 2
 1169              	.LVL68:
 1170              		.thumb
 1171              		.syntax unified
 1172              	.LBE806:
 1173              	.LBE805:
1369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 1174              		.loc 1 1369 0
 1175 006a 0268     		ldr	r2, [r0]
 1176 006c 9368     		ldr	r3, [r2, #8]
 1177 006e 8020     		movs	r0, #128
 1178              	.LVL69:
 1179 0070 0004     		lsls	r0, r0, #16
 1180 0072 0343     		orrs	r3, r0
 1181 0074 9360     		str	r3, [r2, #8]
 1182              	.LBB807:
 1183              	.LBB808:
 1184              		.loc 2 481 0
 1185              		.syntax divided
 1186              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1187 0076 81F31088 		MSR primask, r1
 1188              	@ 0 "" 2
 1189              		.thumb
 1190              		.syntax unified
 1191              	.LBE808:
 1192              	.LBE807:
 1193              	.LBE802:
1387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1194              		.loc 1 1387 0
 1195 007a 0020     		movs	r0, #0
 1196 007c 20E0     		b	.L36
 1197              	.LVL70:
 1198              	.L38:
1374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1199              		.loc 1 1374 0
 1200 007e 8022     		movs	r2, #128
 1201 0080 5201     		lsls	r2, r2, #5
 1202 0082 9342     		cmp	r3, r2
 1203 0084 05D1     		bne	.L41
1374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1204              		.loc 1 1374 0 is_stmt 0 discriminator 1
 1205 0086 0369     		ldr	r3, [r0, #16]
 1206 0088 002B     		cmp	r3, #0
 1207 008a 02D1     		bne	.L41
1376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 1208              		.loc 1 1376 0 is_stmt 1
 1209 008c 0F4B     		ldr	r3, .L47+8
 1210 008e 8367     		str	r3, [r0, #120]
 1211 0090 01E0     		b	.L42
 1212              	.L41:
1380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
ARM GAS  /tmp/cceLjgLz.s 			page 105


 1213              		.loc 1 1380 0
 1214 0092 0F4B     		ldr	r3, .L47+12
 1215 0094 8367     		str	r3, [r0, #120]
 1216              	.L42:
 1217              	.LBB809:
 1218              	.LBB810:
 1219              	.LBB811:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1220              		.loc 2 453 0
 1221              		.syntax divided
 1222              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1223 0096 EFF31081 		MRS r1, primask
 1224              	@ 0 "" 2
 1225              	.LVL71:
 1226              		.thumb
 1227              		.syntax unified
 1228              	.LBE811:
 1229              	.LBE810:
 1230              	.LBB812:
 1231              	.LBB813:
 1232              		.loc 2 481 0
 1233 009a 0123     		movs	r3, #1
 1234              		.syntax divided
 1235              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1236 009c 83F31088 		MSR primask, r3
 1237              	@ 0 "" 2
 1238              	.LVL72:
 1239              		.thumb
 1240              		.syntax unified
 1241              	.LBE813:
 1242              	.LBE812:
1384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 1243              		.loc 1 1384 0
 1244 00a0 0268     		ldr	r2, [r0]
 1245 00a2 1068     		ldr	r0, [r2]
 1246              	.LVL73:
 1247 00a4 7F33     		adds	r3, r3, #127
 1248 00a6 0343     		orrs	r3, r0
 1249 00a8 1360     		str	r3, [r2]
 1250              	.LBB814:
 1251              	.LBB815:
 1252              		.loc 2 481 0
 1253              		.syntax divided
 1254              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1255 00aa 81F31088 		MSR primask, r1
 1256              	@ 0 "" 2
 1257              		.thumb
 1258              		.syntax unified
 1259              	.LBE815:
 1260              	.LBE814:
 1261              	.LBE809:
1387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1262              		.loc 1 1387 0
 1263 00ae 0020     		movs	r0, #0
 1264 00b0 06E0     		b	.L36
 1265              	.LVL74:
 1266              	.L43:
ARM GAS  /tmp/cceLjgLz.s 			page 106


1391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1267              		.loc 1 1391 0
 1268 00b2 0220     		movs	r0, #2
 1269              	.LVL75:
 1270 00b4 04E0     		b	.L36
 1271              	.LVL76:
 1272              	.L44:
1333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 1273              		.loc 1 1333 0
 1274 00b6 0120     		movs	r0, #1
 1275              	.LVL77:
 1276 00b8 02E0     		b	.L36
 1277              	.LVL78:
 1278              	.L45:
 1279 00ba 0120     		movs	r0, #1
 1280              	.LVL79:
 1281 00bc 00E0     		b	.L36
 1282              	.LVL80:
 1283              	.L46:
1343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 1284              		.loc 1 1343 0
 1285 00be 0120     		movs	r0, #1
 1286              	.LVL81:
 1287              	.L36:
1393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1288              		.loc 1 1393 0
 1289              		@ sp needed
 1290 00c0 10BD     		pop	{r4, pc}
 1291              	.L48:
 1292 00c2 C046     		.align	2
 1293              	.L47:
 1294 00c4 00000000 		.word	UART_TxISR_16BIT_FIFOEN
 1295 00c8 00000000 		.word	UART_TxISR_8BIT_FIFOEN
 1296 00cc 00000000 		.word	UART_TxISR_16BIT
 1297 00d0 00000000 		.word	UART_TxISR_8BIT
 1298              		.cfi_endproc
 1299              	.LFE319:
 1301              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1302              		.align	2
 1303              		.global	HAL_UART_Transmit_DMA
 1304              		.code	16
 1305              		.thumb_func
 1307              	HAL_UART_Transmit_DMA:
 1308              	.LFB321:
1468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1309              		.loc 1 1468 0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 0
 1312              		@ frame_needed = 0, uses_anonymous_args = 0
 1313              	.LVL82:
 1314 0000 10B5     		push	{r4, lr}
 1315              	.LCFI8:
 1316              		.cfi_def_cfa_offset 8
 1317              		.cfi_offset 4, -8
 1318              		.cfi_offset 14, -4
 1319 0002 0400     		movs	r4, r0
1470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
ARM GAS  /tmp/cceLjgLz.s 			page 107


 1320              		.loc 1 1470 0
 1321 0004 8820     		movs	r0, #136
 1322              	.LVL83:
 1323 0006 2058     		ldr	r0, [r4, r0]
 1324 0008 2028     		cmp	r0, #32
 1325 000a 49D1     		bne	.L53
1472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1326              		.loc 1 1472 0
 1327 000c 0029     		cmp	r1, #0
 1328 000e 49D0     		beq	.L54
1472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1329              		.loc 1 1472 0 is_stmt 0 discriminator 1
 1330 0010 002A     		cmp	r2, #0
 1331 0012 49D0     		beq	.L55
1480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1332              		.loc 1 1480 0 is_stmt 1
 1333 0014 8023     		movs	r3, #128
 1334 0016 5B01     		lsls	r3, r3, #5
 1335 0018 A068     		ldr	r0, [r4, #8]
 1336 001a 9842     		cmp	r0, r3
 1337 001c 04D1     		bne	.L51
1480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1338              		.loc 1 1480 0 is_stmt 0 discriminator 1
 1339 001e 2369     		ldr	r3, [r4, #16]
 1340 0020 002B     		cmp	r3, #0
 1341 0022 01D1     		bne	.L51
1482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1342              		.loc 1 1482 0 is_stmt 1
 1343 0024 CB07     		lsls	r3, r1, #31
 1344 0026 41D4     		bmi	.L56
 1345              	.L51:
1488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1346              		.loc 1 1488 0
 1347 0028 2165     		str	r1, [r4, #80]
1489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = Size;
 1348              		.loc 1 1489 0
 1349 002a 5423     		movs	r3, #84
 1350 002c E252     		strh	r2, [r4, r3]
1490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1351              		.loc 1 1490 0
 1352 002e 0233     		adds	r3, r3, #2
 1353 0030 E252     		strh	r2, [r4, r3]
1492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1354              		.loc 1 1492 0
 1355 0032 0021     		movs	r1, #0
 1356              	.LVL84:
 1357 0034 3A33     		adds	r3, r3, #58
 1358 0036 E150     		str	r1, [r4, r3]
1493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1359              		.loc 1 1493 0
 1360 0038 2131     		adds	r1, r1, #33
 1361 003a 083B     		subs	r3, r3, #8
 1362 003c E150     		str	r1, [r4, r3]
1495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1363              		.loc 1 1495 0
 1364 003e E36F     		ldr	r3, [r4, #124]
 1365 0040 002B     		cmp	r3, #0
ARM GAS  /tmp/cceLjgLz.s 			page 108


 1366 0042 1CD0     		beq	.L52
1498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1367              		.loc 1 1498 0
 1368 0044 1A49     		ldr	r1, .L57
 1369 0046 D962     		str	r1, [r3, #44]
1501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1370              		.loc 1 1501 0
 1371 0048 E36F     		ldr	r3, [r4, #124]
 1372 004a 1A49     		ldr	r1, .L57+4
 1373 004c 1963     		str	r1, [r3, #48]
1504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1374              		.loc 1 1504 0
 1375 004e E36F     		ldr	r3, [r4, #124]
 1376 0050 1949     		ldr	r1, .L57+8
 1377 0052 5963     		str	r1, [r3, #52]
1507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1378              		.loc 1 1507 0
 1379 0054 E36F     		ldr	r3, [r4, #124]
 1380 0056 0021     		movs	r1, #0
 1381 0058 9963     		str	r1, [r3, #56]
1510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 1382              		.loc 1 1510 0
 1383 005a 2168     		ldr	r1, [r4]
 1384 005c 2831     		adds	r1, r1, #40
 1385 005e 1300     		movs	r3, r2
 1386 0060 0A00     		movs	r2, r1
 1387              	.LVL85:
 1388 0062 216D     		ldr	r1, [r4, #80]
 1389 0064 E06F     		ldr	r0, [r4, #124]
 1390 0066 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1391              	.LVL86:
 1392 006a 0028     		cmp	r0, #0
 1393 006c 07D0     		beq	.L52
1513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1394              		.loc 1 1513 0
 1395 006e 1022     		movs	r2, #16
 1396 0070 9023     		movs	r3, #144
 1397 0072 E250     		str	r2, [r4, r3]
1516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1398              		.loc 1 1516 0
 1399 0074 1032     		adds	r2, r2, #16
 1400 0076 083B     		subs	r3, r3, #8
 1401 0078 E250     		str	r2, [r4, r3]
1518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 1402              		.loc 1 1518 0
 1403 007a 0120     		movs	r0, #1
 1404 007c 17E0     		b	.L50
 1405              	.L52:
1522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1406              		.loc 1 1522 0
 1407 007e 2368     		ldr	r3, [r4]
 1408 0080 4022     		movs	r2, #64
 1409 0082 1A62     		str	r2, [r3, #32]
 1410              	.LBB816:
 1411              	.LBB817:
 1412              	.LBB818:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/cceLjgLz.s 			page 109


 1413              		.loc 2 453 0
 1414              		.syntax divided
 1415              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1416 0084 EFF31081 		MRS r1, primask
 1417              	@ 0 "" 2
 1418              	.LVL87:
 1419              		.thumb
 1420              		.syntax unified
 1421              	.LBE818:
 1422              	.LBE817:
 1423              	.LBB819:
 1424              	.LBB820:
 1425              		.loc 2 481 0
 1426 0088 0123     		movs	r3, #1
 1427              		.syntax divided
 1428              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1429 008a 83F31088 		MSR primask, r3
 1430              	@ 0 "" 2
 1431              	.LVL88:
 1432              		.thumb
 1433              		.syntax unified
 1434              	.LBE820:
 1435              	.LBE819:
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1436              		.loc 1 1526 0
 1437 008e 2268     		ldr	r2, [r4]
 1438 0090 9068     		ldr	r0, [r2, #8]
 1439 0092 7F33     		adds	r3, r3, #127
 1440 0094 0343     		orrs	r3, r0
 1441 0096 9360     		str	r3, [r2, #8]
 1442              	.LBB821:
 1443              	.LBB822:
 1444              		.loc 2 481 0
 1445              		.syntax divided
 1446              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1447 0098 81F31088 		MSR primask, r1
 1448              	@ 0 "" 2
 1449              		.thumb
 1450              		.syntax unified
 1451              	.LBE822:
 1452              	.LBE821:
 1453              	.LBE816:
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1454              		.loc 1 1528 0
 1455 009c 0020     		movs	r0, #0
 1456 009e 06E0     		b	.L50
 1457              	.LVL89:
 1458              	.L53:
1532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1459              		.loc 1 1532 0
 1460 00a0 0220     		movs	r0, #2
 1461 00a2 04E0     		b	.L50
 1462              	.L54:
1474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 1463              		.loc 1 1474 0
 1464 00a4 0120     		movs	r0, #1
 1465 00a6 02E0     		b	.L50
ARM GAS  /tmp/cceLjgLz.s 			page 110


 1466              	.L55:
 1467 00a8 0120     		movs	r0, #1
 1468 00aa 00E0     		b	.L50
 1469              	.L56:
1484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 1470              		.loc 1 1484 0
 1471 00ac 0120     		movs	r0, #1
 1472              	.LVL90:
 1473              	.L50:
1534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1474              		.loc 1 1534 0
 1475              		@ sp needed
 1476              	.LVL91:
 1477 00ae 10BD     		pop	{r4, pc}
 1478              	.L58:
 1479              		.align	2
 1480              	.L57:
 1481 00b0 00000000 		.word	UART_DMATransmitCplt
 1482 00b4 00000000 		.word	UART_DMATxHalfCplt
 1483 00b8 00000000 		.word	UART_DMAError
 1484              		.cfi_endproc
 1485              	.LFE321:
 1487              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1488              		.align	2
 1489              		.global	HAL_UART_DMAPause
 1490              		.code	16
 1491              		.thumb_func
 1493              	HAL_UART_DMAPause:
 1494              	.LFB323:
1601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 1495              		.loc 1 1601 0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              	.LVL92:
 1500 0000 30B5     		push	{r4, r5, lr}
 1501              	.LCFI9:
 1502              		.cfi_def_cfa_offset 12
 1503              		.cfi_offset 4, -12
 1504              		.cfi_offset 5, -8
 1505              		.cfi_offset 14, -4
1602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1506              		.loc 1 1602 0
 1507 0002 8823     		movs	r3, #136
 1508 0004 C158     		ldr	r1, [r0, r3]
 1509              	.LVL93:
1603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1510              		.loc 1 1603 0
 1511 0006 0433     		adds	r3, r3, #4
 1512 0008 C258     		ldr	r2, [r0, r3]
 1513              	.LVL94:
1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1514              		.loc 1 1605 0
 1515 000a 0368     		ldr	r3, [r0]
 1516 000c 9B68     		ldr	r3, [r3, #8]
 1517 000e 1B06     		lsls	r3, r3, #24
 1518 0010 0DD5     		bpl	.L60
ARM GAS  /tmp/cceLjgLz.s 			page 111


1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1519              		.loc 1 1605 0 is_stmt 0 discriminator 1
 1520 0012 2129     		cmp	r1, #33
 1521 0014 0BD1     		bne	.L60
 1522              	.LBB823:
 1523              	.LBB824:
 1524              	.LBB825:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1525              		.loc 2 453 0 is_stmt 1
 1526              		.syntax divided
 1527              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1528 0016 EFF31084 		MRS r4, primask
 1529              	@ 0 "" 2
 1530              	.LVL95:
 1531              		.thumb
 1532              		.syntax unified
 1533              	.LBE825:
 1534              	.LBE824:
 1535              	.LBB826:
 1536              	.LBB827:
 1537              		.loc 2 481 0
 1538 001a 0123     		movs	r3, #1
 1539              		.syntax divided
 1540              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1541 001c 83F31088 		MSR primask, r3
 1542              	@ 0 "" 2
 1543              	.LVL96:
 1544              		.thumb
 1545              		.syntax unified
 1546              	.LBE827:
 1547              	.LBE826:
1609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1548              		.loc 1 1609 0
 1549 0020 0168     		ldr	r1, [r0]
 1550              	.LVL97:
 1551 0022 8B68     		ldr	r3, [r1, #8]
 1552 0024 8025     		movs	r5, #128
 1553 0026 AB43     		bics	r3, r5
 1554 0028 8B60     		str	r3, [r1, #8]
 1555              	.LBB828:
 1556              	.LBB829:
 1557              		.loc 2 481 0
 1558              		.syntax divided
 1559              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1560 002a 84F31088 		MSR primask, r4
 1561              	@ 0 "" 2
 1562              		.thumb
 1563              		.syntax unified
 1564              	.L60:
 1565              	.LBE829:
 1566              	.LBE828:
 1567              	.LBE823:
1611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1568              		.loc 1 1611 0
 1569 002e 0368     		ldr	r3, [r0]
 1570 0030 9B68     		ldr	r3, [r3, #8]
 1571 0032 5B06     		lsls	r3, r3, #25
ARM GAS  /tmp/cceLjgLz.s 			page 112


 1572 0034 24D5     		bpl	.L61
1611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1573              		.loc 1 1611 0 is_stmt 0 discriminator 1
 1574 0036 222A     		cmp	r2, #34
 1575 0038 22D1     		bne	.L61
 1576              	.LBB830:
 1577              	.LBB831:
 1578              	.LBB832:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1579              		.loc 2 453 0 is_stmt 1
 1580              		.syntax divided
 1581              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1582 003a EFF31084 		MRS r4, primask
 1583              	@ 0 "" 2
 1584              	.LVL98:
 1585              		.thumb
 1586              		.syntax unified
 1587              	.LBE832:
 1588              	.LBE831:
 1589              	.LBB833:
 1590              	.LBB834:
 1591              		.loc 2 481 0
 1592 003e 0121     		movs	r1, #1
 1593              		.syntax divided
 1594              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1595 0040 81F31088 		MSR primask, r1
 1596              	@ 0 "" 2
 1597              	.LVL99:
 1598              		.thumb
 1599              		.syntax unified
 1600              	.LBE834:
 1601              	.LBE833:
1615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1602              		.loc 1 1615 0
 1603 0044 0268     		ldr	r2, [r0]
 1604              	.LVL100:
 1605 0046 1568     		ldr	r5, [r2]
 1606 0048 0E4B     		ldr	r3, .L62
 1607 004a 2B40     		ands	r3, r5
 1608 004c 1360     		str	r3, [r2]
 1609              	.LBB835:
 1610              	.LBB836:
 1611              		.loc 2 481 0
 1612              		.syntax divided
 1613              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1614 004e 84F31088 		MSR primask, r4
 1615              	@ 0 "" 2
 1616              		.thumb
 1617              		.syntax unified
 1618              	.LBE836:
 1619              	.LBE835:
 1620              	.LBE830:
 1621              	.LBB837:
 1622              	.LBB838:
 1623              	.LBB839:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1624              		.loc 2 453 0
ARM GAS  /tmp/cceLjgLz.s 			page 113


 1625              		.syntax divided
 1626              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1627 0052 EFF31084 		MRS r4, primask
 1628              	@ 0 "" 2
 1629              	.LVL101:
 1630              		.thumb
 1631              		.syntax unified
 1632              	.LBE839:
 1633              	.LBE838:
 1634              	.LBB840:
 1635              	.LBB841:
 1636              		.loc 2 481 0
 1637 0056 0123     		movs	r3, #1
 1638              		.syntax divided
 1639              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1640 0058 83F31088 		MSR primask, r3
 1641              	@ 0 "" 2
 1642              	.LVL102:
 1643              		.thumb
 1644              		.syntax unified
 1645              	.LBE841:
 1646              	.LBE840:
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1647              		.loc 1 1616 0
 1648 005c 0268     		ldr	r2, [r0]
 1649 005e 9368     		ldr	r3, [r2, #8]
 1650 0060 8B43     		bics	r3, r1
 1651 0062 9360     		str	r3, [r2, #8]
 1652              	.LBB842:
 1653              	.LBB843:
 1654              		.loc 2 481 0
 1655              		.syntax divided
 1656              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1657 0064 84F31088 		MSR primask, r4
 1658              	@ 0 "" 2
 1659              		.thumb
 1660              		.syntax unified
 1661              	.LBE843:
 1662              	.LBE842:
 1663              	.LBE837:
 1664              	.LBB844:
 1665              	.LBB845:
 1666              	.LBB846:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1667              		.loc 2 453 0
 1668              		.syntax divided
 1669              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1670 0068 EFF31081 		MRS r1, primask
 1671              	@ 0 "" 2
 1672              	.LVL103:
 1673              		.thumb
 1674              		.syntax unified
 1675              	.LBE846:
 1676              	.LBE845:
 1677              	.LBB847:
 1678              	.LBB848:
 1679              		.loc 2 481 0
ARM GAS  /tmp/cceLjgLz.s 			page 114


 1680 006c 0123     		movs	r3, #1
 1681              		.syntax divided
 1682              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1683 006e 83F31088 		MSR primask, r3
 1684              	@ 0 "" 2
 1685              	.LVL104:
 1686              		.thumb
 1687              		.syntax unified
 1688              	.LBE848:
 1689              	.LBE847:
1619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1690              		.loc 1 1619 0
 1691 0072 0268     		ldr	r2, [r0]
 1692 0074 9368     		ldr	r3, [r2, #8]
 1693 0076 4020     		movs	r0, #64
 1694              	.LVL105:
 1695 0078 8343     		bics	r3, r0
 1696 007a 9360     		str	r3, [r2, #8]
 1697              	.LBB849:
 1698              	.LBB850:
 1699              		.loc 2 481 0
 1700              		.syntax divided
 1701              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1702 007c 81F31088 		MSR primask, r1
 1703              	@ 0 "" 2
 1704              		.thumb
 1705              		.syntax unified
 1706              	.L61:
 1707              	.LBE850:
 1708              	.LBE849:
 1709              	.LBE844:
1623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1710              		.loc 1 1623 0
 1711 0080 0020     		movs	r0, #0
 1712              		@ sp needed
 1713 0082 30BD     		pop	{r4, r5, pc}
 1714              	.L63:
 1715              		.align	2
 1716              	.L62:
 1717 0084 FFFEFFFF 		.word	-257
 1718              		.cfi_endproc
 1719              	.LFE323:
 1721              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1722              		.align	2
 1723              		.global	HAL_UART_DMAResume
 1724              		.code	16
 1725              		.thumb_func
 1727              	HAL_UART_DMAResume:
 1728              	.LFB324:
1631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 1729              		.loc 1 1631 0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 0
 1732              		@ frame_needed = 0, uses_anonymous_args = 0
 1733              	.LVL106:
 1734 0000 10B5     		push	{r4, lr}
 1735              	.LCFI10:
ARM GAS  /tmp/cceLjgLz.s 			page 115


 1736              		.cfi_def_cfa_offset 8
 1737              		.cfi_offset 4, -8
 1738              		.cfi_offset 14, -4
1632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 1739              		.loc 1 1632 0
 1740 0002 8823     		movs	r3, #136
 1741 0004 C358     		ldr	r3, [r0, r3]
 1742 0006 212B     		cmp	r3, #33
 1743 0008 0BD1     		bne	.L65
 1744              	.LBB851:
 1745              	.LBB852:
 1746              	.LBB853:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1747              		.loc 2 453 0
 1748              		.syntax divided
 1749              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1750 000a EFF31081 		MRS r1, primask
 1751              	@ 0 "" 2
 1752              	.LVL107:
 1753              		.thumb
 1754              		.syntax unified
 1755              	.LBE853:
 1756              	.LBE852:
 1757              	.LBB854:
 1758              	.LBB855:
 1759              		.loc 2 481 0
 1760 000e 203B     		subs	r3, r3, #32
 1761              		.syntax divided
 1762              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1763 0010 83F31088 		MSR primask, r3
 1764              	@ 0 "" 2
 1765              	.LVL108:
 1766              		.thumb
 1767              		.syntax unified
 1768              	.LBE855:
 1769              	.LBE854:
1635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1770              		.loc 1 1635 0
 1771 0014 0268     		ldr	r2, [r0]
 1772 0016 9468     		ldr	r4, [r2, #8]
 1773 0018 7F33     		adds	r3, r3, #127
 1774 001a 2343     		orrs	r3, r4
 1775 001c 9360     		str	r3, [r2, #8]
 1776              	.LBB856:
 1777              	.LBB857:
 1778              		.loc 2 481 0
 1779              		.syntax divided
 1780              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1781 001e 81F31088 		MSR primask, r1
 1782              	@ 0 "" 2
 1783              		.thumb
 1784              		.syntax unified
 1785              	.L65:
 1786              	.LBE857:
 1787              	.LBE856:
 1788              	.LBE851:
1637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
ARM GAS  /tmp/cceLjgLz.s 			page 116


 1789              		.loc 1 1637 0
 1790 0022 8C23     		movs	r3, #140
 1791 0024 C358     		ldr	r3, [r0, r3]
 1792 0026 222B     		cmp	r3, #34
 1793 0028 29D1     		bne	.L66
1640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1794              		.loc 1 1640 0
 1795 002a 0368     		ldr	r3, [r0]
 1796 002c 0822     		movs	r2, #8
 1797 002e 1A62     		str	r2, [r3, #32]
1643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 1798              		.loc 1 1643 0
 1799 0030 0369     		ldr	r3, [r0, #16]
 1800 0032 002B     		cmp	r3, #0
 1801 0034 0CD0     		beq	.L67
 1802              	.LBB858:
 1803              	.LBB859:
 1804              	.LBB860:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1805              		.loc 2 453 0
 1806              		.syntax divided
 1807              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1808 0036 EFF31081 		MRS r1, primask
 1809              	@ 0 "" 2
 1810              	.LVL109:
 1811              		.thumb
 1812              		.syntax unified
 1813              	.LBE860:
 1814              	.LBE859:
 1815              	.LBB861:
 1816              	.LBB862:
 1817              		.loc 2 481 0
 1818 003a 0123     		movs	r3, #1
 1819              		.syntax divided
 1820              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1821 003c 83F31088 		MSR primask, r3
 1822              	@ 0 "" 2
 1823              	.LVL110:
 1824              		.thumb
 1825              		.syntax unified
 1826              	.LBE862:
 1827              	.LBE861:
1645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 1828              		.loc 1 1645 0
 1829 0040 0268     		ldr	r2, [r0]
 1830 0042 1368     		ldr	r3, [r2]
 1831 0044 8024     		movs	r4, #128
 1832 0046 6400     		lsls	r4, r4, #1
 1833 0048 2343     		orrs	r3, r4
 1834 004a 1360     		str	r3, [r2]
 1835              	.LBB863:
 1836              	.LBB864:
 1837              		.loc 2 481 0
 1838              		.syntax divided
 1839              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1840 004c 81F31088 		MSR primask, r1
 1841              	@ 0 "" 2
ARM GAS  /tmp/cceLjgLz.s 			page 117


 1842              		.thumb
 1843              		.syntax unified
 1844              	.L67:
 1845              	.LBE864:
 1846              	.LBE863:
 1847              	.LBE858:
 1848              	.LBB865:
 1849              	.LBB866:
 1850              	.LBB867:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1851              		.loc 2 453 0
 1852              		.syntax divided
 1853              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1854 0050 EFF31081 		MRS r1, primask
 1855              	@ 0 "" 2
 1856              	.LVL111:
 1857              		.thumb
 1858              		.syntax unified
 1859              	.LBE867:
 1860              	.LBE866:
 1861              	.LBB868:
 1862              	.LBB869:
 1863              		.loc 2 481 0
 1864 0054 0123     		movs	r3, #1
 1865              		.syntax divided
 1866              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1867 0056 83F31088 		MSR primask, r3
 1868              	@ 0 "" 2
 1869              	.LVL112:
 1870              		.thumb
 1871              		.syntax unified
 1872              	.LBE869:
 1873              	.LBE868:
1647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1874              		.loc 1 1647 0
 1875 005a 0268     		ldr	r2, [r0]
 1876 005c 9468     		ldr	r4, [r2, #8]
 1877 005e 2343     		orrs	r3, r4
 1878 0060 9360     		str	r3, [r2, #8]
 1879              	.LBB870:
 1880              	.LBB871:
 1881              		.loc 2 481 0
 1882              		.syntax divided
 1883              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1884 0062 81F31088 		MSR primask, r1
 1885              	@ 0 "" 2
 1886              		.thumb
 1887              		.syntax unified
 1888              	.LBE871:
 1889              	.LBE870:
 1890              	.LBE865:
 1891              	.LBB872:
 1892              	.LBB873:
 1893              	.LBB874:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1894              		.loc 2 453 0
 1895              		.syntax divided
ARM GAS  /tmp/cceLjgLz.s 			page 118


 1896              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1897 0066 EFF31081 		MRS r1, primask
 1898              	@ 0 "" 2
 1899              	.LVL113:
 1900              		.thumb
 1901              		.syntax unified
 1902              	.LBE874:
 1903              	.LBE873:
 1904              	.LBB875:
 1905              	.LBB876:
 1906              		.loc 2 481 0
 1907 006a 0123     		movs	r3, #1
 1908              		.syntax divided
 1909              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1910 006c 83F31088 		MSR primask, r3
 1911              	@ 0 "" 2
 1912              	.LVL114:
 1913              		.thumb
 1914              		.syntax unified
 1915              	.LBE876:
 1916              	.LBE875:
1650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 1917              		.loc 1 1650 0
 1918 0070 0268     		ldr	r2, [r0]
 1919 0072 9068     		ldr	r0, [r2, #8]
 1920              	.LVL115:
 1921 0074 3F33     		adds	r3, r3, #63
 1922 0076 0343     		orrs	r3, r0
 1923 0078 9360     		str	r3, [r2, #8]
 1924              	.LBB877:
 1925              	.LBB878:
 1926              		.loc 2 481 0
 1927              		.syntax divided
 1928              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1929 007a 81F31088 		MSR primask, r1
 1930              	@ 0 "" 2
 1931              		.thumb
 1932              		.syntax unified
 1933              	.L66:
 1934              	.LBE878:
 1935              	.LBE877:
 1936              	.LBE872:
1654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1937              		.loc 1 1654 0
 1938 007e 0020     		movs	r0, #0
 1939              		@ sp needed
 1940 0080 10BD     		pop	{r4, pc}
 1941              		.cfi_endproc
 1942              	.LFE324:
 1944 0082 C046     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1945              		.align	2
 1946              		.global	HAL_UART_DMAStop
 1947              		.code	16
 1948              		.thumb_func
 1950              	HAL_UART_DMAStop:
 1951              	.LFB325:
1662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
ARM GAS  /tmp/cceLjgLz.s 			page 119


 1952              		.loc 1 1662 0
 1953              		.cfi_startproc
 1954              		@ args = 0, pretend = 0, frame = 0
 1955              		@ frame_needed = 0, uses_anonymous_args = 0
 1956              	.LVL116:
 1957 0000 70B5     		push	{r4, r5, r6, lr}
 1958              	.LCFI11:
 1959              		.cfi_def_cfa_offset 16
 1960              		.cfi_offset 4, -16
 1961              		.cfi_offset 5, -12
 1962              		.cfi_offset 6, -8
 1963              		.cfi_offset 14, -4
 1964 0002 0400     		movs	r4, r0
1670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1965              		.loc 1 1670 0
 1966 0004 8823     		movs	r3, #136
 1967 0006 C258     		ldr	r2, [r0, r3]
 1968              	.LVL117:
1671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 1969              		.loc 1 1671 0
 1970 0008 0433     		adds	r3, r3, #4
 1971 000a C558     		ldr	r5, [r0, r3]
 1972              	.LVL118:
1674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1973              		.loc 1 1674 0
 1974 000c 0368     		ldr	r3, [r0]
 1975 000e 9B68     		ldr	r3, [r3, #8]
 1976 0010 1B06     		lsls	r3, r3, #24
 1977 0012 21D5     		bpl	.L69
1674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1978              		.loc 1 1674 0 is_stmt 0 discriminator 1
 1979 0014 212A     		cmp	r2, #33
 1980 0016 1FD1     		bne	.L69
 1981              	.LBB879:
 1982              	.LBB880:
 1983              	.LBB881:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1984              		.loc 2 453 0 is_stmt 1
 1985              		.syntax divided
 1986              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1987 0018 EFF31081 		MRS r1, primask
 1988              	@ 0 "" 2
 1989              	.LVL119:
 1990              		.thumb
 1991              		.syntax unified
 1992              	.LBE881:
 1993              	.LBE880:
 1994              	.LBB882:
 1995              	.LBB883:
 1996              		.loc 2 481 0
 1997 001c 0123     		movs	r3, #1
 1998              		.syntax divided
 1999              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2000 001e 83F31088 		MSR primask, r3
 2001              	@ 0 "" 2
 2002              	.LVL120:
 2003              		.thumb
ARM GAS  /tmp/cceLjgLz.s 			page 120


 2004              		.syntax unified
 2005              	.LBE883:
 2006              	.LBE882:
1677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2007              		.loc 1 1677 0
 2008 0022 0268     		ldr	r2, [r0]
 2009              	.LVL121:
 2010 0024 9368     		ldr	r3, [r2, #8]
 2011 0026 8020     		movs	r0, #128
 2012              	.LVL122:
 2013 0028 8343     		bics	r3, r0
 2014 002a 9360     		str	r3, [r2, #8]
 2015              	.LBB884:
 2016              	.LBB885:
 2017              		.loc 2 481 0
 2018              		.syntax divided
 2019              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2020 002c 81F31088 		MSR primask, r1
 2021              	@ 0 "" 2
 2022              		.thumb
 2023              		.syntax unified
 2024              	.LBE885:
 2025              	.LBE884:
 2026              	.LBE879:
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2027              		.loc 1 1680 0
 2028 0030 E06F     		ldr	r0, [r4, #124]
 2029 0032 0028     		cmp	r0, #0
 2030 0034 0DD0     		beq	.L70
1682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 2031              		.loc 1 1682 0
 2032 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 2033              	.LVL123:
 2034 003a 0028     		cmp	r0, #0
 2035 003c 09D0     		beq	.L70
1684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 2036              		.loc 1 1684 0
 2037 003e E06F     		ldr	r0, [r4, #124]
 2038 0040 FFF7FEFF 		bl	HAL_DMA_GetError
 2039              	.LVL124:
 2040 0044 2028     		cmp	r0, #32
 2041 0046 04D1     		bne	.L70
1687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2042              		.loc 1 1687 0
 2043 0048 1022     		movs	r2, #16
 2044 004a 9023     		movs	r3, #144
 2045 004c E250     		str	r2, [r4, r3]
1689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 2046              		.loc 1 1689 0
 2047 004e 1D38     		subs	r0, r0, #29
 2048 0050 2FE0     		b	.L71
 2049              	.L70:
1694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 2050              		.loc 1 1694 0
 2051 0052 2000     		movs	r0, r4
 2052 0054 FFF7FEFF 		bl	UART_EndTxTransfer
 2053              	.LVL125:
ARM GAS  /tmp/cceLjgLz.s 			page 121


 2054              	.L69:
1698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2055              		.loc 1 1698 0
 2056 0058 2368     		ldr	r3, [r4]
 2057 005a 9B68     		ldr	r3, [r3, #8]
 2058 005c 5B06     		lsls	r3, r3, #25
 2059 005e 25D5     		bpl	.L73
1698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2060              		.loc 1 1698 0 is_stmt 0 discriminator 1
 2061 0060 222D     		cmp	r5, #34
 2062 0062 25D1     		bne	.L74
 2063              	.LBB886:
 2064              	.LBB887:
 2065              	.LBB888:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2066              		.loc 2 453 0 is_stmt 1
 2067              		.syntax divided
 2068              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2069 0064 EFF31081 		MRS r1, primask
 2070              	@ 0 "" 2
 2071              	.LVL126:
 2072              		.thumb
 2073              		.syntax unified
 2074              	.LBE888:
 2075              	.LBE887:
 2076              	.LBB889:
 2077              	.LBB890:
 2078              		.loc 2 481 0
 2079 0068 0123     		movs	r3, #1
 2080              		.syntax divided
 2081              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2082 006a 83F31088 		MSR primask, r3
 2083              	@ 0 "" 2
 2084              	.LVL127:
 2085              		.thumb
 2086              		.syntax unified
 2087              	.LBE890:
 2088              	.LBE889:
1701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2089              		.loc 1 1701 0
 2090 006e 2268     		ldr	r2, [r4]
 2091 0070 9368     		ldr	r3, [r2, #8]
 2092 0072 4020     		movs	r0, #64
 2093 0074 8343     		bics	r3, r0
 2094 0076 9360     		str	r3, [r2, #8]
 2095              	.LBB891:
 2096              	.LBB892:
 2097              		.loc 2 481 0
 2098              		.syntax divided
 2099              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2100 0078 81F31088 		MSR primask, r1
 2101              	@ 0 "" 2
 2102              		.thumb
 2103              		.syntax unified
 2104              	.LBE892:
 2105              	.LBE891:
 2106              	.LBE886:
ARM GAS  /tmp/cceLjgLz.s 			page 122


1704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2107              		.loc 1 1704 0
 2108 007c 8023     		movs	r3, #128
 2109 007e E058     		ldr	r0, [r4, r3]
 2110 0080 0028     		cmp	r0, #0
 2111 0082 0ED0     		beq	.L72
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 2112              		.loc 1 1706 0
 2113 0084 FFF7FEFF 		bl	HAL_DMA_Abort
 2114              	.LVL128:
 2115 0088 0028     		cmp	r0, #0
 2116 008a 0AD0     		beq	.L72
1708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 2117              		.loc 1 1708 0
 2118 008c 8023     		movs	r3, #128
 2119 008e E058     		ldr	r0, [r4, r3]
 2120 0090 FFF7FEFF 		bl	HAL_DMA_GetError
 2121              	.LVL129:
 2122 0094 2028     		cmp	r0, #32
 2123 0096 04D1     		bne	.L72
1711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2124              		.loc 1 1711 0
 2125 0098 1022     		movs	r2, #16
 2126 009a 9023     		movs	r3, #144
 2127 009c E250     		str	r2, [r4, r3]
1713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 2128              		.loc 1 1713 0
 2129 009e 1D38     		subs	r0, r0, #29
 2130 00a0 07E0     		b	.L71
 2131              	.L72:
1718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 2132              		.loc 1 1718 0
 2133 00a2 2000     		movs	r0, r4
 2134 00a4 FFF7FEFF 		bl	UART_EndRxTransfer
 2135              	.LVL130:
1721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 2136              		.loc 1 1721 0
 2137 00a8 0020     		movs	r0, #0
 2138 00aa 02E0     		b	.L71
 2139              	.L73:
 2140 00ac 0020     		movs	r0, #0
 2141 00ae 00E0     		b	.L71
 2142              	.L74:
 2143 00b0 0020     		movs	r0, #0
 2144              	.L71:
1722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2145              		.loc 1 1722 0
 2146              		@ sp needed
 2147              	.LVL131:
 2148              	.LVL132:
 2149 00b2 70BD     		pop	{r4, r5, r6, pc}
 2150              		.cfi_endproc
 2151              	.LFE325:
 2153              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2154              		.align	2
 2155              		.global	HAL_UART_Abort
 2156              		.code	16
ARM GAS  /tmp/cceLjgLz.s 			page 123


 2157              		.thumb_func
 2159              	HAL_UART_Abort:
 2160              	.LFB326:
1737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
 2161              		.loc 1 1737 0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 0
 2164              		@ frame_needed = 0, uses_anonymous_args = 0
 2165              	.LVL133:
 2166 0000 10B5     		push	{r4, lr}
 2167              	.LCFI12:
 2168              		.cfi_def_cfa_offset 8
 2169              		.cfi_offset 4, -8
 2170              		.cfi_offset 14, -4
 2171 0002 0400     		movs	r4, r0
 2172              	.LBB893:
 2173              	.LBB894:
 2174              	.LBB895:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2175              		.loc 2 453 0
 2176              		.syntax divided
 2177              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2178 0004 EFF31081 		MRS r1, primask
 2179              	@ 0 "" 2
 2180              	.LVL134:
 2181              		.thumb
 2182              		.syntax unified
 2183              	.LBE895:
 2184              	.LBE894:
 2185              	.LBB896:
 2186              	.LBB897:
 2187              		.loc 2 481 0
 2188 0008 0123     		movs	r3, #1
 2189              		.syntax divided
 2190              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2191 000a 83F31088 		MSR primask, r3
 2192              	@ 0 "" 2
 2193              	.LVL135:
 2194              		.thumb
 2195              		.syntax unified
 2196              	.LBE897:
 2197              	.LBE896:
1739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
 2198              		.loc 1 1739 0
 2199 000e 0268     		ldr	r2, [r0]
 2200 0010 1068     		ldr	r0, [r2]
 2201              	.LVL136:
 2202 0012 464B     		ldr	r3, .L81
 2203 0014 0340     		ands	r3, r0
 2204 0016 1360     		str	r3, [r2]
 2205              	.LBB898:
 2206              	.LBB899:
 2207              		.loc 2 481 0
 2208              		.syntax divided
 2209              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2210 0018 81F31088 		MSR primask, r1
 2211              	@ 0 "" 2
ARM GAS  /tmp/cceLjgLz.s 			page 124


 2212              		.thumb
 2213              		.syntax unified
 2214              	.LBE899:
 2215              	.LBE898:
 2216              	.LBE893:
 2217              	.LBB900:
 2218              	.LBB901:
 2219              	.LBB902:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2220              		.loc 2 453 0
 2221              		.syntax divided
 2222              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2223 001c EFF31081 		MRS r1, primask
 2224              	@ 0 "" 2
 2225              	.LVL137:
 2226              		.thumb
 2227              		.syntax unified
 2228              	.LBE902:
 2229              	.LBE901:
 2230              	.LBB903:
 2231              	.LBB904:
 2232              		.loc 2 481 0
 2233 0020 0123     		movs	r3, #1
 2234              		.syntax divided
 2235              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2236 0022 83F31088 		MSR primask, r3
 2237              	@ 0 "" 2
 2238              	.LVL138:
 2239              		.thumb
 2240              		.syntax unified
 2241              	.LBE904:
 2242              	.LBE903:
1741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2243              		.loc 1 1741 0
 2244 0026 2268     		ldr	r2, [r4]
 2245 0028 9068     		ldr	r0, [r2, #8]
 2246 002a 414B     		ldr	r3, .L81+4
 2247 002c 0340     		ands	r3, r0
 2248 002e 9360     		str	r3, [r2, #8]
 2249              	.LBB905:
 2250              	.LBB906:
 2251              		.loc 2 481 0
 2252              		.syntax divided
 2253              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2254 0030 81F31088 		MSR primask, r1
 2255              	@ 0 "" 2
 2256              		.thumb
 2257              		.syntax unified
 2258              	.LBE906:
 2259              	.LBE905:
 2260              	.LBE900:
1744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 2261              		.loc 1 1744 0
 2262 0034 E36E     		ldr	r3, [r4, #108]
 2263 0036 012B     		cmp	r3, #1
 2264 0038 0AD1     		bne	.L76
 2265              	.LBB907:
ARM GAS  /tmp/cceLjgLz.s 			page 125


 2266              	.LBB908:
 2267              	.LBB909:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2268              		.loc 2 453 0
 2269              		.syntax divided
 2270              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2271 003a EFF31081 		MRS r1, primask
 2272              	@ 0 "" 2
 2273              	.LVL139:
 2274              		.thumb
 2275              		.syntax unified
 2276              	.LBE909:
 2277              	.LBE908:
 2278              	.LBB910:
 2279              	.LBB911:
 2280              		.loc 2 481 0
 2281              		.syntax divided
 2282              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2283 003e 83F31088 		MSR primask, r3
 2284              	@ 0 "" 2
 2285              	.LVL140:
 2286              		.thumb
 2287              		.syntax unified
 2288              	.LBE911:
 2289              	.LBE910:
1746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 2290              		.loc 1 1746 0
 2291 0042 2268     		ldr	r2, [r4]
 2292 0044 1368     		ldr	r3, [r2]
 2293 0046 1020     		movs	r0, #16
 2294 0048 8343     		bics	r3, r0
 2295 004a 1360     		str	r3, [r2]
 2296              	.LBB912:
 2297              	.LBB913:
 2298              		.loc 2 481 0
 2299              		.syntax divided
 2300              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2301 004c 81F31088 		MSR primask, r1
 2302              	@ 0 "" 2
 2303              		.thumb
 2304              		.syntax unified
 2305              	.L76:
 2306              	.LBE913:
 2307              	.LBE912:
 2308              	.LBE907:
1750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 2309              		.loc 1 1750 0
 2310 0050 2368     		ldr	r3, [r4]
 2311 0052 9B68     		ldr	r3, [r3, #8]
 2312 0054 1B06     		lsls	r3, r3, #24
 2313 0056 1FD5     		bpl	.L77
 2314              	.LBB914:
 2315              	.LBB915:
 2316              	.LBB916:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2317              		.loc 2 453 0
 2318              		.syntax divided
ARM GAS  /tmp/cceLjgLz.s 			page 126


 2319              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2320 0058 EFF31081 		MRS r1, primask
 2321              	@ 0 "" 2
 2322              	.LVL141:
 2323              		.thumb
 2324              		.syntax unified
 2325              	.LBE916:
 2326              	.LBE915:
 2327              	.LBB917:
 2328              	.LBB918:
 2329              		.loc 2 481 0
 2330 005c 0123     		movs	r3, #1
 2331              		.syntax divided
 2332              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2333 005e 83F31088 		MSR primask, r3
 2334              	@ 0 "" 2
 2335              	.LVL142:
 2336              		.thumb
 2337              		.syntax unified
 2338              	.LBE918:
 2339              	.LBE917:
1753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2340              		.loc 1 1753 0
 2341 0062 2268     		ldr	r2, [r4]
 2342 0064 9368     		ldr	r3, [r2, #8]
 2343 0066 8020     		movs	r0, #128
 2344 0068 8343     		bics	r3, r0
 2345 006a 9360     		str	r3, [r2, #8]
 2346              	.LBB919:
 2347              	.LBB920:
 2348              		.loc 2 481 0
 2349              		.syntax divided
 2350              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2351 006c 81F31088 		MSR primask, r1
 2352              	@ 0 "" 2
 2353              		.thumb
 2354              		.syntax unified
 2355              	.LBE920:
 2356              	.LBE919:
 2357              	.LBE914:
1756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2358              		.loc 1 1756 0
 2359 0070 E36F     		ldr	r3, [r4, #124]
 2360 0072 002B     		cmp	r3, #0
 2361 0074 10D0     		beq	.L77
1760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2362              		.loc 1 1760 0
 2363 0076 0022     		movs	r2, #0
 2364 0078 9A63     		str	r2, [r3, #56]
1762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 2365              		.loc 1 1762 0
 2366 007a E06F     		ldr	r0, [r4, #124]
 2367 007c FFF7FEFF 		bl	HAL_DMA_Abort
 2368              	.LVL143:
 2369 0080 0028     		cmp	r0, #0
 2370 0082 09D0     		beq	.L77
1764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
ARM GAS  /tmp/cceLjgLz.s 			page 127


 2371              		.loc 1 1764 0
 2372 0084 E06F     		ldr	r0, [r4, #124]
 2373 0086 FFF7FEFF 		bl	HAL_DMA_GetError
 2374              	.LVL144:
 2375 008a 2028     		cmp	r0, #32
 2376 008c 04D1     		bne	.L77
1767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2377              		.loc 1 1767 0
 2378 008e 1022     		movs	r2, #16
 2379 0090 9023     		movs	r3, #144
 2380 0092 E250     		str	r2, [r4, r3]
1769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 2381              		.loc 1 1769 0
 2382 0094 1D38     		subs	r0, r0, #29
 2383 0096 47E0     		b	.L78
 2384              	.L77:
1776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 2385              		.loc 1 1776 0
 2386 0098 2368     		ldr	r3, [r4]
 2387 009a 9B68     		ldr	r3, [r3, #8]
 2388 009c 5B06     		lsls	r3, r3, #25
 2389 009e 22D5     		bpl	.L79
 2390              	.LBB921:
 2391              	.LBB922:
 2392              	.LBB923:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2393              		.loc 2 453 0
 2394              		.syntax divided
 2395              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2396 00a0 EFF31081 		MRS r1, primask
 2397              	@ 0 "" 2
 2398              	.LVL145:
 2399              		.thumb
 2400              		.syntax unified
 2401              	.LBE923:
 2402              	.LBE922:
 2403              	.LBB924:
 2404              	.LBB925:
 2405              		.loc 2 481 0
 2406 00a4 0123     		movs	r3, #1
 2407              		.syntax divided
 2408              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2409 00a6 83F31088 		MSR primask, r3
 2410              	@ 0 "" 2
 2411              	.LVL146:
 2412              		.thumb
 2413              		.syntax unified
 2414              	.LBE925:
 2415              	.LBE924:
1779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2416              		.loc 1 1779 0
 2417 00aa 2268     		ldr	r2, [r4]
 2418 00ac 9368     		ldr	r3, [r2, #8]
 2419 00ae 4020     		movs	r0, #64
 2420 00b0 8343     		bics	r3, r0
 2421 00b2 9360     		str	r3, [r2, #8]
 2422              	.LBB926:
ARM GAS  /tmp/cceLjgLz.s 			page 128


 2423              	.LBB927:
 2424              		.loc 2 481 0
 2425              		.syntax divided
 2426              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2427 00b4 81F31088 		MSR primask, r1
 2428              	@ 0 "" 2
 2429              		.thumb
 2430              		.syntax unified
 2431              	.LBE927:
 2432              	.LBE926:
 2433              	.LBE921:
1782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2434              		.loc 1 1782 0
 2435 00b8 8023     		movs	r3, #128
 2436 00ba E358     		ldr	r3, [r4, r3]
 2437 00bc 002B     		cmp	r3, #0
 2438 00be 12D0     		beq	.L79
1786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2439              		.loc 1 1786 0
 2440 00c0 0022     		movs	r2, #0
 2441 00c2 9A63     		str	r2, [r3, #56]
1788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 2442              		.loc 1 1788 0
 2443 00c4 8023     		movs	r3, #128
 2444 00c6 E058     		ldr	r0, [r4, r3]
 2445 00c8 FFF7FEFF 		bl	HAL_DMA_Abort
 2446              	.LVL147:
 2447 00cc 0028     		cmp	r0, #0
 2448 00ce 0AD0     		beq	.L79
1790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 2449              		.loc 1 1790 0
 2450 00d0 8023     		movs	r3, #128
 2451 00d2 E058     		ldr	r0, [r4, r3]
 2452 00d4 FFF7FEFF 		bl	HAL_DMA_GetError
 2453              	.LVL148:
 2454 00d8 2028     		cmp	r0, #32
 2455 00da 04D1     		bne	.L79
1793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2456              		.loc 1 1793 0
 2457 00dc 1022     		movs	r2, #16
 2458 00de 9023     		movs	r3, #144
 2459 00e0 E250     		str	r2, [r4, r3]
1795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 2460              		.loc 1 1795 0
 2461 00e2 1D38     		subs	r0, r0, #29
 2462 00e4 20E0     		b	.L78
 2463              	.L79:
1802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2464              		.loc 1 1802 0
 2465 00e6 0023     		movs	r3, #0
 2466 00e8 5622     		movs	r2, #86
 2467 00ea A352     		strh	r3, [r4, r2]
1803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2468              		.loc 1 1803 0
 2469 00ec 0832     		adds	r2, r2, #8
 2470 00ee A352     		strh	r3, [r4, r2]
1806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 129


 2471              		.loc 1 1806 0
 2472 00f0 2368     		ldr	r3, [r4]
 2473 00f2 4F3A     		subs	r2, r2, #79
 2474 00f4 1A62     		str	r2, [r3, #32]
1809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 2475              		.loc 1 1809 0
 2476 00f6 8023     		movs	r3, #128
 2477 00f8 9B05     		lsls	r3, r3, #22
 2478 00fa 626E     		ldr	r2, [r4, #100]
 2479 00fc 9A42     		cmp	r2, r3
 2480 00fe 04D1     		bne	.L80
1811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 2481              		.loc 1 1811 0
 2482 0100 2268     		ldr	r2, [r4]
 2483 0102 9169     		ldr	r1, [r2, #24]
 2484 0104 1023     		movs	r3, #16
 2485 0106 0B43     		orrs	r3, r1
 2486 0108 9361     		str	r3, [r2, #24]
 2487              	.L80:
1815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2488              		.loc 1 1815 0
 2489 010a 2268     		ldr	r2, [r4]
 2490 010c 9169     		ldr	r1, [r2, #24]
 2491 010e 0823     		movs	r3, #8
 2492 0110 0B43     		orrs	r3, r1
 2493 0112 9361     		str	r3, [r2, #24]
1818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2494              		.loc 1 1818 0
 2495 0114 2023     		movs	r3, #32
 2496 0116 8822     		movs	r2, #136
 2497 0118 A350     		str	r3, [r4, r2]
1819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2498              		.loc 1 1819 0
 2499 011a 0432     		adds	r2, r2, #4
 2500 011c A350     		str	r3, [r4, r2]
1820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2501              		.loc 1 1820 0
 2502 011e 0023     		movs	r3, #0
 2503 0120 E366     		str	r3, [r4, #108]
1822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2504              		.loc 1 1822 0
 2505 0122 0432     		adds	r2, r2, #4
 2506 0124 A350     		str	r3, [r4, r2]
1824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 2507              		.loc 1 1824 0
 2508 0126 0020     		movs	r0, #0
 2509              	.L78:
1825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2510              		.loc 1 1825 0
 2511              		@ sp needed
 2512              	.LVL149:
 2513 0128 10BD     		pop	{r4, pc}
 2514              	.L82:
 2515 012a C046     		.align	2
 2516              	.L81:
 2517 012c 1FFEFFFF 		.word	-481
 2518 0130 FEFF7FEF 		.word	-276824066
ARM GAS  /tmp/cceLjgLz.s 			page 130


 2519              		.cfi_endproc
 2520              	.LFE326:
 2522              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2523              		.align	2
 2524              		.global	HAL_UART_AbortTransmit
 2525              		.code	16
 2526              		.thumb_func
 2528              	HAL_UART_AbortTransmit:
 2529              	.LFB327:
1840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
 2530              		.loc 1 1840 0
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 0
 2533              		@ frame_needed = 0, uses_anonymous_args = 0
 2534              	.LVL150:
 2535 0000 10B5     		push	{r4, lr}
 2536              	.LCFI13:
 2537              		.cfi_def_cfa_offset 8
 2538              		.cfi_offset 4, -8
 2539              		.cfi_offset 14, -4
 2540 0002 0400     		movs	r4, r0
 2541              	.LBB928:
 2542              	.LBB929:
 2543              	.LBB930:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2544              		.loc 2 453 0
 2545              		.syntax divided
 2546              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2547 0004 EFF31081 		MRS r1, primask
 2548              	@ 0 "" 2
 2549              	.LVL151:
 2550              		.thumb
 2551              		.syntax unified
 2552              	.LBE930:
 2553              	.LBE929:
 2554              	.LBB931:
 2555              	.LBB932:
 2556              		.loc 2 481 0
 2557 0008 0123     		movs	r3, #1
 2558              		.syntax divided
 2559              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2560 000a 83F31088 		MSR primask, r3
 2561              	@ 0 "" 2
 2562              	.LVL152:
 2563              		.thumb
 2564              		.syntax unified
 2565              	.LBE932:
 2566              	.LBE931:
1842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 2567              		.loc 1 1842 0
 2568 000e 0268     		ldr	r2, [r0]
 2569 0010 1368     		ldr	r3, [r2]
 2570 0012 C020     		movs	r0, #192
 2571              	.LVL153:
 2572 0014 8343     		bics	r3, r0
 2573 0016 1360     		str	r3, [r2]
 2574              	.LBB933:
ARM GAS  /tmp/cceLjgLz.s 			page 131


 2575              	.LBB934:
 2576              		.loc 2 481 0
 2577              		.syntax divided
 2578              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2579 0018 81F31088 		MSR primask, r1
 2580              	@ 0 "" 2
 2581              		.thumb
 2582              		.syntax unified
 2583              	.LBE934:
 2584              	.LBE933:
 2585              	.LBE928:
 2586              	.LBB935:
 2587              	.LBB936:
 2588              	.LBB937:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2589              		.loc 2 453 0
 2590              		.syntax divided
 2591              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2592 001c EFF31081 		MRS r1, primask
 2593              	@ 0 "" 2
 2594              	.LVL154:
 2595              		.thumb
 2596              		.syntax unified
 2597              	.LBE937:
 2598              	.LBE936:
 2599              	.LBB938:
 2600              	.LBB939:
 2601              		.loc 2 481 0
 2602 0020 0123     		movs	r3, #1
 2603              		.syntax divided
 2604              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2605 0022 83F31088 		MSR primask, r3
 2606              	@ 0 "" 2
 2607              	.LVL155:
 2608              		.thumb
 2609              		.syntax unified
 2610              	.LBE939:
 2611              	.LBE938:
1843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2612              		.loc 1 1843 0
 2613 0026 2268     		ldr	r2, [r4]
 2614 0028 9068     		ldr	r0, [r2, #8]
 2615 002a 1D4B     		ldr	r3, .L87
 2616 002c 0340     		ands	r3, r0
 2617 002e 9360     		str	r3, [r2, #8]
 2618              	.LBB940:
 2619              	.LBB941:
 2620              		.loc 2 481 0
 2621              		.syntax divided
 2622              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2623 0030 81F31088 		MSR primask, r1
 2624              	@ 0 "" 2
 2625              		.thumb
 2626              		.syntax unified
 2627              	.LBE941:
 2628              	.LBE940:
 2629              	.LBE935:
ARM GAS  /tmp/cceLjgLz.s 			page 132


1846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 2630              		.loc 1 1846 0
 2631 0034 2368     		ldr	r3, [r4]
 2632 0036 9B68     		ldr	r3, [r3, #8]
 2633 0038 1B06     		lsls	r3, r3, #24
 2634 003a 1FD5     		bpl	.L84
 2635              	.LBB942:
 2636              	.LBB943:
 2637              	.LBB944:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2638              		.loc 2 453 0
 2639              		.syntax divided
 2640              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2641 003c EFF31081 		MRS r1, primask
 2642              	@ 0 "" 2
 2643              	.LVL156:
 2644              		.thumb
 2645              		.syntax unified
 2646              	.LBE944:
 2647              	.LBE943:
 2648              	.LBB945:
 2649              	.LBB946:
 2650              		.loc 2 481 0
 2651 0040 0123     		movs	r3, #1
 2652              		.syntax divided
 2653              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2654 0042 83F31088 		MSR primask, r3
 2655              	@ 0 "" 2
 2656              	.LVL157:
 2657              		.thumb
 2658              		.syntax unified
 2659              	.LBE946:
 2660              	.LBE945:
1849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2661              		.loc 1 1849 0
 2662 0046 2268     		ldr	r2, [r4]
 2663 0048 9368     		ldr	r3, [r2, #8]
 2664 004a 8020     		movs	r0, #128
 2665 004c 8343     		bics	r3, r0
 2666 004e 9360     		str	r3, [r2, #8]
 2667              	.LBB947:
 2668              	.LBB948:
 2669              		.loc 2 481 0
 2670              		.syntax divided
 2671              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2672 0050 81F31088 		MSR primask, r1
 2673              	@ 0 "" 2
 2674              		.thumb
 2675              		.syntax unified
 2676              	.LBE948:
 2677              	.LBE947:
 2678              	.LBE942:
1852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2679              		.loc 1 1852 0
 2680 0054 E36F     		ldr	r3, [r4, #124]
 2681 0056 002B     		cmp	r3, #0
 2682 0058 10D0     		beq	.L84
ARM GAS  /tmp/cceLjgLz.s 			page 133


1856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2683              		.loc 1 1856 0
 2684 005a 0022     		movs	r2, #0
 2685 005c 9A63     		str	r2, [r3, #56]
1858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 2686              		.loc 1 1858 0
 2687 005e E06F     		ldr	r0, [r4, #124]
 2688 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 2689              	.LVL158:
 2690 0064 0028     		cmp	r0, #0
 2691 0066 09D0     		beq	.L84
1860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 2692              		.loc 1 1860 0
 2693 0068 E06F     		ldr	r0, [r4, #124]
 2694 006a FFF7FEFF 		bl	HAL_DMA_GetError
 2695              	.LVL159:
 2696 006e 2028     		cmp	r0, #32
 2697 0070 04D1     		bne	.L84
1863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2698              		.loc 1 1863 0
 2699 0072 1022     		movs	r2, #16
 2700 0074 9023     		movs	r3, #144
 2701 0076 E250     		str	r2, [r4, r3]
1865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 2702              		.loc 1 1865 0
 2703 0078 1D38     		subs	r0, r0, #29
 2704 007a 10E0     		b	.L85
 2705              	.L84:
1872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2706              		.loc 1 1872 0
 2707 007c 0022     		movs	r2, #0
 2708 007e 5623     		movs	r3, #86
 2709 0080 E252     		strh	r2, [r4, r3]
1875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 2710              		.loc 1 1875 0
 2711 0082 8023     		movs	r3, #128
 2712 0084 9B05     		lsls	r3, r3, #22
 2713 0086 626E     		ldr	r2, [r4, #100]
 2714 0088 9A42     		cmp	r2, r3
 2715 008a 04D1     		bne	.L86
1877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 2716              		.loc 1 1877 0
 2717 008c 2268     		ldr	r2, [r4]
 2718 008e 9169     		ldr	r1, [r2, #24]
 2719 0090 1023     		movs	r3, #16
 2720 0092 0B43     		orrs	r3, r1
 2721 0094 9361     		str	r3, [r2, #24]
 2722              	.L86:
1881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2723              		.loc 1 1881 0
 2724 0096 2022     		movs	r2, #32
 2725 0098 8823     		movs	r3, #136
 2726 009a E250     		str	r2, [r4, r3]
1883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 2727              		.loc 1 1883 0
 2728 009c 0020     		movs	r0, #0
 2729              	.L85:
ARM GAS  /tmp/cceLjgLz.s 			page 134


1884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2730              		.loc 1 1884 0
 2731              		@ sp needed
 2732              	.LVL160:
 2733 009e 10BD     		pop	{r4, pc}
 2734              	.L88:
 2735              		.align	2
 2736              	.L87:
 2737 00a0 FFFF7FFF 		.word	-8388609
 2738              		.cfi_endproc
 2739              	.LFE327:
 2741              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2742              		.align	2
 2743              		.global	HAL_UART_AbortReceive
 2744              		.code	16
 2745              		.thumb_func
 2747              	HAL_UART_AbortReceive:
 2748              	.LFB328:
1899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
 2749              		.loc 1 1899 0
 2750              		.cfi_startproc
 2751              		@ args = 0, pretend = 0, frame = 0
 2752              		@ frame_needed = 0, uses_anonymous_args = 0
 2753              	.LVL161:
 2754 0000 10B5     		push	{r4, lr}
 2755              	.LCFI14:
 2756              		.cfi_def_cfa_offset 8
 2757              		.cfi_offset 4, -8
 2758              		.cfi_offset 14, -4
 2759 0002 0400     		movs	r4, r0
 2760              	.LBB949:
 2761              	.LBB950:
 2762              	.LBB951:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2763              		.loc 2 453 0
 2764              		.syntax divided
 2765              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2766 0004 EFF31081 		MRS r1, primask
 2767              	@ 0 "" 2
 2768              	.LVL162:
 2769              		.thumb
 2770              		.syntax unified
 2771              	.LBE951:
 2772              	.LBE950:
 2773              	.LBB952:
 2774              	.LBB953:
 2775              		.loc 2 481 0
 2776 0008 0123     		movs	r3, #1
 2777              		.syntax divided
 2778              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2779 000a 83F31088 		MSR primask, r3
 2780              	@ 0 "" 2
 2781              	.LVL163:
 2782              		.thumb
 2783              		.syntax unified
 2784              	.LBE953:
 2785              	.LBE952:
ARM GAS  /tmp/cceLjgLz.s 			page 135


1901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 2786              		.loc 1 1901 0
 2787 000e 0268     		ldr	r2, [r0]
 2788 0010 1068     		ldr	r0, [r2]
 2789              	.LVL164:
 2790 0012 2B4B     		ldr	r3, .L93
 2791 0014 0340     		ands	r3, r0
 2792 0016 1360     		str	r3, [r2]
 2793              	.LBB954:
 2794              	.LBB955:
 2795              		.loc 2 481 0
 2796              		.syntax divided
 2797              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2798 0018 81F31088 		MSR primask, r1
 2799              	@ 0 "" 2
 2800              		.thumb
 2801              		.syntax unified
 2802              	.LBE955:
 2803              	.LBE954:
 2804              	.LBE949:
 2805              	.LBB956:
 2806              	.LBB957:
 2807              	.LBB958:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2808              		.loc 2 453 0
 2809              		.syntax divided
 2810              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2811 001c EFF31081 		MRS r1, primask
 2812              	@ 0 "" 2
 2813              	.LVL165:
 2814              		.thumb
 2815              		.syntax unified
 2816              	.LBE958:
 2817              	.LBE957:
 2818              	.LBB959:
 2819              	.LBB960:
 2820              		.loc 2 481 0
 2821 0020 0123     		movs	r3, #1
 2822              		.syntax divided
 2823              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2824 0022 83F31088 		MSR primask, r3
 2825              	@ 0 "" 2
 2826              	.LVL166:
 2827              		.thumb
 2828              		.syntax unified
 2829              	.LBE960:
 2830              	.LBE959:
1902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2831              		.loc 1 1902 0
 2832 0026 2268     		ldr	r2, [r4]
 2833 0028 9068     		ldr	r0, [r2, #8]
 2834 002a 264B     		ldr	r3, .L93+4
 2835 002c 0340     		ands	r3, r0
 2836 002e 9360     		str	r3, [r2, #8]
 2837              	.LBB961:
 2838              	.LBB962:
 2839              		.loc 2 481 0
ARM GAS  /tmp/cceLjgLz.s 			page 136


 2840              		.syntax divided
 2841              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2842 0030 81F31088 		MSR primask, r1
 2843              	@ 0 "" 2
 2844              		.thumb
 2845              		.syntax unified
 2846              	.LBE962:
 2847              	.LBE961:
 2848              	.LBE956:
1905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 2849              		.loc 1 1905 0
 2850 0034 E36E     		ldr	r3, [r4, #108]
 2851 0036 012B     		cmp	r3, #1
 2852 0038 0AD1     		bne	.L90
 2853              	.LBB963:
 2854              	.LBB964:
 2855              	.LBB965:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2856              		.loc 2 453 0
 2857              		.syntax divided
 2858              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2859 003a EFF31081 		MRS r1, primask
 2860              	@ 0 "" 2
 2861              	.LVL167:
 2862              		.thumb
 2863              		.syntax unified
 2864              	.LBE965:
 2865              	.LBE964:
 2866              	.LBB966:
 2867              	.LBB967:
 2868              		.loc 2 481 0
 2869              		.syntax divided
 2870              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2871 003e 83F31088 		MSR primask, r3
 2872              	@ 0 "" 2
 2873              	.LVL168:
 2874              		.thumb
 2875              		.syntax unified
 2876              	.LBE967:
 2877              	.LBE966:
1907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 2878              		.loc 1 1907 0
 2879 0042 2268     		ldr	r2, [r4]
 2880 0044 1368     		ldr	r3, [r2]
 2881 0046 1020     		movs	r0, #16
 2882 0048 8343     		bics	r3, r0
 2883 004a 1360     		str	r3, [r2]
 2884              	.LBB968:
 2885              	.LBB969:
 2886              		.loc 2 481 0
 2887              		.syntax divided
 2888              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2889 004c 81F31088 		MSR primask, r1
 2890              	@ 0 "" 2
 2891              		.thumb
 2892              		.syntax unified
 2893              	.L90:
ARM GAS  /tmp/cceLjgLz.s 			page 137


 2894              	.LBE969:
 2895              	.LBE968:
 2896              	.LBE963:
1911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 2897              		.loc 1 1911 0
 2898 0050 2368     		ldr	r3, [r4]
 2899 0052 9B68     		ldr	r3, [r3, #8]
 2900 0054 5B06     		lsls	r3, r3, #25
 2901 0056 22D5     		bpl	.L91
 2902              	.LBB970:
 2903              	.LBB971:
 2904              	.LBB972:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2905              		.loc 2 453 0
 2906              		.syntax divided
 2907              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2908 0058 EFF31081 		MRS r1, primask
 2909              	@ 0 "" 2
 2910              	.LVL169:
 2911              		.thumb
 2912              		.syntax unified
 2913              	.LBE972:
 2914              	.LBE971:
 2915              	.LBB973:
 2916              	.LBB974:
 2917              		.loc 2 481 0
 2918 005c 0123     		movs	r3, #1
 2919              		.syntax divided
 2920              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2921 005e 83F31088 		MSR primask, r3
 2922              	@ 0 "" 2
 2923              	.LVL170:
 2924              		.thumb
 2925              		.syntax unified
 2926              	.LBE974:
 2927              	.LBE973:
1914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2928              		.loc 1 1914 0
 2929 0062 2268     		ldr	r2, [r4]
 2930 0064 9368     		ldr	r3, [r2, #8]
 2931 0066 4020     		movs	r0, #64
 2932 0068 8343     		bics	r3, r0
 2933 006a 9360     		str	r3, [r2, #8]
 2934              	.LBB975:
 2935              	.LBB976:
 2936              		.loc 2 481 0
 2937              		.syntax divided
 2938              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2939 006c 81F31088 		MSR primask, r1
 2940              	@ 0 "" 2
 2941              		.thumb
 2942              		.syntax unified
 2943              	.LBE976:
 2944              	.LBE975:
 2945              	.LBE970:
1917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 2946              		.loc 1 1917 0
ARM GAS  /tmp/cceLjgLz.s 			page 138


 2947 0070 8023     		movs	r3, #128
 2948 0072 E358     		ldr	r3, [r4, r3]
 2949 0074 002B     		cmp	r3, #0
 2950 0076 12D0     		beq	.L91
1921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2951              		.loc 1 1921 0
 2952 0078 0022     		movs	r2, #0
 2953 007a 9A63     		str	r2, [r3, #56]
1923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 2954              		.loc 1 1923 0
 2955 007c 8023     		movs	r3, #128
 2956 007e E058     		ldr	r0, [r4, r3]
 2957 0080 FFF7FEFF 		bl	HAL_DMA_Abort
 2958              	.LVL171:
 2959 0084 0028     		cmp	r0, #0
 2960 0086 0AD0     		beq	.L91
1925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 2961              		.loc 1 1925 0
 2962 0088 8023     		movs	r3, #128
 2963 008a E058     		ldr	r0, [r4, r3]
 2964 008c FFF7FEFF 		bl	HAL_DMA_GetError
 2965              	.LVL172:
 2966 0090 2028     		cmp	r0, #32
 2967 0092 04D1     		bne	.L91
1928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2968              		.loc 1 1928 0
 2969 0094 1022     		movs	r2, #16
 2970 0096 9023     		movs	r3, #144
 2971 0098 E250     		str	r2, [r4, r3]
1930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 2972              		.loc 1 1930 0
 2973 009a 1D38     		subs	r0, r0, #29
 2974 009c 0FE0     		b	.L92
 2975              	.L91:
1937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2976              		.loc 1 1937 0
 2977 009e 0022     		movs	r2, #0
 2978 00a0 5E23     		movs	r3, #94
 2979 00a2 E252     		strh	r2, [r4, r3]
1940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2980              		.loc 1 1940 0
 2981 00a4 2368     		ldr	r3, [r4]
 2982 00a6 0F21     		movs	r1, #15
 2983 00a8 1962     		str	r1, [r3, #32]
1943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2984              		.loc 1 1943 0
 2985 00aa 2168     		ldr	r1, [r4]
 2986 00ac 8869     		ldr	r0, [r1, #24]
 2987 00ae 0823     		movs	r3, #8
 2988 00b0 0343     		orrs	r3, r0
 2989 00b2 8B61     		str	r3, [r1, #24]
1946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2990              		.loc 1 1946 0
 2991 00b4 2021     		movs	r1, #32
 2992 00b6 8C23     		movs	r3, #140
 2993 00b8 E150     		str	r1, [r4, r3]
1947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 139


 2994              		.loc 1 1947 0
 2995 00ba E266     		str	r2, [r4, #108]
1949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 2996              		.loc 1 1949 0
 2997 00bc 0020     		movs	r0, #0
 2998              	.L92:
1950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 2999              		.loc 1 1950 0
 3000              		@ sp needed
 3001              	.LVL173:
 3002 00be 10BD     		pop	{r4, pc}
 3003              	.L94:
 3004              		.align	2
 3005              	.L93:
 3006 00c0 DFFEFFFF 		.word	-289
 3007 00c4 FEFFFFEF 		.word	-268435458
 3008              		.cfi_endproc
 3009              	.LFE328:
 3011              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3012              		.align	2
 3013              		.weak	HAL_UART_TxCpltCallback
 3014              		.code	16
 3015              		.thumb_func
 3017              	HAL_UART_TxCpltCallback:
 3018              	.LFB333:
2634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3019              		.loc 1 2634 0
 3020              		.cfi_startproc
 3021              		@ args = 0, pretend = 0, frame = 0
 3022              		@ frame_needed = 0, uses_anonymous_args = 0
 3023              		@ link register save eliminated.
 3024              	.LVL174:
2641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3025              		.loc 1 2641 0
 3026              		@ sp needed
 3027 0000 7047     		bx	lr
 3028              		.cfi_endproc
 3029              	.LFE333:
 3031 0002 C046     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 3032              		.align	2
 3033              		.code	16
 3034              		.thumb_func
 3036              	UART_DMATransmitCplt:
 3037              	.LFB361:
3672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3038              		.loc 1 3672 0
 3039              		.cfi_startproc
 3040              		@ args = 0, pretend = 0, frame = 0
 3041              		@ frame_needed = 0, uses_anonymous_args = 0
 3042              	.LVL175:
 3043 0000 10B5     		push	{r4, lr}
 3044              	.LCFI15:
 3045              		.cfi_def_cfa_offset 8
 3046              		.cfi_offset 4, -8
 3047              		.cfi_offset 14, -4
3673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3048              		.loc 1 3673 0
ARM GAS  /tmp/cceLjgLz.s 			page 140


 3049 0002 836A     		ldr	r3, [r0, #40]
 3050              	.LVL176:
3676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3051              		.loc 1 3676 0
 3052 0004 0268     		ldr	r2, [r0]
 3053 0006 1268     		ldr	r2, [r2]
 3054 0008 9206     		lsls	r2, r2, #26
 3055 000a 1BD4     		bmi	.L97
3678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3056              		.loc 1 3678 0
 3057 000c 0021     		movs	r1, #0
 3058 000e 5622     		movs	r2, #86
 3059 0010 9952     		strh	r1, [r3, r2]
 3060              	.LBB977:
 3061              	.LBB978:
 3062              	.LBB979:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3063              		.loc 2 453 0
 3064              		.syntax divided
 3065              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3066 0012 EFF31080 		MRS r0, primask
 3067              	@ 0 "" 2
 3068              	.LVL177:
 3069              		.thumb
 3070              		.syntax unified
 3071              	.LBE979:
 3072              	.LBE978:
 3073              	.LBB980:
 3074              	.LBB981:
 3075              		.loc 2 481 0
 3076 0016 553A     		subs	r2, r2, #85
 3077              		.syntax divided
 3078              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3079 0018 82F31088 		MSR primask, r2
 3080              	@ 0 "" 2
 3081              	.LVL178:
 3082              		.thumb
 3083              		.syntax unified
 3084              	.LBE981:
 3085              	.LBE980:
3682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3086              		.loc 1 3682 0
 3087 001c 1968     		ldr	r1, [r3]
 3088 001e 8A68     		ldr	r2, [r1, #8]
 3089 0020 8024     		movs	r4, #128
 3090 0022 A243     		bics	r2, r4
 3091 0024 8A60     		str	r2, [r1, #8]
 3092              	.LBB982:
 3093              	.LBB983:
 3094              		.loc 2 481 0
 3095              		.syntax divided
 3096              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3097 0026 80F31088 		MSR primask, r0
 3098              	@ 0 "" 2
 3099              		.thumb
 3100              		.syntax unified
 3101              	.LBE983:
ARM GAS  /tmp/cceLjgLz.s 			page 141


 3102              	.LBE982:
 3103              	.LBE977:
 3104              	.LBB984:
 3105              	.LBB985:
 3106              	.LBB986:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3107              		.loc 2 453 0
 3108              		.syntax divided
 3109              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3110 002a EFF31081 		MRS r1, primask
 3111              	@ 0 "" 2
 3112              	.LVL179:
 3113              		.thumb
 3114              		.syntax unified
 3115              	.LBE986:
 3116              	.LBE985:
 3117              	.LBB987:
 3118              	.LBB988:
 3119              		.loc 2 481 0
 3120 002e 0122     		movs	r2, #1
 3121              		.syntax divided
 3122              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3123 0030 82F31088 		MSR primask, r2
 3124              	@ 0 "" 2
 3125              	.LVL180:
 3126              		.thumb
 3127              		.syntax unified
 3128              	.LBE988:
 3129              	.LBE987:
3685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 3130              		.loc 1 3685 0
 3131 0034 1A68     		ldr	r2, [r3]
 3132 0036 1068     		ldr	r0, [r2]
 3133 0038 4023     		movs	r3, #64
 3134              	.LVL181:
 3135 003a 0343     		orrs	r3, r0
 3136 003c 1360     		str	r3, [r2]
 3137              	.LBB989:
 3138              	.LBB990:
 3139              		.loc 2 481 0
 3140              		.syntax divided
 3141              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3142 003e 81F31088 		MSR primask, r1
 3143              	@ 0 "" 2
 3144              		.thumb
 3145              		.syntax unified
 3146 0042 02E0     		b	.L96
 3147              	.LVL182:
 3148              	.L97:
 3149              	.LBE990:
 3150              	.LBE989:
 3151              	.LBE984:
3695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3152              		.loc 1 3695 0
 3153 0044 1800     		movs	r0, r3
 3154              	.LVL183:
 3155 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
ARM GAS  /tmp/cceLjgLz.s 			page 142


 3156              	.LVL184:
 3157              	.L96:
3698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3158              		.loc 1 3698 0
 3159              		@ sp needed
 3160 004a 10BD     		pop	{r4, pc}
 3161              		.cfi_endproc
 3162              	.LFE361:
 3164              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 3165              		.align	2
 3166              		.code	16
 3167              		.thumb_func
 3169              	UART_EndTransmit_IT:
 3170              	.LFB375:
4193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
4195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
4196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
4197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *                the configuration information for the specified UART module.
4198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
4199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
4200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
4201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 3171              		.loc 1 4201 0
 3172              		.cfi_startproc
 3173              		@ args = 0, pretend = 0, frame = 0
 3174              		@ frame_needed = 0, uses_anonymous_args = 0
 3175              	.LVL185:
 3176 0000 10B5     		push	{r4, lr}
 3177              	.LCFI16:
 3178              		.cfi_def_cfa_offset 8
 3179              		.cfi_offset 4, -8
 3180              		.cfi_offset 14, -4
 3181              	.LBB991:
 3182              	.LBB992:
 3183              	.LBB993:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3184              		.loc 2 453 0
 3185              		.syntax divided
 3186              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3187 0002 EFF31081 		MRS r1, primask
 3188              	@ 0 "" 2
 3189              	.LVL186:
 3190              		.thumb
 3191              		.syntax unified
 3192              	.LBE993:
 3193              	.LBE992:
 3194              	.LBB994:
 3195              	.LBB995:
 3196              		.loc 2 481 0
 3197 0006 0123     		movs	r3, #1
 3198              		.syntax divided
 3199              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3200 0008 83F31088 		MSR primask, r3
 3201              	@ 0 "" 2
 3202              	.LVL187:
 3203              		.thumb
ARM GAS  /tmp/cceLjgLz.s 			page 143


 3204              		.syntax unified
 3205              	.LBE995:
 3206              	.LBE994:
4202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
4203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 3207              		.loc 1 4203 0
 3208 000c 0268     		ldr	r2, [r0]
 3209 000e 1368     		ldr	r3, [r2]
 3210 0010 4024     		movs	r4, #64
 3211 0012 A343     		bics	r3, r4
 3212 0014 1360     		str	r3, [r2]
 3213              	.LBB996:
 3214              	.LBB997:
 3215              		.loc 2 481 0
 3216              		.syntax divided
 3217              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3218 0016 81F31088 		MSR primask, r1
 3219              	@ 0 "" 2
 3220              		.thumb
 3221              		.syntax unified
 3222              	.LBE997:
 3223              	.LBE996:
 3224              	.LBE991:
4204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
4206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3225              		.loc 1 4206 0
 3226 001a 2022     		movs	r2, #32
 3227 001c 8823     		movs	r3, #136
 3228 001e C250     		str	r2, [r0, r3]
4207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Cleat TxISR function pointer */
4209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxISR = NULL;
 3229              		.loc 1 4209 0
 3230 0020 0023     		movs	r3, #0
 3231 0022 8367     		str	r3, [r0, #120]
4210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call registered Tx complete callback*/
4213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxCpltCallback(huart);
4214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
4215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
4216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 3232              		.loc 1 4216 0
 3233 0024 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 3234              	.LVL188:
4217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 3235              		.loc 1 4218 0
 3236              		@ sp needed
 3237 0028 10BD     		pop	{r4, pc}
 3238              		.cfi_endproc
 3239              	.LFE375:
 3241 002a C046     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3242              		.align	2
 3243              		.weak	HAL_UART_TxHalfCpltCallback
 3244              		.code	16
ARM GAS  /tmp/cceLjgLz.s 			page 144


 3245              		.thumb_func
 3247              	HAL_UART_TxHalfCpltCallback:
 3248              	.LFB334:
2649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3249              		.loc 1 2649 0
 3250              		.cfi_startproc
 3251              		@ args = 0, pretend = 0, frame = 0
 3252              		@ frame_needed = 0, uses_anonymous_args = 0
 3253              		@ link register save eliminated.
 3254              	.LVL189:
2656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3255              		.loc 1 2656 0
 3256              		@ sp needed
 3257 0000 7047     		bx	lr
 3258              		.cfi_endproc
 3259              	.LFE334:
 3261 0002 C046     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 3262              		.align	2
 3263              		.code	16
 3264              		.thumb_func
 3266              	UART_DMATxHalfCplt:
 3267              	.LFB362:
3706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3268              		.loc 1 3706 0
 3269              		.cfi_startproc
 3270              		@ args = 0, pretend = 0, frame = 0
 3271              		@ frame_needed = 0, uses_anonymous_args = 0
 3272              	.LVL190:
 3273 0000 10B5     		push	{r4, lr}
 3274              	.LCFI17:
 3275              		.cfi_def_cfa_offset 8
 3276              		.cfi_offset 4, -8
 3277              		.cfi_offset 14, -4
3707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3278              		.loc 1 3707 0
 3279 0002 806A     		ldr	r0, [r0, #40]
 3280              	.LVL191:
3714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3281              		.loc 1 3714 0
 3282 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 3283              	.LVL192:
3716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3284              		.loc 1 3716 0
 3285              		@ sp needed
 3286 0008 10BD     		pop	{r4, pc}
 3287              		.cfi_endproc
 3288              	.LFE362:
 3290 000a C046     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3291              		.align	2
 3292              		.weak	HAL_UART_RxCpltCallback
 3293              		.code	16
 3294              		.thumb_func
 3296              	HAL_UART_RxCpltCallback:
 3297              	.LFB335:
2664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3298              		.loc 1 2664 0
 3299              		.cfi_startproc
ARM GAS  /tmp/cceLjgLz.s 			page 145


 3300              		@ args = 0, pretend = 0, frame = 0
 3301              		@ frame_needed = 0, uses_anonymous_args = 0
 3302              		@ link register save eliminated.
 3303              	.LVL193:
2671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3304              		.loc 1 2671 0
 3305              		@ sp needed
 3306 0000 7047     		bx	lr
 3307              		.cfi_endproc
 3308              	.LFE335:
 3310 0002 C046     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3311              		.align	2
 3312              		.weak	HAL_UART_RxHalfCpltCallback
 3313              		.code	16
 3314              		.thumb_func
 3316              	HAL_UART_RxHalfCpltCallback:
 3317              	.LFB336:
2679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3318              		.loc 1 2679 0
 3319              		.cfi_startproc
 3320              		@ args = 0, pretend = 0, frame = 0
 3321              		@ frame_needed = 0, uses_anonymous_args = 0
 3322              		@ link register save eliminated.
 3323              	.LVL194:
2686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3324              		.loc 1 2686 0
 3325              		@ sp needed
 3326 0000 7047     		bx	lr
 3327              		.cfi_endproc
 3328              	.LFE336:
 3330 0002 C046     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3331              		.align	2
 3332              		.weak	HAL_UART_ErrorCallback
 3333              		.code	16
 3334              		.thumb_func
 3336              	HAL_UART_ErrorCallback:
 3337              	.LFB337:
2694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3338              		.loc 1 2694 0
 3339              		.cfi_startproc
 3340              		@ args = 0, pretend = 0, frame = 0
 3341              		@ frame_needed = 0, uses_anonymous_args = 0
 3342              		@ link register save eliminated.
 3343              	.LVL195:
2701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3344              		.loc 1 2701 0
 3345              		@ sp needed
 3346 0000 7047     		bx	lr
 3347              		.cfi_endproc
 3348              	.LFE337:
 3350 0002 C046     		.section	.text.UART_DMAError,"ax",%progbits
 3351              		.align	2
 3352              		.code	16
 3353              		.thumb_func
 3355              	UART_DMAError:
 3356              	.LFB365:
3823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
ARM GAS  /tmp/cceLjgLz.s 			page 146


 3357              		.loc 1 3823 0
 3358              		.cfi_startproc
 3359              		@ args = 0, pretend = 0, frame = 0
 3360              		@ frame_needed = 0, uses_anonymous_args = 0
 3361              	.LVL196:
 3362 0000 70B5     		push	{r4, r5, r6, lr}
 3363              	.LCFI18:
 3364              		.cfi_def_cfa_offset 16
 3365              		.cfi_offset 4, -16
 3366              		.cfi_offset 5, -12
 3367              		.cfi_offset 6, -8
 3368              		.cfi_offset 14, -4
3824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3369              		.loc 1 3824 0
 3370 0002 846A     		ldr	r4, [r0, #40]
 3371              	.LVL197:
3826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 3372              		.loc 1 3826 0
 3373 0004 8823     		movs	r3, #136
 3374 0006 E258     		ldr	r2, [r4, r3]
 3375              	.LVL198:
3827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3376              		.loc 1 3827 0
 3377 0008 0433     		adds	r3, r3, #4
 3378 000a E558     		ldr	r5, [r4, r3]
 3379              	.LVL199:
3830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 3380              		.loc 1 3830 0
 3381 000c 2368     		ldr	r3, [r4]
 3382 000e 9B68     		ldr	r3, [r3, #8]
 3383 0010 1B06     		lsls	r3, r3, #24
 3384 0012 07D5     		bpl	.L106
3830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 3385              		.loc 1 3830 0 is_stmt 0 discriminator 1
 3386 0014 212A     		cmp	r2, #33
 3387 0016 05D1     		bne	.L106
3833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 3388              		.loc 1 3833 0 is_stmt 1
 3389 0018 0022     		movs	r2, #0
 3390              	.LVL200:
 3391 001a 5623     		movs	r3, #86
 3392 001c E252     		strh	r2, [r4, r3]
3834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 3393              		.loc 1 3834 0
 3394 001e 2000     		movs	r0, r4
 3395              	.LVL201:
 3396 0020 FFF7FEFF 		bl	UART_EndTxTransfer
 3397              	.LVL202:
 3398              	.L106:
3838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 3399              		.loc 1 3838 0
 3400 0024 2368     		ldr	r3, [r4]
 3401 0026 9B68     		ldr	r3, [r3, #8]
 3402 0028 5B06     		lsls	r3, r3, #25
 3403 002a 07D5     		bpl	.L107
3838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 3404              		.loc 1 3838 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cceLjgLz.s 			page 147


 3405 002c 222D     		cmp	r5, #34
 3406 002e 05D1     		bne	.L107
3841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 3407              		.loc 1 3841 0 is_stmt 1
 3408 0030 0022     		movs	r2, #0
 3409 0032 5E23     		movs	r3, #94
 3410 0034 E252     		strh	r2, [r4, r3]
3842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 3411              		.loc 1 3842 0
 3412 0036 2000     		movs	r0, r4
 3413 0038 FFF7FEFF 		bl	UART_EndRxTransfer
 3414              	.LVL203:
 3415              	.L107:
3845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3416              		.loc 1 3845 0
 3417 003c 9022     		movs	r2, #144
 3418 003e A158     		ldr	r1, [r4, r2]
 3419 0040 1023     		movs	r3, #16
 3420 0042 0B43     		orrs	r3, r1
 3421 0044 A350     		str	r3, [r4, r2]
3852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3422              		.loc 1 3852 0
 3423 0046 2000     		movs	r0, r4
 3424 0048 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3425              	.LVL204:
3854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3426              		.loc 1 3854 0
 3427              		@ sp needed
 3428              	.LVL205:
 3429              	.LVL206:
 3430 004c 70BD     		pop	{r4, r5, r6, pc}
 3431              		.cfi_endproc
 3432              	.LFE365:
 3434 004e C046     		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3435              		.align	2
 3436              		.code	16
 3437              		.thumb_func
 3439              	UART_DMAAbortOnError:
 3440              	.LFB366:
3863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3441              		.loc 1 3863 0
 3442              		.cfi_startproc
 3443              		@ args = 0, pretend = 0, frame = 0
 3444              		@ frame_needed = 0, uses_anonymous_args = 0
 3445              	.LVL207:
 3446 0000 10B5     		push	{r4, lr}
 3447              	.LCFI19:
 3448              		.cfi_def_cfa_offset 8
 3449              		.cfi_offset 4, -8
 3450              		.cfi_offset 14, -4
3864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3451              		.loc 1 3864 0
 3452 0002 806A     		ldr	r0, [r0, #40]
 3453              	.LVL208:
3865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3454              		.loc 1 3865 0
 3455 0004 0023     		movs	r3, #0
ARM GAS  /tmp/cceLjgLz.s 			page 148


 3456 0006 5E22     		movs	r2, #94
 3457 0008 8352     		strh	r3, [r0, r2]
3866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3458              		.loc 1 3866 0
 3459 000a 083A     		subs	r2, r2, #8
 3460 000c 8352     		strh	r3, [r0, r2]
3873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3461              		.loc 1 3873 0
 3462 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3463              	.LVL209:
3875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3464              		.loc 1 3875 0
 3465              		@ sp needed
 3466 0012 10BD     		pop	{r4, pc}
 3467              		.cfi_endproc
 3468              	.LFE366:
 3470              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3471              		.align	2
 3472              		.weak	HAL_UART_AbortCpltCallback
 3473              		.code	16
 3474              		.thumb_func
 3476              	HAL_UART_AbortCpltCallback:
 3477              	.LFB338:
2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3478              		.loc 1 2709 0
 3479              		.cfi_startproc
 3480              		@ args = 0, pretend = 0, frame = 0
 3481              		@ frame_needed = 0, uses_anonymous_args = 0
 3482              		@ link register save eliminated.
 3483              	.LVL210:
2716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3484              		.loc 1 2716 0
 3485              		@ sp needed
 3486 0000 7047     		bx	lr
 3487              		.cfi_endproc
 3488              	.LFE338:
 3490 0002 C046     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3491              		.align	2
 3492              		.global	HAL_UART_Abort_IT
 3493              		.code	16
 3494              		.thumb_func
 3496              	HAL_UART_Abort_IT:
 3497              	.LFB329:
1967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 3498              		.loc 1 1967 0
 3499              		.cfi_startproc
 3500              		@ args = 0, pretend = 0, frame = 0
 3501              		@ frame_needed = 0, uses_anonymous_args = 0
 3502              	.LVL211:
 3503 0000 70B5     		push	{r4, r5, r6, lr}
 3504              	.LCFI20:
 3505              		.cfi_def_cfa_offset 16
 3506              		.cfi_offset 4, -16
 3507              		.cfi_offset 5, -12
 3508              		.cfi_offset 6, -8
 3509              		.cfi_offset 14, -4
 3510 0002 0400     		movs	r4, r0
ARM GAS  /tmp/cceLjgLz.s 			page 149


 3511              	.LVL212:
 3512              	.LBB998:
 3513              	.LBB999:
 3514              	.LBB1000:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3515              		.loc 2 453 0
 3516              		.syntax divided
 3517              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3518 0004 EFF31081 		MRS r1, primask
 3519              	@ 0 "" 2
 3520              	.LVL213:
 3521              		.thumb
 3522              		.syntax unified
 3523              	.LBE1000:
 3524              	.LBE999:
 3525              	.LBB1001:
 3526              	.LBB1002:
 3527              		.loc 2 481 0
 3528 0008 0123     		movs	r3, #1
 3529              		.syntax divided
 3530              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3531 000a 83F31088 		MSR primask, r3
 3532              	@ 0 "" 2
 3533              	.LVL214:
 3534              		.thumb
 3535              		.syntax unified
 3536              	.LBE1002:
 3537              	.LBE1001:
1971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE));
 3538              		.loc 1 1971 0
 3539 000e 0268     		ldr	r2, [r0]
 3540 0010 1068     		ldr	r0, [r2]
 3541              	.LVL215:
 3542 0012 504B     		ldr	r3, .L124
 3543 0014 0340     		ands	r3, r0
 3544 0016 1360     		str	r3, [r2]
 3545              	.LBB1003:
 3546              	.LBB1004:
 3547              		.loc 2 481 0
 3548              		.syntax divided
 3549              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3550 0018 81F31088 		MSR primask, r1
 3551              	@ 0 "" 2
 3552              		.thumb
 3553              		.syntax unified
 3554              	.LBE1004:
 3555              	.LBE1003:
 3556              	.LBE998:
 3557              	.LBB1005:
 3558              	.LBB1006:
 3559              	.LBB1007:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3560              		.loc 2 453 0
 3561              		.syntax divided
 3562              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3563 001c EFF31081 		MRS r1, primask
 3564              	@ 0 "" 2
ARM GAS  /tmp/cceLjgLz.s 			page 150


 3565              	.LVL216:
 3566              		.thumb
 3567              		.syntax unified
 3568              	.LBE1007:
 3569              	.LBE1006:
 3570              	.LBB1008:
 3571              	.LBB1009:
 3572              		.loc 2 481 0
 3573 0020 0123     		movs	r3, #1
 3574              		.syntax divided
 3575              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3576 0022 83F31088 		MSR primask, r3
 3577              	@ 0 "" 2
 3578              	.LVL217:
 3579              		.thumb
 3580              		.syntax unified
 3581              	.LBE1009:
 3582              	.LBE1008:
1973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3583              		.loc 1 1973 0
 3584 0026 2268     		ldr	r2, [r4]
 3585 0028 9068     		ldr	r0, [r2, #8]
 3586 002a 4B4B     		ldr	r3, .L124+4
 3587 002c 0340     		ands	r3, r0
 3588 002e 9360     		str	r3, [r2, #8]
 3589              	.LBB1010:
 3590              	.LBB1011:
 3591              		.loc 2 481 0
 3592              		.syntax divided
 3593              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3594 0030 81F31088 		MSR primask, r1
 3595              	@ 0 "" 2
 3596              		.thumb
 3597              		.syntax unified
 3598              	.LBE1011:
 3599              	.LBE1010:
 3600              	.LBE1005:
1976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3601              		.loc 1 1976 0
 3602 0034 E36E     		ldr	r3, [r4, #108]
 3603 0036 012B     		cmp	r3, #1
 3604 0038 0AD1     		bne	.L111
 3605              	.LBB1012:
 3606              	.LBB1013:
 3607              	.LBB1014:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3608              		.loc 2 453 0
 3609              		.syntax divided
 3610              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3611 003a EFF31081 		MRS r1, primask
 3612              	@ 0 "" 2
 3613              	.LVL218:
 3614              		.thumb
 3615              		.syntax unified
 3616              	.LBE1014:
 3617              	.LBE1013:
 3618              	.LBB1015:
ARM GAS  /tmp/cceLjgLz.s 			page 151


 3619              	.LBB1016:
 3620              		.loc 2 481 0
 3621              		.syntax divided
 3622              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3623 003e 83F31088 		MSR primask, r3
 3624              	@ 0 "" 2
 3625              	.LVL219:
 3626              		.thumb
 3627              		.syntax unified
 3628              	.LBE1016:
 3629              	.LBE1015:
1978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 3630              		.loc 1 1978 0
 3631 0042 2268     		ldr	r2, [r4]
 3632 0044 1368     		ldr	r3, [r2]
 3633 0046 1020     		movs	r0, #16
 3634 0048 8343     		bics	r3, r0
 3635 004a 1360     		str	r3, [r2]
 3636              	.LBB1017:
 3637              	.LBB1018:
 3638              		.loc 2 481 0
 3639              		.syntax divided
 3640              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3641 004c 81F31088 		MSR primask, r1
 3642              	@ 0 "" 2
 3643              		.thumb
 3644              		.syntax unified
 3645              	.L111:
 3646              	.LBE1018:
 3647              	.LBE1017:
 3648              	.LBE1012:
1984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3649              		.loc 1 1984 0
 3650 0050 E36F     		ldr	r3, [r4, #124]
 3651 0052 002B     		cmp	r3, #0
 3652 0054 08D0     		beq	.L112
1988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3653              		.loc 1 1988 0
 3654 0056 2268     		ldr	r2, [r4]
 3655 0058 9268     		ldr	r2, [r2, #8]
 3656 005a 1206     		lsls	r2, r2, #24
 3657 005c 02D5     		bpl	.L113
1990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3658              		.loc 1 1990 0
 3659 005e 3F4A     		ldr	r2, .L124+8
 3660 0060 9A63     		str	r2, [r3, #56]
 3661 0062 01E0     		b	.L112
 3662              	.L113:
1994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3663              		.loc 1 1994 0
 3664 0064 0022     		movs	r2, #0
 3665 0066 9A63     		str	r2, [r3, #56]
 3666              	.L112:
1998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3667              		.loc 1 1998 0
 3668 0068 8023     		movs	r3, #128
 3669 006a E358     		ldr	r3, [r4, r3]
ARM GAS  /tmp/cceLjgLz.s 			page 152


 3670 006c 002B     		cmp	r3, #0
 3671 006e 08D0     		beq	.L114
2002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3672              		.loc 1 2002 0
 3673 0070 2268     		ldr	r2, [r4]
 3674 0072 9268     		ldr	r2, [r2, #8]
 3675 0074 5206     		lsls	r2, r2, #25
 3676 0076 02D5     		bpl	.L115
2004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3677              		.loc 1 2004 0
 3678 0078 394A     		ldr	r2, .L124+12
 3679 007a 9A63     		str	r2, [r3, #56]
 3680 007c 01E0     		b	.L114
 3681              	.L115:
2008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3682              		.loc 1 2008 0
 3683 007e 0022     		movs	r2, #0
 3684 0080 9A63     		str	r2, [r3, #56]
 3685              	.L114:
2013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3686              		.loc 1 2013 0
 3687 0082 2368     		ldr	r3, [r4]
 3688 0084 9B68     		ldr	r3, [r3, #8]
 3689 0086 1B06     		lsls	r3, r3, #24
 3690 0088 17D5     		bpl	.L120
 3691              	.LBB1019:
 3692              	.LBB1020:
 3693              	.LBB1021:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3694              		.loc 2 453 0
 3695              		.syntax divided
 3696              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3697 008a EFF31081 		MRS r1, primask
 3698              	@ 0 "" 2
 3699              	.LVL220:
 3700              		.thumb
 3701              		.syntax unified
 3702              	.LBE1021:
 3703              	.LBE1020:
 3704              	.LBB1022:
 3705              	.LBB1023:
 3706              		.loc 2 481 0
 3707 008e 0123     		movs	r3, #1
 3708              		.syntax divided
 3709              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3710 0090 83F31088 		MSR primask, r3
 3711              	@ 0 "" 2
 3712              	.LVL221:
 3713              		.thumb
 3714              		.syntax unified
 3715              	.LBE1023:
 3716              	.LBE1022:
2016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3717              		.loc 1 2016 0
 3718 0094 2268     		ldr	r2, [r4]
 3719 0096 9368     		ldr	r3, [r2, #8]
 3720 0098 8020     		movs	r0, #128
ARM GAS  /tmp/cceLjgLz.s 			page 153


 3721 009a 8343     		bics	r3, r0
 3722 009c 9360     		str	r3, [r2, #8]
 3723              	.LBB1024:
 3724              	.LBB1025:
 3725              		.loc 2 481 0
 3726              		.syntax divided
 3727              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3728 009e 81F31088 		MSR primask, r1
 3729              	@ 0 "" 2
 3730              		.thumb
 3731              		.syntax unified
 3732              	.LBE1025:
 3733              	.LBE1024:
 3734              	.LBE1019:
2019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3735              		.loc 1 2019 0
 3736 00a2 E06F     		ldr	r0, [r4, #124]
 3737 00a4 0028     		cmp	r0, #0
 3738 00a6 0AD0     		beq	.L121
2025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 3739              		.loc 1 2025 0
 3740 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3741              	.LVL222:
 3742 00ac 0028     		cmp	r0, #0
 3743 00ae 08D0     		beq	.L122
2027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 3744              		.loc 1 2027 0
 3745 00b0 E36F     		ldr	r3, [r4, #124]
 3746 00b2 0022     		movs	r2, #0
 3747 00b4 9A63     		str	r2, [r3, #56]
1968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3748              		.loc 1 1968 0
 3749 00b6 0123     		movs	r3, #1
 3750 00b8 04E0     		b	.L116
 3751              	.L120:
 3752 00ba 0123     		movs	r3, #1
 3753 00bc 02E0     		b	.L116
 3754              	.L121:
 3755 00be 0123     		movs	r3, #1
 3756 00c0 00E0     		b	.L116
 3757              	.L122:
2031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 3758              		.loc 1 2031 0
 3759 00c2 0023     		movs	r3, #0
 3760              	.L116:
 3761              	.LVL223:
2037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3762              		.loc 1 2037 0
 3763 00c4 2268     		ldr	r2, [r4]
 3764 00c6 9268     		ldr	r2, [r2, #8]
 3765 00c8 5206     		lsls	r2, r2, #25
 3766 00ca 1AD5     		bpl	.L117
 3767              	.LBB1026:
 3768              	.LBB1027:
 3769              	.LBB1028:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3770              		.loc 2 453 0
ARM GAS  /tmp/cceLjgLz.s 			page 154


 3771              		.syntax divided
 3772              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3773 00cc EFF31080 		MRS r0, primask
 3774              	@ 0 "" 2
 3775              	.LVL224:
 3776              		.thumb
 3777              		.syntax unified
 3778              	.LBE1028:
 3779              	.LBE1027:
 3780              	.LBB1029:
 3781              	.LBB1030:
 3782              		.loc 2 481 0
 3783 00d0 0122     		movs	r2, #1
 3784              		.syntax divided
 3785              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3786 00d2 82F31088 		MSR primask, r2
 3787              	@ 0 "" 2
 3788              	.LVL225:
 3789              		.thumb
 3790              		.syntax unified
 3791              	.LBE1030:
 3792              	.LBE1029:
2040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3793              		.loc 1 2040 0
 3794 00d6 2168     		ldr	r1, [r4]
 3795 00d8 8A68     		ldr	r2, [r1, #8]
 3796 00da 4025     		movs	r5, #64
 3797 00dc AA43     		bics	r2, r5
 3798 00de 8A60     		str	r2, [r1, #8]
 3799              	.LBB1031:
 3800              	.LBB1032:
 3801              		.loc 2 481 0
 3802              		.syntax divided
 3803              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3804 00e0 80F31088 		MSR primask, r0
 3805              	@ 0 "" 2
 3806              		.thumb
 3807              		.syntax unified
 3808              	.LBE1032:
 3809              	.LBE1031:
 3810              	.LBE1026:
2043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3811              		.loc 1 2043 0
 3812 00e4 8022     		movs	r2, #128
 3813 00e6 A058     		ldr	r0, [r4, r2]
 3814 00e8 0028     		cmp	r0, #0
 3815 00ea 0AD0     		beq	.L117
2049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 3816              		.loc 1 2049 0
 3817 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3818              	.LVL226:
 3819 00f0 0028     		cmp	r0, #0
 3820 00f2 05D0     		beq	.L123
2051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         abortcplt = 1U;
 3821              		.loc 1 2051 0
 3822 00f4 8023     		movs	r3, #128
 3823 00f6 E358     		ldr	r3, [r4, r3]
ARM GAS  /tmp/cceLjgLz.s 			page 155


 3824 00f8 0022     		movs	r2, #0
 3825 00fa 9A63     		str	r2, [r3, #56]
 3826              	.LVL227:
2052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 3827              		.loc 1 2052 0
 3828 00fc 0123     		movs	r3, #1
 3829 00fe 00E0     		b	.L117
 3830              	.LVL228:
 3831              	.L123:
2056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 3832              		.loc 1 2056 0
 3833 0100 0023     		movs	r3, #0
 3834              	.L117:
 3835              	.LVL229:
2062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3836              		.loc 1 2062 0
 3837 0102 012B     		cmp	r3, #1
 3838 0104 24D1     		bne	.L118
2065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3839              		.loc 1 2065 0
 3840 0106 0023     		movs	r3, #0
 3841              	.LVL230:
 3842 0108 5622     		movs	r2, #86
 3843 010a A352     		strh	r3, [r4, r2]
2066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3844              		.loc 1 2066 0
 3845 010c 0832     		adds	r2, r2, #8
 3846 010e A352     		strh	r3, [r4, r2]
2069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxISR = NULL;
 3847              		.loc 1 2069 0
 3848 0110 6367     		str	r3, [r4, #116]
2070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3849              		.loc 1 2070 0
 3850 0112 A367     		str	r3, [r4, #120]
2073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3851              		.loc 1 2073 0
 3852 0114 3232     		adds	r2, r2, #50
 3853 0116 A350     		str	r3, [r4, r2]
2076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3854              		.loc 1 2076 0
 3855 0118 2368     		ldr	r3, [r4]
 3856 011a 813A     		subs	r2, r2, #129
 3857 011c 1A62     		str	r2, [r3, #32]
2079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3858              		.loc 1 2079 0
 3859 011e 8023     		movs	r3, #128
 3860 0120 9B05     		lsls	r3, r3, #22
 3861 0122 626E     		ldr	r2, [r4, #100]
 3862 0124 9A42     		cmp	r2, r3
 3863 0126 04D1     		bne	.L119
2081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 3864              		.loc 1 2081 0
 3865 0128 2268     		ldr	r2, [r4]
 3866 012a 9169     		ldr	r1, [r2, #24]
 3867 012c 1023     		movs	r3, #16
 3868 012e 0B43     		orrs	r3, r1
 3869 0130 9361     		str	r3, [r2, #24]
ARM GAS  /tmp/cceLjgLz.s 			page 156


 3870              	.L119:
2085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3871              		.loc 1 2085 0
 3872 0132 2268     		ldr	r2, [r4]
 3873 0134 9169     		ldr	r1, [r2, #24]
 3874 0136 0823     		movs	r3, #8
 3875 0138 0B43     		orrs	r3, r1
 3876 013a 9361     		str	r3, [r2, #24]
2088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3877              		.loc 1 2088 0
 3878 013c 2023     		movs	r3, #32
 3879 013e 8822     		movs	r2, #136
 3880 0140 A350     		str	r3, [r4, r2]
2089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3881              		.loc 1 2089 0
 3882 0142 0432     		adds	r2, r2, #4
 3883 0144 A350     		str	r3, [r4, r2]
2090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3884              		.loc 1 2090 0
 3885 0146 0023     		movs	r3, #0
 3886 0148 E366     		str	r3, [r4, #108]
2098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3887              		.loc 1 2098 0
 3888 014a 2000     		movs	r0, r4
 3889 014c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3890              	.LVL231:
 3891              	.L118:
2103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3892              		.loc 1 2103 0
 3893 0150 0020     		movs	r0, #0
 3894              		@ sp needed
 3895              	.LVL232:
 3896 0152 70BD     		pop	{r4, r5, r6, pc}
 3897              	.L125:
 3898              		.align	2
 3899              	.L124:
 3900 0154 1FFEFFFF 		.word	-481
 3901 0158 FEFF7FEF 		.word	-276824066
 3902 015c 00000000 		.word	UART_DMATxAbortCallback
 3903 0160 00000000 		.word	UART_DMARxAbortCallback
 3904              		.cfi_endproc
 3905              	.LFE329:
 3907              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3908              		.align	2
 3909              		.code	16
 3910              		.thumb_func
 3912              	UART_DMARxAbortCallback:
 3913              	.LFB368:
3941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3914              		.loc 1 3941 0
 3915              		.cfi_startproc
 3916              		@ args = 0, pretend = 0, frame = 0
 3917              		@ frame_needed = 0, uses_anonymous_args = 0
 3918              	.LVL233:
 3919 0000 10B5     		push	{r4, lr}
 3920              	.LCFI21:
 3921              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cceLjgLz.s 			page 157


 3922              		.cfi_offset 4, -8
 3923              		.cfi_offset 14, -4
3942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3924              		.loc 1 3942 0
 3925 0002 806A     		ldr	r0, [r0, #40]
 3926              	.LVL234:
3944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3927              		.loc 1 3944 0
 3928 0004 8023     		movs	r3, #128
 3929 0006 C358     		ldr	r3, [r0, r3]
 3930 0008 0022     		movs	r2, #0
 3931 000a 9A63     		str	r2, [r3, #56]
3947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 3932              		.loc 1 3947 0
 3933 000c C36F     		ldr	r3, [r0, #124]
 3934 000e 002B     		cmp	r3, #0
 3935 0010 02D0     		beq	.L127
3949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 3936              		.loc 1 3949 0
 3937 0012 9B6B     		ldr	r3, [r3, #56]
 3938 0014 002B     		cmp	r3, #0
 3939 0016 16D1     		bne	.L126
 3940              	.L127:
3956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3941              		.loc 1 3956 0
 3942 0018 0023     		movs	r3, #0
 3943 001a 5622     		movs	r2, #86
 3944 001c 8352     		strh	r3, [r0, r2]
3957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3945              		.loc 1 3957 0
 3946 001e 0832     		adds	r2, r2, #8
 3947 0020 8352     		strh	r3, [r0, r2]
3960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3948              		.loc 1 3960 0
 3949 0022 3232     		adds	r2, r2, #50
 3950 0024 8350     		str	r3, [r0, r2]
3963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3951              		.loc 1 3963 0
 3952 0026 0268     		ldr	r2, [r0]
 3953 0028 0F21     		movs	r1, #15
 3954 002a 1162     		str	r1, [r2, #32]
3966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3955              		.loc 1 3966 0
 3956 002c 0168     		ldr	r1, [r0]
 3957 002e 8C69     		ldr	r4, [r1, #24]
 3958 0030 0822     		movs	r2, #8
 3959 0032 2243     		orrs	r2, r4
 3960 0034 8A61     		str	r2, [r1, #24]
3969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3961              		.loc 1 3969 0
 3962 0036 2022     		movs	r2, #32
 3963 0038 8821     		movs	r1, #136
 3964 003a 4250     		str	r2, [r0, r1]
3970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3965              		.loc 1 3970 0
 3966 003c 0431     		adds	r1, r1, #4
 3967 003e 4250     		str	r2, [r0, r1]
ARM GAS  /tmp/cceLjgLz.s 			page 158


3971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3968              		.loc 1 3971 0
 3969 0040 C366     		str	r3, [r0, #108]
3979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3970              		.loc 1 3979 0
 3971 0042 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3972              	.LVL235:
 3973              	.L126:
3981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3974              		.loc 1 3981 0
 3975              		@ sp needed
 3976 0046 10BD     		pop	{r4, pc}
 3977              		.cfi_endproc
 3978              	.LFE368:
 3980              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3981              		.align	2
 3982              		.code	16
 3983              		.thumb_func
 3985              	UART_DMATxAbortCallback:
 3986              	.LFB367:
3886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3987              		.loc 1 3886 0
 3988              		.cfi_startproc
 3989              		@ args = 0, pretend = 0, frame = 0
 3990              		@ frame_needed = 0, uses_anonymous_args = 0
 3991              	.LVL236:
 3992 0000 10B5     		push	{r4, lr}
 3993              	.LCFI22:
 3994              		.cfi_def_cfa_offset 8
 3995              		.cfi_offset 4, -8
 3996              		.cfi_offset 14, -4
3887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 3997              		.loc 1 3887 0
 3998 0002 806A     		ldr	r0, [r0, #40]
 3999              	.LVL237:
3889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4000              		.loc 1 3889 0
 4001 0004 C36F     		ldr	r3, [r0, #124]
 4002 0006 0022     		movs	r2, #0
 4003 0008 9A63     		str	r2, [r3, #56]
3892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 4004              		.loc 1 3892 0
 4005 000a 8023     		movs	r3, #128
 4006 000c C358     		ldr	r3, [r0, r3]
 4007 000e 002B     		cmp	r3, #0
 4008 0010 02D0     		beq	.L130
3894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4009              		.loc 1 3894 0
 4010 0012 9B6B     		ldr	r3, [r3, #56]
 4011 0014 002B     		cmp	r3, #0
 4012 0016 1CD1     		bne	.L129
 4013              	.L130:
3901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 4014              		.loc 1 3901 0
 4015 0018 0023     		movs	r3, #0
 4016 001a 5622     		movs	r2, #86
 4017 001c 8352     		strh	r3, [r0, r2]
ARM GAS  /tmp/cceLjgLz.s 			page 159


3902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4018              		.loc 1 3902 0
 4019 001e 0832     		adds	r2, r2, #8
 4020 0020 8352     		strh	r3, [r0, r2]
3905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4021              		.loc 1 3905 0
 4022 0022 3232     		adds	r2, r2, #50
 4023 0024 8350     		str	r3, [r0, r2]
3908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4024              		.loc 1 3908 0
 4025 0026 0368     		ldr	r3, [r0]
 4026 0028 813A     		subs	r2, r2, #129
 4027 002a 1A62     		str	r2, [r3, #32]
3911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 4028              		.loc 1 3911 0
 4029 002c 8023     		movs	r3, #128
 4030 002e 9B05     		lsls	r3, r3, #22
 4031 0030 426E     		ldr	r2, [r0, #100]
 4032 0032 9A42     		cmp	r2, r3
 4033 0034 04D1     		bne	.L132
3913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 4034              		.loc 1 3913 0
 4035 0036 0268     		ldr	r2, [r0]
 4036 0038 9169     		ldr	r1, [r2, #24]
 4037 003a 1023     		movs	r3, #16
 4038 003c 0B43     		orrs	r3, r1
 4039 003e 9361     		str	r3, [r2, #24]
 4040              	.L132:
3917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4041              		.loc 1 3917 0
 4042 0040 2023     		movs	r3, #32
 4043 0042 8822     		movs	r2, #136
 4044 0044 8350     		str	r3, [r0, r2]
3918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4045              		.loc 1 3918 0
 4046 0046 0432     		adds	r2, r2, #4
 4047 0048 8350     		str	r3, [r0, r2]
3919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4048              		.loc 1 3919 0
 4049 004a 0023     		movs	r3, #0
 4050 004c C366     		str	r3, [r0, #108]
3927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4051              		.loc 1 3927 0
 4052 004e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4053              	.LVL238:
 4054              	.L129:
3929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4055              		.loc 1 3929 0
 4056              		@ sp needed
 4057 0052 10BD     		pop	{r4, pc}
 4058              		.cfi_endproc
 4059              	.LFE367:
 4061              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 4062              		.align	2
 4063              		.weak	HAL_UART_AbortTransmitCpltCallback
 4064              		.code	16
 4065              		.thumb_func
ARM GAS  /tmp/cceLjgLz.s 			page 160


 4067              	HAL_UART_AbortTransmitCpltCallback:
 4068              	.LFB339:
2724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 4069              		.loc 1 2724 0
 4070              		.cfi_startproc
 4071              		@ args = 0, pretend = 0, frame = 0
 4072              		@ frame_needed = 0, uses_anonymous_args = 0
 4073              		@ link register save eliminated.
 4074              	.LVL239:
2731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4075              		.loc 1 2731 0
 4076              		@ sp needed
 4077 0000 7047     		bx	lr
 4078              		.cfi_endproc
 4079              	.LFE339:
 4081 0002 C046     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4082              		.align	2
 4083              		.global	HAL_UART_AbortTransmit_IT
 4084              		.code	16
 4085              		.thumb_func
 4087              	HAL_UART_AbortTransmit_IT:
 4088              	.LFB330:
2120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable interrupts */
 4089              		.loc 1 2120 0
 4090              		.cfi_startproc
 4091              		@ args = 0, pretend = 0, frame = 0
 4092              		@ frame_needed = 0, uses_anonymous_args = 0
 4093              	.LVL240:
 4094 0000 10B5     		push	{r4, lr}
 4095              	.LCFI23:
 4096              		.cfi_def_cfa_offset 8
 4097              		.cfi_offset 4, -8
 4098              		.cfi_offset 14, -4
 4099 0002 0400     		movs	r4, r0
 4100              	.LBB1033:
 4101              	.LBB1034:
 4102              	.LBB1035:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4103              		.loc 2 453 0
 4104              		.syntax divided
 4105              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4106 0004 EFF31081 		MRS r1, primask
 4107              	@ 0 "" 2
 4108              	.LVL241:
 4109              		.thumb
 4110              		.syntax unified
 4111              	.LBE1035:
 4112              	.LBE1034:
 4113              	.LBB1036:
 4114              	.LBB1037:
 4115              		.loc 2 481 0
 4116 0008 0123     		movs	r3, #1
 4117              		.syntax divided
 4118              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4119 000a 83F31088 		MSR primask, r3
 4120              	@ 0 "" 2
 4121              	.LVL242:
ARM GAS  /tmp/cceLjgLz.s 			page 161


 4122              		.thumb
 4123              		.syntax unified
 4124              	.LBE1037:
 4125              	.LBE1036:
2122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 4126              		.loc 1 2122 0
 4127 000e 0268     		ldr	r2, [r0]
 4128 0010 1368     		ldr	r3, [r2]
 4129 0012 C020     		movs	r0, #192
 4130              	.LVL243:
 4131 0014 8343     		bics	r3, r0
 4132 0016 1360     		str	r3, [r2]
 4133              	.LBB1038:
 4134              	.LBB1039:
 4135              		.loc 2 481 0
 4136              		.syntax divided
 4137              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4138 0018 81F31088 		MSR primask, r1
 4139              	@ 0 "" 2
 4140              		.thumb
 4141              		.syntax unified
 4142              	.LBE1039:
 4143              	.LBE1038:
 4144              	.LBE1033:
 4145              	.LBB1040:
 4146              	.LBB1041:
 4147              	.LBB1042:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4148              		.loc 2 453 0
 4149              		.syntax divided
 4150              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4151 001c EFF31081 		MRS r1, primask
 4152              	@ 0 "" 2
 4153              	.LVL244:
 4154              		.thumb
 4155              		.syntax unified
 4156              	.LBE1042:
 4157              	.LBE1041:
 4158              	.LBB1043:
 4159              	.LBB1044:
 4160              		.loc 2 481 0
 4161 0020 0123     		movs	r3, #1
 4162              		.syntax divided
 4163              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4164 0022 83F31088 		MSR primask, r3
 4165              	@ 0 "" 2
 4166              	.LVL245:
 4167              		.thumb
 4168              		.syntax unified
 4169              	.LBE1044:
 4170              	.LBE1043:
2123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4171              		.loc 1 2123 0
 4172 0026 2268     		ldr	r2, [r4]
 4173 0028 9068     		ldr	r0, [r2, #8]
 4174 002a 214B     		ldr	r3, .L139
 4175 002c 0340     		ands	r3, r0
ARM GAS  /tmp/cceLjgLz.s 			page 162


 4176 002e 9360     		str	r3, [r2, #8]
 4177              	.LBB1045:
 4178              	.LBB1046:
 4179              		.loc 2 481 0
 4180              		.syntax divided
 4181              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4182 0030 81F31088 		MSR primask, r1
 4183              	@ 0 "" 2
 4184              		.thumb
 4185              		.syntax unified
 4186              	.LBE1046:
 4187              	.LBE1045:
 4188              	.LBE1040:
2126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 4189              		.loc 1 2126 0
 4190 0034 2368     		ldr	r3, [r4]
 4191 0036 9A68     		ldr	r2, [r3, #8]
 4192 0038 1206     		lsls	r2, r2, #24
 4193 003a 24D5     		bpl	.L135
 4194              	.LBB1047:
 4195              	.LBB1048:
 4196              	.LBB1049:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4197              		.loc 2 453 0
 4198              		.syntax divided
 4199              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4200 003c EFF31081 		MRS r1, primask
 4201              	@ 0 "" 2
 4202              	.LVL246:
 4203              		.thumb
 4204              		.syntax unified
 4205              	.LBE1049:
 4206              	.LBE1048:
 4207              	.LBB1050:
 4208              	.LBB1051:
 4209              		.loc 2 481 0
 4210 0040 0123     		movs	r3, #1
 4211              		.syntax divided
 4212              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4213 0042 83F31088 		MSR primask, r3
 4214              	@ 0 "" 2
 4215              	.LVL247:
 4216              		.thumb
 4217              		.syntax unified
 4218              	.LBE1051:
 4219              	.LBE1050:
2129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4220              		.loc 1 2129 0
 4221 0046 2268     		ldr	r2, [r4]
 4222 0048 9368     		ldr	r3, [r2, #8]
 4223 004a 8020     		movs	r0, #128
 4224 004c 8343     		bics	r3, r0
 4225 004e 9360     		str	r3, [r2, #8]
 4226              	.LBB1052:
 4227              	.LBB1053:
 4228              		.loc 2 481 0
 4229              		.syntax divided
ARM GAS  /tmp/cceLjgLz.s 			page 163


 4230              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4231 0050 81F31088 		MSR primask, r1
 4232              	@ 0 "" 2
 4233              		.thumb
 4234              		.syntax unified
 4235              	.LBE1053:
 4236              	.LBE1052:
 4237              	.LBE1047:
2132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4238              		.loc 1 2132 0
 4239 0054 E36F     		ldr	r3, [r4, #124]
 4240 0056 002B     		cmp	r3, #0
 4241 0058 0AD0     		beq	.L136
2136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4242              		.loc 1 2136 0
 4243 005a 164A     		ldr	r2, .L139+4
 4244 005c 9A63     		str	r2, [r3, #56]
2139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 4245              		.loc 1 2139 0
 4246 005e E06F     		ldr	r0, [r4, #124]
 4247 0060 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4248              	.LVL248:
 4249 0064 0028     		cmp	r0, #0
 4250 0066 21D0     		beq	.L137
2142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 4251              		.loc 1 2142 0
 4252 0068 E06F     		ldr	r0, [r4, #124]
 4253 006a 836B     		ldr	r3, [r0, #56]
 4254 006c 9847     		blx	r3
 4255              	.LVL249:
 4256 006e 1DE0     		b	.L137
 4257              	.L136:
2148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4258              		.loc 1 2148 0
 4259 0070 0023     		movs	r3, #0
 4260 0072 5622     		movs	r2, #86
 4261 0074 A352     		strh	r3, [r4, r2]
2151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4262              		.loc 1 2151 0
 4263 0076 A367     		str	r3, [r4, #120]
2154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4264              		.loc 1 2154 0
 4265 0078 363A     		subs	r2, r2, #54
 4266 007a 8833     		adds	r3, r3, #136
 4267 007c E250     		str	r2, [r4, r3]
2162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4268              		.loc 1 2162 0
 4269 007e 2000     		movs	r0, r4
 4270 0080 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4271              	.LVL250:
 4272 0084 12E0     		b	.L137
 4273              	.L135:
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4274              		.loc 1 2169 0
 4275 0086 0022     		movs	r2, #0
 4276 0088 5621     		movs	r1, #86
 4277 008a 6252     		strh	r2, [r4, r1]
ARM GAS  /tmp/cceLjgLz.s 			page 164


2172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4278              		.loc 1 2172 0
 4279 008c A267     		str	r2, [r4, #120]
2175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4280              		.loc 1 2175 0
 4281 008e 8022     		movs	r2, #128
 4282 0090 9205     		lsls	r2, r2, #22
 4283 0092 616E     		ldr	r1, [r4, #100]
 4284 0094 9142     		cmp	r1, r2
 4285 0096 03D1     		bne	.L138
2177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 4286              		.loc 1 2177 0
 4287 0098 9969     		ldr	r1, [r3, #24]
 4288 009a 1022     		movs	r2, #16
 4289 009c 0A43     		orrs	r2, r1
 4290 009e 9A61     		str	r2, [r3, #24]
 4291              	.L138:
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4292              		.loc 1 2181 0
 4293 00a0 2022     		movs	r2, #32
 4294 00a2 8823     		movs	r3, #136
 4295 00a4 E250     		str	r2, [r4, r3]
2189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4296              		.loc 1 2189 0
 4297 00a6 2000     		movs	r0, r4
 4298 00a8 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4299              	.LVL251:
 4300              	.L137:
2194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4301              		.loc 1 2194 0
 4302 00ac 0020     		movs	r0, #0
 4303              		@ sp needed
 4304              	.LVL252:
 4305 00ae 10BD     		pop	{r4, pc}
 4306              	.L140:
 4307              		.align	2
 4308              	.L139:
 4309 00b0 FFFF7FFF 		.word	-8388609
 4310 00b4 00000000 		.word	UART_DMATxOnlyAbortCallback
 4311              		.cfi_endproc
 4312              	.LFE330:
 4314              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 4315              		.align	2
 4316              		.code	16
 4317              		.thumb_func
 4319              	UART_DMATxOnlyAbortCallback:
 4320              	.LFB369:
3993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 4321              		.loc 1 3993 0
 4322              		.cfi_startproc
 4323              		@ args = 0, pretend = 0, frame = 0
 4324              		@ frame_needed = 0, uses_anonymous_args = 0
 4325              	.LVL253:
 4326 0000 10B5     		push	{r4, lr}
 4327              	.LCFI24:
 4328              		.cfi_def_cfa_offset 8
 4329              		.cfi_offset 4, -8
ARM GAS  /tmp/cceLjgLz.s 			page 165


 4330              		.cfi_offset 14, -4
3994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4331              		.loc 1 3994 0
 4332 0002 806A     		ldr	r0, [r0, #40]
 4333              	.LVL254:
3996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4334              		.loc 1 3996 0
 4335 0004 0022     		movs	r2, #0
 4336 0006 5623     		movs	r3, #86
 4337 0008 C252     		strh	r2, [r0, r3]
3999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 4338              		.loc 1 3999 0
 4339 000a 8023     		movs	r3, #128
 4340 000c 9B05     		lsls	r3, r3, #22
 4341 000e 426E     		ldr	r2, [r0, #100]
 4342 0010 9A42     		cmp	r2, r3
 4343 0012 04D1     		bne	.L142
4001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 4344              		.loc 1 4001 0
 4345 0014 0268     		ldr	r2, [r0]
 4346 0016 9169     		ldr	r1, [r2, #24]
 4347 0018 1023     		movs	r3, #16
 4348 001a 0B43     		orrs	r3, r1
 4349 001c 9361     		str	r3, [r2, #24]
 4350              	.L142:
4005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4351              		.loc 1 4005 0
 4352 001e 2022     		movs	r2, #32
 4353 0020 8823     		movs	r3, #136
 4354 0022 C250     		str	r2, [r0, r3]
4013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4355              		.loc 1 4013 0
 4356 0024 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4357              	.LVL255:
4015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4358              		.loc 1 4015 0
 4359              		@ sp needed
 4360 0028 10BD     		pop	{r4, pc}
 4361              		.cfi_endproc
 4362              	.LFE369:
 4364 002a C046     		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4365              		.align	2
 4366              		.weak	HAL_UART_AbortReceiveCpltCallback
 4367              		.code	16
 4368              		.thumb_func
 4370              	HAL_UART_AbortReceiveCpltCallback:
 4371              	.LFB340:
2739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 4372              		.loc 1 2739 0
 4373              		.cfi_startproc
 4374              		@ args = 0, pretend = 0, frame = 0
 4375              		@ frame_needed = 0, uses_anonymous_args = 0
 4376              		@ link register save eliminated.
 4377              	.LVL256:
2746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4378              		.loc 1 2746 0
 4379              		@ sp needed
ARM GAS  /tmp/cceLjgLz.s 			page 166


 4380 0000 7047     		bx	lr
 4381              		.cfi_endproc
 4382              	.LFE340:
 4384 0002 C046     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4385              		.align	2
 4386              		.global	HAL_UART_AbortReceive_IT
 4387              		.code	16
 4388              		.thumb_func
 4390              	HAL_UART_AbortReceive_IT:
 4391              	.LFB331:
2211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 4392              		.loc 1 2211 0
 4393              		.cfi_startproc
 4394              		@ args = 0, pretend = 0, frame = 0
 4395              		@ frame_needed = 0, uses_anonymous_args = 0
 4396              	.LVL257:
 4397 0000 10B5     		push	{r4, lr}
 4398              	.LCFI25:
 4399              		.cfi_def_cfa_offset 8
 4400              		.cfi_offset 4, -8
 4401              		.cfi_offset 14, -4
 4402 0002 0400     		movs	r4, r0
 4403              	.LBB1054:
 4404              	.LBB1055:
 4405              	.LBB1056:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4406              		.loc 2 453 0
 4407              		.syntax divided
 4408              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4409 0004 EFF31081 		MRS r1, primask
 4410              	@ 0 "" 2
 4411              	.LVL258:
 4412              		.thumb
 4413              		.syntax unified
 4414              	.LBE1056:
 4415              	.LBE1055:
 4416              	.LBB1057:
 4417              	.LBB1058:
 4418              		.loc 2 481 0
 4419 0008 0123     		movs	r3, #1
 4420              		.syntax divided
 4421              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4422 000a 83F31088 		MSR primask, r3
 4423              	@ 0 "" 2
 4424              	.LVL259:
 4425              		.thumb
 4426              		.syntax unified
 4427              	.LBE1058:
 4428              	.LBE1057:
2213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 4429              		.loc 1 2213 0
 4430 000e 0268     		ldr	r2, [r0]
 4431 0010 1068     		ldr	r0, [r2]
 4432              	.LVL260:
 4433 0012 314B     		ldr	r3, .L149
 4434 0014 0340     		ands	r3, r0
 4435 0016 1360     		str	r3, [r2]
ARM GAS  /tmp/cceLjgLz.s 			page 167


 4436              	.LBB1059:
 4437              	.LBB1060:
 4438              		.loc 2 481 0
 4439              		.syntax divided
 4440              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4441 0018 81F31088 		MSR primask, r1
 4442              	@ 0 "" 2
 4443              		.thumb
 4444              		.syntax unified
 4445              	.LBE1060:
 4446              	.LBE1059:
 4447              	.LBE1054:
 4448              	.LBB1061:
 4449              	.LBB1062:
 4450              	.LBB1063:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4451              		.loc 2 453 0
 4452              		.syntax divided
 4453              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4454 001c EFF31081 		MRS r1, primask
 4455              	@ 0 "" 2
 4456              	.LVL261:
 4457              		.thumb
 4458              		.syntax unified
 4459              	.LBE1063:
 4460              	.LBE1062:
 4461              	.LBB1064:
 4462              	.LBB1065:
 4463              		.loc 2 481 0
 4464 0020 0123     		movs	r3, #1
 4465              		.syntax divided
 4466              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4467 0022 83F31088 		MSR primask, r3
 4468              	@ 0 "" 2
 4469              	.LVL262:
 4470              		.thumb
 4471              		.syntax unified
 4472              	.LBE1065:
 4473              	.LBE1064:
2214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4474              		.loc 1 2214 0
 4475 0026 2268     		ldr	r2, [r4]
 4476 0028 9068     		ldr	r0, [r2, #8]
 4477 002a 2C4B     		ldr	r3, .L149+4
 4478 002c 0340     		ands	r3, r0
 4479 002e 9360     		str	r3, [r2, #8]
 4480              	.LBB1066:
 4481              	.LBB1067:
 4482              		.loc 2 481 0
 4483              		.syntax divided
 4484              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4485 0030 81F31088 		MSR primask, r1
 4486              	@ 0 "" 2
 4487              		.thumb
 4488              		.syntax unified
 4489              	.LBE1067:
 4490              	.LBE1066:
ARM GAS  /tmp/cceLjgLz.s 			page 168


 4491              	.LBE1061:
2217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 4492              		.loc 1 2217 0
 4493 0034 E36E     		ldr	r3, [r4, #108]
 4494 0036 012B     		cmp	r3, #1
 4495 0038 0AD1     		bne	.L145
 4496              	.LBB1068:
 4497              	.LBB1069:
 4498              	.LBB1070:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4499              		.loc 2 453 0
 4500              		.syntax divided
 4501              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4502 003a EFF31081 		MRS r1, primask
 4503              	@ 0 "" 2
 4504              	.LVL263:
 4505              		.thumb
 4506              		.syntax unified
 4507              	.LBE1070:
 4508              	.LBE1069:
 4509              	.LBB1071:
 4510              	.LBB1072:
 4511              		.loc 2 481 0
 4512              		.syntax divided
 4513              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4514 003e 83F31088 		MSR primask, r3
 4515              	@ 0 "" 2
 4516              	.LVL264:
 4517              		.thumb
 4518              		.syntax unified
 4519              	.LBE1072:
 4520              	.LBE1071:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 4521              		.loc 1 2219 0
 4522 0042 2268     		ldr	r2, [r4]
 4523 0044 1368     		ldr	r3, [r2]
 4524 0046 1020     		movs	r0, #16
 4525 0048 8343     		bics	r3, r0
 4526 004a 1360     		str	r3, [r2]
 4527              	.LBB1073:
 4528              	.LBB1074:
 4529              		.loc 2 481 0
 4530              		.syntax divided
 4531              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4532 004c 81F31088 		MSR primask, r1
 4533              	@ 0 "" 2
 4534              		.thumb
 4535              		.syntax unified
 4536              	.L145:
 4537              	.LBE1074:
 4538              	.LBE1073:
 4539              	.LBE1068:
2223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 4540              		.loc 1 2223 0
 4541 0050 2368     		ldr	r3, [r4]
 4542 0052 9A68     		ldr	r2, [r3, #8]
 4543 0054 5206     		lsls	r2, r2, #25
ARM GAS  /tmp/cceLjgLz.s 			page 169


 4544 0056 30D5     		bpl	.L146
 4545              	.LBB1075:
 4546              	.LBB1076:
 4547              	.LBB1077:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4548              		.loc 2 453 0
 4549              		.syntax divided
 4550              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4551 0058 EFF31081 		MRS r1, primask
 4552              	@ 0 "" 2
 4553              	.LVL265:
 4554              		.thumb
 4555              		.syntax unified
 4556              	.LBE1077:
 4557              	.LBE1076:
 4558              	.LBB1078:
 4559              	.LBB1079:
 4560              		.loc 2 481 0
 4561 005c 0123     		movs	r3, #1
 4562              		.syntax divided
 4563              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4564 005e 83F31088 		MSR primask, r3
 4565              	@ 0 "" 2
 4566              	.LVL266:
 4567              		.thumb
 4568              		.syntax unified
 4569              	.LBE1079:
 4570              	.LBE1078:
2226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4571              		.loc 1 2226 0
 4572 0062 2268     		ldr	r2, [r4]
 4573 0064 9368     		ldr	r3, [r2, #8]
 4574 0066 4020     		movs	r0, #64
 4575 0068 8343     		bics	r3, r0
 4576 006a 9360     		str	r3, [r2, #8]
 4577              	.LBB1080:
 4578              	.LBB1081:
 4579              		.loc 2 481 0
 4580              		.syntax divided
 4581              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4582 006c 81F31088 		MSR primask, r1
 4583              	@ 0 "" 2
 4584              		.thumb
 4585              		.syntax unified
 4586              	.LBE1081:
 4587              	.LBE1080:
 4588              	.LBE1075:
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4589              		.loc 1 2229 0
 4590 0070 8023     		movs	r3, #128
 4591 0072 E358     		ldr	r3, [r4, r3]
 4592 0074 002B     		cmp	r3, #0
 4593 0076 0CD0     		beq	.L147
2233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4594              		.loc 1 2233 0
 4595 0078 194A     		ldr	r2, .L149+8
 4596 007a 9A63     		str	r2, [r3, #56]
ARM GAS  /tmp/cceLjgLz.s 			page 170


2236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 4597              		.loc 1 2236 0
 4598 007c 8023     		movs	r3, #128
 4599 007e E058     		ldr	r0, [r4, r3]
 4600 0080 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4601              	.LVL267:
 4602 0084 0028     		cmp	r0, #0
 4603 0086 25D0     		beq	.L148
2239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 4604              		.loc 1 2239 0
 4605 0088 8023     		movs	r3, #128
 4606 008a E058     		ldr	r0, [r4, r3]
 4607 008c 836B     		ldr	r3, [r0, #56]
 4608 008e 9847     		blx	r3
 4609              	.LVL268:
 4610 0090 20E0     		b	.L148
 4611              	.L147:
2245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4612              		.loc 1 2245 0
 4613 0092 0023     		movs	r3, #0
 4614 0094 5E22     		movs	r2, #94
 4615 0096 A352     		strh	r3, [r4, r2]
2248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4616              		.loc 1 2248 0
 4617 0098 A365     		str	r3, [r4, #88]
2251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4618              		.loc 1 2251 0
 4619 009a 2268     		ldr	r2, [r4]
 4620 009c 0F21     		movs	r1, #15
 4621 009e 1162     		str	r1, [r2, #32]
2254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4622              		.loc 1 2254 0
 4623 00a0 2168     		ldr	r1, [r4]
 4624 00a2 8869     		ldr	r0, [r1, #24]
 4625 00a4 0822     		movs	r2, #8
 4626 00a6 0243     		orrs	r2, r0
 4627 00a8 8A61     		str	r2, [r1, #24]
2257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4628              		.loc 1 2257 0
 4629 00aa 2021     		movs	r1, #32
 4630 00ac 8C22     		movs	r2, #140
 4631 00ae A150     		str	r1, [r4, r2]
2258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4632              		.loc 1 2258 0
 4633 00b0 E366     		str	r3, [r4, #108]
2266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4634              		.loc 1 2266 0
 4635 00b2 2000     		movs	r0, r4
 4636 00b4 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4637              	.LVL269:
 4638 00b8 0CE0     		b	.L148
 4639              	.L146:
2273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4640              		.loc 1 2273 0
 4641 00ba 0022     		movs	r2, #0
 4642 00bc 5E21     		movs	r1, #94
 4643 00be 6252     		strh	r2, [r4, r1]
ARM GAS  /tmp/cceLjgLz.s 			page 171


2276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4644              		.loc 1 2276 0
 4645 00c0 A265     		str	r2, [r4, #88]
2279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4646              		.loc 1 2279 0
 4647 00c2 4F39     		subs	r1, r1, #79
 4648 00c4 1962     		str	r1, [r3, #32]
2282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4649              		.loc 1 2282 0
 4650 00c6 1131     		adds	r1, r1, #17
 4651 00c8 8C23     		movs	r3, #140
 4652 00ca E150     		str	r1, [r4, r3]
2283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4653              		.loc 1 2283 0
 4654 00cc E266     		str	r2, [r4, #108]
2291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4655              		.loc 1 2291 0
 4656 00ce 2000     		movs	r0, r4
 4657 00d0 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4658              	.LVL270:
 4659              	.L148:
2296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4660              		.loc 1 2296 0
 4661 00d4 0020     		movs	r0, #0
 4662              		@ sp needed
 4663              	.LVL271:
 4664 00d6 10BD     		pop	{r4, pc}
 4665              	.L150:
 4666              		.align	2
 4667              	.L149:
 4668 00d8 DFFEFFFF 		.word	-289
 4669 00dc FEFFFFEF 		.word	-268435458
 4670 00e0 00000000 		.word	UART_DMARxOnlyAbortCallback
 4671              		.cfi_endproc
 4672              	.LFE331:
 4674              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 4675              		.align	2
 4676              		.code	16
 4677              		.thumb_func
 4679              	UART_DMARxOnlyAbortCallback:
 4680              	.LFB370:
4026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4681              		.loc 1 4026 0
 4682              		.cfi_startproc
 4683              		@ args = 0, pretend = 0, frame = 0
 4684              		@ frame_needed = 0, uses_anonymous_args = 0
 4685              	.LVL272:
 4686 0000 10B5     		push	{r4, lr}
 4687              	.LCFI26:
 4688              		.cfi_def_cfa_offset 8
 4689              		.cfi_offset 4, -8
 4690              		.cfi_offset 14, -4
4027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4691              		.loc 1 4027 0
 4692 0002 806A     		ldr	r0, [r0, #40]
 4693              	.LVL273:
4029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 172


 4694              		.loc 1 4029 0
 4695 0004 0022     		movs	r2, #0
 4696 0006 5E23     		movs	r3, #94
 4697 0008 C252     		strh	r2, [r0, r3]
4032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4698              		.loc 1 4032 0
 4699 000a 0368     		ldr	r3, [r0]
 4700 000c 0F21     		movs	r1, #15
 4701 000e 1962     		str	r1, [r3, #32]
4035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4702              		.loc 1 4035 0
 4703 0010 0168     		ldr	r1, [r0]
 4704 0012 8C69     		ldr	r4, [r1, #24]
 4705 0014 0823     		movs	r3, #8
 4706 0016 2343     		orrs	r3, r4
 4707 0018 8B61     		str	r3, [r1, #24]
4038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4708              		.loc 1 4038 0
 4709 001a 2021     		movs	r1, #32
 4710 001c 8C23     		movs	r3, #140
 4711 001e C150     		str	r1, [r0, r3]
4039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4712              		.loc 1 4039 0
 4713 0020 C266     		str	r2, [r0, #108]
4047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4714              		.loc 1 4047 0
 4715 0022 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4716              	.LVL274:
4049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4717              		.loc 1 4049 0
 4718              		@ sp needed
 4719 0026 10BD     		pop	{r4, pc}
 4720              		.cfi_endproc
 4721              	.LFE370:
 4723              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 4724              		.align	2
 4725              		.weak	HAL_UARTEx_RxEventCallback
 4726              		.code	16
 4727              		.thumb_func
 4729              	HAL_UARTEx_RxEventCallback:
 4730              	.LFB341:
2756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 4731              		.loc 1 2756 0
 4732              		.cfi_startproc
 4733              		@ args = 0, pretend = 0, frame = 0
 4734              		@ frame_needed = 0, uses_anonymous_args = 0
 4735              		@ link register save eliminated.
 4736              	.LVL275:
2764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4737              		.loc 1 2764 0
 4738              		@ sp needed
 4739 0000 7047     		bx	lr
 4740              		.cfi_endproc
 4741              	.LFE341:
 4743 0002 C046     		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4744              		.align	2
 4745              		.global	HAL_UART_IRQHandler
ARM GAS  /tmp/cceLjgLz.s 			page 173


 4746              		.code	16
 4747              		.thumb_func
 4749              	HAL_UART_IRQHandler:
 4750              	.LFB332:
2304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4751              		.loc 1 2304 0
 4752              		.cfi_startproc
 4753              		@ args = 0, pretend = 0, frame = 0
 4754              		@ frame_needed = 0, uses_anonymous_args = 0
 4755              	.LVL276:
 4756 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4757              	.LCFI27:
 4758              		.cfi_def_cfa_offset 24
 4759              		.cfi_offset 3, -24
 4760              		.cfi_offset 4, -20
 4761              		.cfi_offset 5, -16
 4762              		.cfi_offset 6, -12
 4763              		.cfi_offset 7, -8
 4764              		.cfi_offset 14, -4
 4765 0002 0400     		movs	r4, r0
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4766              		.loc 1 2305 0
 4767 0004 0168     		ldr	r1, [r0]
 4768 0006 CB69     		ldr	r3, [r1, #28]
 4769              	.LVL277:
2306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 4770              		.loc 1 2306 0
 4771 0008 0868     		ldr	r0, [r1]
 4772              	.LVL278:
2307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4773              		.loc 1 2307 0
 4774 000a 8D68     		ldr	r5, [r1, #8]
 4775              	.LVL279:
2313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (errorflags == 0U)
 4776              		.loc 1 2313 0
 4777 000c BA4A     		ldr	r2, .L179
 4778 000e 1A40     		ands	r2, r3
 4779              	.LVL280:
2314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 4780              		.loc 1 2314 0
 4781 0010 0CD1     		bne	.L154
2317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 4782              		.loc 1 2317 0
 4783 0012 9E06     		lsls	r6, r3, #26
 4784 0014 0AD5     		bpl	.L154
2318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 4785              		.loc 1 2318 0
 4786 0016 8606     		lsls	r6, r0, #26
 4787 0018 01D4     		bmi	.L155
2319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4788              		.loc 1 2319 0
 4789 001a EE00     		lsls	r6, r5, #3
 4790 001c 06D5     		bpl	.L154
 4791              	.L155:
2321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 4792              		.loc 1 2321 0
 4793 001e 636F     		ldr	r3, [r4, #116]
ARM GAS  /tmp/cceLjgLz.s 			page 174


 4794              	.LVL281:
 4795 0020 002B     		cmp	r3, #0
 4796 0022 00D1     		bne	.LCB3457
 4797 0024 66E1     		b	.L153	@long jump
 4798              	.LCB3457:
2323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 4799              		.loc 1 2323 0
 4800 0026 2000     		movs	r0, r4
 4801              	.LVL282:
 4802 0028 9847     		blx	r3
 4803              	.LVL283:
 4804 002a 63E1     		b	.L153
 4805              	.LVL284:
 4806              	.L154:
2330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 4807              		.loc 1 2330 0
 4808 002c 002A     		cmp	r2, #0
 4809 002e 00D1     		bne	.LCB3472
 4810 0030 8FE0     		b	.L157	@long jump
 4811              	.LCB3472:
2331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 4812              		.loc 1 2331 0
 4813 0032 B24A     		ldr	r2, .L179+4
 4814              	.LVL285:
 4815 0034 2A40     		ands	r2, r5
 4816 0036 03D1     		bne	.L158
2332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 4817              		.loc 1 2332 0
 4818 0038 B14E     		ldr	r6, .L179+8
 4819 003a 3042     		tst	r0, r6
 4820 003c 00D1     		bne	.LCB3481
 4821 003e 88E0     		b	.L157	@long jump
 4822              	.LCB3481:
 4823              	.L158:
2335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4824              		.loc 1 2335 0
 4825 0040 DE07     		lsls	r6, r3, #31
 4826 0042 07D5     		bpl	.L159
2335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4827              		.loc 1 2335 0 is_stmt 0 discriminator 1
 4828 0044 C605     		lsls	r6, r0, #23
 4829 0046 05D5     		bpl	.L159
2337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4830              		.loc 1 2337 0 is_stmt 1
 4831 0048 0126     		movs	r6, #1
 4832 004a 0E62     		str	r6, [r1, #32]
2339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 4833              		.loc 1 2339 0
 4834 004c 9021     		movs	r1, #144
 4835 004e 6758     		ldr	r7, [r4, r1]
 4836 0050 3E43     		orrs	r6, r7
 4837 0052 6650     		str	r6, [r4, r1]
 4838              	.L159:
2343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4839              		.loc 1 2343 0
 4840 0054 9907     		lsls	r1, r3, #30
 4841 0056 09D5     		bpl	.L160
ARM GAS  /tmp/cceLjgLz.s 			page 175


2343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4842              		.loc 1 2343 0 is_stmt 0 discriminator 1
 4843 0058 E907     		lsls	r1, r5, #31
 4844 005a 07D5     		bpl	.L160
2345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4845              		.loc 1 2345 0 is_stmt 1
 4846 005c 2168     		ldr	r1, [r4]
 4847 005e 0226     		movs	r6, #2
 4848 0060 0E62     		str	r6, [r1, #32]
2347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 4849              		.loc 1 2347 0
 4850 0062 8E36     		adds	r6, r6, #142
 4851 0064 A759     		ldr	r7, [r4, r6]
 4852 0066 0421     		movs	r1, #4
 4853 0068 3943     		orrs	r1, r7
 4854 006a A151     		str	r1, [r4, r6]
 4855              	.L160:
2351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4856              		.loc 1 2351 0
 4857 006c 5907     		lsls	r1, r3, #29
 4858 006e 09D5     		bpl	.L161
2351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4859              		.loc 1 2351 0 is_stmt 0 discriminator 1
 4860 0070 E907     		lsls	r1, r5, #31
 4861 0072 07D5     		bpl	.L161
2353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4862              		.loc 1 2353 0 is_stmt 1
 4863 0074 2168     		ldr	r1, [r4]
 4864 0076 0426     		movs	r6, #4
 4865 0078 0E62     		str	r6, [r1, #32]
2355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 4866              		.loc 1 2355 0
 4867 007a 8C36     		adds	r6, r6, #140
 4868 007c A759     		ldr	r7, [r4, r6]
 4869 007e 0221     		movs	r1, #2
 4870 0080 3943     		orrs	r1, r7
 4871 0082 A151     		str	r1, [r4, r6]
 4872              	.L161:
2359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 4873              		.loc 1 2359 0
 4874 0084 1907     		lsls	r1, r3, #28
 4875 0086 0AD5     		bpl	.L162
2360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 4876              		.loc 1 2360 0
 4877 0088 8106     		lsls	r1, r0, #26
 4878 008a 01D4     		bmi	.L163
2360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 4879              		.loc 1 2360 0 is_stmt 0 discriminator 1
 4880 008c 002A     		cmp	r2, #0
 4881 008e 06D0     		beq	.L162
 4882              	.L163:
2363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4883              		.loc 1 2363 0 is_stmt 1
 4884 0090 2168     		ldr	r1, [r4]
 4885 0092 0822     		movs	r2, #8
 4886 0094 0A62     		str	r2, [r1, #32]
2365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
ARM GAS  /tmp/cceLjgLz.s 			page 176


 4887              		.loc 1 2365 0
 4888 0096 9021     		movs	r1, #144
 4889 0098 6658     		ldr	r6, [r4, r1]
 4890 009a 3243     		orrs	r2, r6
 4891 009c 6250     		str	r2, [r4, r1]
 4892              	.L162:
2369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4893              		.loc 1 2369 0
 4894 009e 1A05     		lsls	r2, r3, #20
 4895 00a0 0AD5     		bpl	.L164
2369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4896              		.loc 1 2369 0 is_stmt 0 discriminator 1
 4897 00a2 4201     		lsls	r2, r0, #5
 4898 00a4 08D5     		bpl	.L164
2371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4899              		.loc 1 2371 0 is_stmt 1
 4900 00a6 2268     		ldr	r2, [r4]
 4901 00a8 8021     		movs	r1, #128
 4902 00aa 0901     		lsls	r1, r1, #4
 4903 00ac 1162     		str	r1, [r2, #32]
2373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 4904              		.loc 1 2373 0
 4905 00ae 9021     		movs	r1, #144
 4906 00b0 6658     		ldr	r6, [r4, r1]
 4907 00b2 2022     		movs	r2, #32
 4908 00b4 3243     		orrs	r2, r6
 4909 00b6 6250     		str	r2, [r4, r1]
 4910              	.L164:
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 4911              		.loc 1 2377 0
 4912 00b8 9022     		movs	r2, #144
 4913 00ba A258     		ldr	r2, [r4, r2]
 4914 00bc 002A     		cmp	r2, #0
 4915 00be 00D1     		bne	.LCB3582
 4916 00c0 18E1     		b	.L153	@long jump
 4917              	.LCB3582:
2380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 4918              		.loc 1 2380 0
 4919 00c2 9B06     		lsls	r3, r3, #26
 4920 00c4 08D5     		bpl	.L165
 4921              	.LVL286:
2381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 4922              		.loc 1 2381 0
 4923 00c6 8306     		lsls	r3, r0, #26
 4924 00c8 01D4     		bmi	.L166
2382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 4925              		.loc 1 2382 0
 4926 00ca EB00     		lsls	r3, r5, #3
 4927 00cc 04D5     		bpl	.L165
 4928              	.L166:
2384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 4929              		.loc 1 2384 0
 4930 00ce 636F     		ldr	r3, [r4, #116]
 4931 00d0 002B     		cmp	r3, #0
 4932 00d2 01D0     		beq	.L165
2386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 4933              		.loc 1 2386 0
ARM GAS  /tmp/cceLjgLz.s 			page 177


 4934 00d4 2000     		movs	r0, r4
 4935              	.LVL287:
 4936 00d6 9847     		blx	r3
 4937              	.LVL288:
 4938              	.L165:
2395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 4939              		.loc 1 2395 0
 4940 00d8 9023     		movs	r3, #144
 4941 00da E258     		ldr	r2, [r4, r3]
 4942              	.LVL289:
2396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 4943              		.loc 1 2396 0
 4944 00dc 2368     		ldr	r3, [r4]
 4945 00de 9B68     		ldr	r3, [r3, #8]
 4946 00e0 5B06     		lsls	r3, r3, #25
 4947 00e2 02D4     		bmi	.L167
2397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 4948              		.loc 1 2397 0 discriminator 1
 4949 00e4 2823     		movs	r3, #40
2396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 4950              		.loc 1 2396 0 discriminator 1
 4951 00e6 1342     		tst	r3, r2
 4952 00e8 2CD0     		beq	.L168
 4953              	.L167:
2402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4954              		.loc 1 2402 0
 4955 00ea 2000     		movs	r0, r4
 4956 00ec FFF7FEFF 		bl	UART_EndRxTransfer
 4957              	.LVL290:
2405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 4958              		.loc 1 2405 0
 4959 00f0 2368     		ldr	r3, [r4]
 4960 00f2 9B68     		ldr	r3, [r3, #8]
 4961 00f4 5B06     		lsls	r3, r3, #25
 4962 00f6 21D5     		bpl	.L169
 4963              	.LBB1082:
 4964              	.LBB1083:
 4965              	.LBB1084:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4966              		.loc 2 453 0
 4967              		.syntax divided
 4968              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4969 00f8 EFF31081 		MRS r1, primask
 4970              	@ 0 "" 2
 4971              	.LVL291:
 4972              		.thumb
 4973              		.syntax unified
 4974              	.LBE1084:
 4975              	.LBE1083:
 4976              	.LBB1085:
 4977              	.LBB1086:
 4978              		.loc 2 481 0
 4979 00fc 0123     		movs	r3, #1
 4980              		.syntax divided
 4981              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4982 00fe 83F31088 		MSR primask, r3
 4983              	@ 0 "" 2
ARM GAS  /tmp/cceLjgLz.s 			page 178


 4984              	.LVL292:
 4985              		.thumb
 4986              		.syntax unified
 4987              	.LBE1086:
 4988              	.LBE1085:
2408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 4989              		.loc 1 2408 0
 4990 0102 2268     		ldr	r2, [r4]
 4991 0104 9368     		ldr	r3, [r2, #8]
 4992 0106 4020     		movs	r0, #64
 4993 0108 8343     		bics	r3, r0
 4994 010a 9360     		str	r3, [r2, #8]
 4995              	.LBB1087:
 4996              	.LBB1088:
 4997              		.loc 2 481 0
 4998              		.syntax divided
 4999              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5000 010c 81F31088 		MSR primask, r1
 5001              	@ 0 "" 2
 5002              		.thumb
 5003              		.syntax unified
 5004              	.LBE1088:
 5005              	.LBE1087:
 5006              	.LBE1082:
2411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           {
 5007              		.loc 1 2411 0
 5008 0110 8023     		movs	r3, #128
 5009 0112 E358     		ldr	r3, [r4, r3]
 5010 0114 002B     		cmp	r3, #0
 5011 0116 0DD0     		beq	.L170
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5012              		.loc 1 2415 0
 5013 0118 7A4A     		ldr	r2, .L179+12
 5014 011a 9A63     		str	r2, [r3, #56]
2418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             {
 5015              		.loc 1 2418 0
 5016 011c 8023     		movs	r3, #128
 5017 011e E058     		ldr	r0, [r4, r3]
 5018 0120 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5019              	.LVL293:
 5020 0124 0028     		cmp	r0, #0
 5021 0126 00D1     		bne	.LCB3668
 5022 0128 E4E0     		b	.L153	@long jump
 5023              	.LCB3668:
2421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             }
 5024              		.loc 1 2421 0
 5025 012a 8023     		movs	r3, #128
 5026 012c E058     		ldr	r0, [r4, r3]
 5027 012e 836B     		ldr	r3, [r0, #56]
 5028 0130 9847     		blx	r3
 5029              	.LVL294:
 5030 0132 DFE0     		b	.L153
 5031              	.L170:
2432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5032              		.loc 1 2432 0
 5033 0134 2000     		movs	r0, r4
 5034 0136 FFF7FEFF 		bl	HAL_UART_ErrorCallback
ARM GAS  /tmp/cceLjgLz.s 			page 179


 5035              	.LVL295:
 5036 013a DBE0     		b	.L153
 5037              	.L169:
2445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5038              		.loc 1 2445 0
 5039 013c 2000     		movs	r0, r4
 5040 013e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5041              	.LVL296:
 5042 0142 D7E0     		b	.L153
 5043              	.LVL297:
 5044              	.L168:
2458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5045              		.loc 1 2458 0
 5046 0144 2000     		movs	r0, r4
 5047 0146 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5048              	.LVL298:
2460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 5049              		.loc 1 2460 0
 5050 014a 0022     		movs	r2, #0
 5051 014c 9023     		movs	r3, #144
 5052 014e E250     		str	r2, [r4, r3]
 5053 0150 D0E0     		b	.L153
 5054              	.LVL299:
 5055              	.L157:
2469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
 5056              		.loc 1 2469 0
 5057 0152 E26E     		ldr	r2, [r4, #108]
 5058 0154 012A     		cmp	r2, #1
 5059 0156 00D0     		beq	.LCB3714
 5060 0158 9EE0     		b	.L171	@long jump
 5061              	.LCB3714:
2470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
 5062              		.loc 1 2470 0
 5063 015a DA06     		lsls	r2, r3, #27
 5064 015c 00D4     		bmi	.LCB3718
 5065 015e 9BE0     		b	.L171	@long jump
 5066              	.LCB3718:
2471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 5067              		.loc 1 2471 0
 5068 0160 C206     		lsls	r2, r0, #27
 5069 0162 00D4     		bmi	.LCB3722
 5070 0164 98E0     		b	.L171	@long jump
 5071              	.LCB3722:
2473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5072              		.loc 1 2473 0
 5073 0166 1023     		movs	r3, #16
 5074              	.LVL300:
 5075 0168 0B62     		str	r3, [r1, #32]
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 5076              		.loc 1 2476 0
 5077 016a 2368     		ldr	r3, [r4]
 5078 016c 9B68     		ldr	r3, [r3, #8]
 5079 016e 5B06     		lsls	r3, r3, #25
 5080 0170 56D5     		bpl	.L172
 5081              	.LBB1089:
2482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 5082              		.loc 1 2482 0
ARM GAS  /tmp/cceLjgLz.s 			page 180


 5083 0172 8023     		movs	r3, #128
 5084 0174 E258     		ldr	r2, [r4, r3]
 5085 0176 1368     		ldr	r3, [r2]
 5086 0178 5B68     		ldr	r3, [r3, #4]
 5087 017a 9BB2     		uxth	r3, r3
 5088              	.LVL301:
2483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 5089              		.loc 1 2483 0
 5090 017c 002B     		cmp	r3, #0
 5091 017e 00D1     		bne	.LCB3741
 5092 0180 B8E0     		b	.L153	@long jump
 5093              	.LCB3741:
2484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 5094              		.loc 1 2484 0
 5095 0182 5C21     		movs	r1, #92
 5096 0184 615A     		ldrh	r1, [r4, r1]
 5097 0186 8B42     		cmp	r3, r1
 5098 0188 00D3     		bcc	.LCB3745
 5099 018a B3E0     		b	.L153	@long jump
 5100              	.LCB3745:
2487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5101              		.loc 1 2487 0
 5102 018c 5E21     		movs	r1, #94
 5103 018e 6352     		strh	r3, [r4, r1]
2490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 5104              		.loc 1 2490 0
 5105 0190 1368     		ldr	r3, [r2]
 5106              	.LVL302:
 5107 0192 1B68     		ldr	r3, [r3]
 5108 0194 9B06     		lsls	r3, r3, #26
 5109 0196 37D4     		bmi	.L173
 5110              	.LBB1090:
 5111              	.LBB1091:
 5112              	.LBB1092:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5113              		.loc 2 453 0
 5114              		.syntax divided
 5115              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5116 0198 EFF31080 		MRS r0, primask
 5117              	@ 0 "" 2
 5118              	.LVL303:
 5119              		.thumb
 5120              		.syntax unified
 5121              	.LBE1092:
 5122              	.LBE1091:
 5123              	.LBB1093:
 5124              	.LBB1094:
 5125              		.loc 2 481 0
 5126 019c 5D39     		subs	r1, r1, #93
 5127              	.LVL304:
 5128              		.syntax divided
 5129              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5130 019e 81F31088 		MSR primask, r1
 5131              	@ 0 "" 2
 5132              	.LVL305:
 5133              		.thumb
 5134              		.syntax unified
ARM GAS  /tmp/cceLjgLz.s 			page 181


 5135              	.LBE1094:
 5136              	.LBE1093:
2493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5137              		.loc 1 2493 0
 5138 01a2 2268     		ldr	r2, [r4]
 5139 01a4 1568     		ldr	r5, [r2]
 5140              	.LVL306:
 5141 01a6 584B     		ldr	r3, .L179+16
 5142 01a8 2B40     		ands	r3, r5
 5143 01aa 1360     		str	r3, [r2]
 5144              	.LVL307:
 5145              	.LBB1095:
 5146              	.LBB1096:
 5147              		.loc 2 481 0
 5148              		.syntax divided
 5149              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5150 01ac 80F31088 		MSR primask, r0
 5151              	@ 0 "" 2
 5152              		.thumb
 5153              		.syntax unified
 5154              	.LBE1096:
 5155              	.LBE1095:
 5156              	.LBE1090:
 5157              	.LBB1097:
 5158              	.LBB1098:
 5159              	.LBB1099:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5160              		.loc 2 453 0
 5161              		.syntax divided
 5162              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5163 01b0 EFF31080 		MRS r0, primask
 5164              	@ 0 "" 2
 5165              	.LVL308:
 5166              		.thumb
 5167              		.syntax unified
 5168              	.LBE1099:
 5169              	.LBE1098:
 5170              	.LBB1100:
 5171              	.LBB1101:
 5172              		.loc 2 481 0
 5173 01b4 0123     		movs	r3, #1
 5174              		.syntax divided
 5175              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5176 01b6 83F31088 		MSR primask, r3
 5177              	@ 0 "" 2
 5178              	.LVL309:
 5179              		.thumb
 5180              		.syntax unified
 5181              	.LBE1101:
 5182              	.LBE1100:
2494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5183              		.loc 1 2494 0
 5184 01ba 2268     		ldr	r2, [r4]
 5185 01bc 9368     		ldr	r3, [r2, #8]
 5186 01be 8B43     		bics	r3, r1
 5187 01c0 9360     		str	r3, [r2, #8]
 5188              	.LBB1102:
ARM GAS  /tmp/cceLjgLz.s 			page 182


 5189              	.LBB1103:
 5190              		.loc 2 481 0
 5191              		.syntax divided
 5192              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5193 01c2 80F31088 		MSR primask, r0
 5194              	@ 0 "" 2
 5195              		.thumb
 5196              		.syntax unified
 5197              	.LBE1103:
 5198              	.LBE1102:
 5199              	.LBE1097:
 5200              	.LBB1104:
 5201              	.LBB1105:
 5202              	.LBB1106:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5203              		.loc 2 453 0
 5204              		.syntax divided
 5205              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5206 01c6 EFF31081 		MRS r1, primask
 5207              	@ 0 "" 2
 5208              	.LVL310:
 5209              		.thumb
 5210              		.syntax unified
 5211              	.LBE1106:
 5212              	.LBE1105:
 5213              	.LBB1107:
 5214              	.LBB1108:
 5215              		.loc 2 481 0
 5216 01ca 0123     		movs	r3, #1
 5217              		.syntax divided
 5218              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5219 01cc 83F31088 		MSR primask, r3
 5220              	@ 0 "" 2
 5221              	.LVL311:
 5222              		.thumb
 5223              		.syntax unified
 5224              	.LBE1108:
 5225              	.LBE1107:
2498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5226              		.loc 1 2498 0
 5227 01d0 2268     		ldr	r2, [r4]
 5228 01d2 9368     		ldr	r3, [r2, #8]
 5229 01d4 4020     		movs	r0, #64
 5230 01d6 8343     		bics	r3, r0
 5231 01d8 9360     		str	r3, [r2, #8]
 5232              	.LBB1109:
 5233              	.LBB1110:
 5234              		.loc 2 481 0
 5235              		.syntax divided
 5236              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5237 01da 81F31088 		MSR primask, r1
 5238              	@ 0 "" 2
 5239              		.thumb
 5240              		.syntax unified
 5241              	.LBE1110:
 5242              	.LBE1109:
 5243              	.LBE1104:
ARM GAS  /tmp/cceLjgLz.s 			page 183


2501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5244              		.loc 1 2501 0
 5245 01de 2022     		movs	r2, #32
 5246 01e0 8C23     		movs	r3, #140
 5247 01e2 E250     		str	r2, [r4, r3]
2502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5248              		.loc 1 2502 0
 5249 01e4 0023     		movs	r3, #0
 5250 01e6 E366     		str	r3, [r4, #108]
 5251              	.LBB1111:
 5252              	.LBB1112:
 5253              	.LBB1113:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5254              		.loc 2 453 0
 5255              		.syntax divided
 5256              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5257 01e8 EFF31081 		MRS r1, primask
 5258              	@ 0 "" 2
 5259              	.LVL312:
 5260              		.thumb
 5261              		.syntax unified
 5262              	.LBE1113:
 5263              	.LBE1112:
 5264              	.LBB1114:
 5265              	.LBB1115:
 5266              		.loc 2 481 0
 5267 01ec 0133     		adds	r3, r3, #1
 5268              		.syntax divided
 5269              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5270 01ee 83F31088 		MSR primask, r3
 5271              	@ 0 "" 2
 5272              	.LVL313:
 5273              		.thumb
 5274              		.syntax unified
 5275              	.LBE1115:
 5276              	.LBE1114:
2504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5277              		.loc 1 2504 0
 5278 01f2 2268     		ldr	r2, [r4]
 5279 01f4 1368     		ldr	r3, [r2]
 5280 01f6 3038     		subs	r0, r0, #48
 5281 01f8 8343     		bics	r3, r0
 5282 01fa 1360     		str	r3, [r2]
 5283              	.LBB1116:
 5284              	.LBB1117:
 5285              		.loc 2 481 0
 5286              		.syntax divided
 5287              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5288 01fc 81F31088 		MSR primask, r1
 5289              	@ 0 "" 2
 5290              		.thumb
 5291              		.syntax unified
 5292              	.LBE1117:
 5293              	.LBE1116:
 5294              	.LBE1111:
2507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 5295              		.loc 1 2507 0
ARM GAS  /tmp/cceLjgLz.s 			page 184


 5296 0200 8023     		movs	r3, #128
 5297 0202 E058     		ldr	r0, [r4, r3]
 5298 0204 FFF7FEFF 		bl	HAL_DMA_Abort
 5299              	.LVL314:
 5300              	.L173:
2512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5301              		.loc 1 2512 0
 5302 0208 0223     		movs	r3, #2
 5303 020a 2367     		str	r3, [r4, #112]
2519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5304              		.loc 1 2519 0
 5305 020c 5A33     		adds	r3, r3, #90
 5306 020e E35A     		ldrh	r3, [r4, r3]
 5307 0210 5E22     		movs	r2, #94
 5308 0212 A15A     		ldrh	r1, [r4, r2]
 5309 0214 591A     		subs	r1, r3, r1
 5310 0216 89B2     		uxth	r1, r1
 5311 0218 2000     		movs	r0, r4
 5312 021a FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5313              	.LVL315:
 5314 021e 69E0     		b	.L153
 5315              	.LVL316:
 5316              	.L172:
 5317              	.LBE1089:
 5318              	.LBB1118:
2529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 5319              		.loc 1 2529 0
 5320 0220 5C23     		movs	r3, #92
 5321 0222 E35A     		ldrh	r3, [r4, r3]
 5322 0224 5E22     		movs	r2, #94
 5323 0226 A15A     		ldrh	r1, [r4, r2]
 5324 0228 591A     		subs	r1, r3, r1
 5325 022a 89B2     		uxth	r1, r1
 5326              	.LVL317:
2530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           && (nb_rx_data > 0U))
 5327              		.loc 1 2530 0
 5328 022c A35A     		ldrh	r3, [r4, r2]
 5329 022e 9BB2     		uxth	r3, r3
 5330 0230 002B     		cmp	r3, #0
 5331 0232 5FD0     		beq	.L153
2531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 5332              		.loc 1 2531 0
 5333 0234 0029     		cmp	r1, #0
 5334 0236 5DD0     		beq	.L153
 5335              	.LBB1119:
 5336              	.LBB1120:
 5337              	.LBB1121:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5338              		.loc 2 453 0
 5339              		.syntax divided
 5340              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5341 0238 EFF31080 		MRS r0, primask
 5342              	@ 0 "" 2
 5343              	.LVL318:
 5344              		.thumb
 5345              		.syntax unified
 5346              	.LBE1121:
ARM GAS  /tmp/cceLjgLz.s 			page 185


 5347              	.LBE1120:
 5348              	.LBB1122:
 5349              	.LBB1123:
 5350              		.loc 2 481 0
 5351 023c 0123     		movs	r3, #1
 5352              		.syntax divided
 5353              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5354 023e 83F31088 		MSR primask, r3
 5355              	@ 0 "" 2
 5356              	.LVL319:
 5357              		.thumb
 5358              		.syntax unified
 5359              	.LBE1123:
 5360              	.LBE1122:
2534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5361              		.loc 1 2534 0
 5362 0242 2268     		ldr	r2, [r4]
 5363 0244 1568     		ldr	r5, [r2]
 5364              	.LVL320:
 5365 0246 314B     		ldr	r3, .L179+20
 5366 0248 2B40     		ands	r3, r5
 5367 024a 1360     		str	r3, [r2]
 5368              	.LBB1124:
 5369              	.LBB1125:
 5370              		.loc 2 481 0
 5371              		.syntax divided
 5372              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5373 024c 80F31088 		MSR primask, r0
 5374              	@ 0 "" 2
 5375              		.thumb
 5376              		.syntax unified
 5377              	.LBE1125:
 5378              	.LBE1124:
 5379              	.LBE1119:
 5380              	.LBB1126:
 5381              	.LBB1127:
 5382              	.LBB1128:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5383              		.loc 2 453 0
 5384              		.syntax divided
 5385              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5386 0250 EFF31080 		MRS r0, primask
 5387              	@ 0 "" 2
 5388              	.LVL321:
 5389              		.thumb
 5390              		.syntax unified
 5391              	.LBE1128:
 5392              	.LBE1127:
 5393              	.LBB1129:
 5394              	.LBB1130:
 5395              		.loc 2 481 0
 5396 0254 0123     		movs	r3, #1
 5397              		.syntax divided
 5398              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5399 0256 83F31088 		MSR primask, r3
 5400              	@ 0 "" 2
 5401              	.LVL322:
ARM GAS  /tmp/cceLjgLz.s 			page 186


 5402              		.thumb
 5403              		.syntax unified
 5404              	.LBE1130:
 5405              	.LBE1129:
2537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5406              		.loc 1 2537 0
 5407 025a 2268     		ldr	r2, [r4]
 5408 025c 9568     		ldr	r5, [r2, #8]
 5409 025e 2C4B     		ldr	r3, .L179+24
 5410 0260 2B40     		ands	r3, r5
 5411 0262 9360     		str	r3, [r2, #8]
 5412              	.LBB1131:
 5413              	.LBB1132:
 5414              		.loc 2 481 0
 5415              		.syntax divided
 5416              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5417 0264 80F31088 		MSR primask, r0
 5418              	@ 0 "" 2
 5419              		.thumb
 5420              		.syntax unified
 5421              	.LBE1132:
 5422              	.LBE1131:
 5423              	.LBE1126:
2540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5424              		.loc 1 2540 0
 5425 0268 2022     		movs	r2, #32
 5426 026a 8C23     		movs	r3, #140
 5427 026c E250     		str	r2, [r4, r3]
2541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5428              		.loc 1 2541 0
 5429 026e 0023     		movs	r3, #0
 5430 0270 E366     		str	r3, [r4, #108]
2544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5431              		.loc 1 2544 0
 5432 0272 6367     		str	r3, [r4, #116]
 5433              	.LBB1133:
 5434              	.LBB1134:
 5435              	.LBB1135:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5436              		.loc 2 453 0
 5437              		.syntax divided
 5438              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5439 0274 EFF31080 		MRS r0, primask
 5440              	@ 0 "" 2
 5441              	.LVL323:
 5442              		.thumb
 5443              		.syntax unified
 5444              	.LBE1135:
 5445              	.LBE1134:
 5446              	.LBB1136:
 5447              	.LBB1137:
 5448              		.loc 2 481 0
 5449 0278 0133     		adds	r3, r3, #1
 5450              		.syntax divided
 5451              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5452 027a 83F31088 		MSR primask, r3
 5453              	@ 0 "" 2
ARM GAS  /tmp/cceLjgLz.s 			page 187


 5454              	.LVL324:
 5455              		.thumb
 5456              		.syntax unified
 5457              	.LBE1137:
 5458              	.LBE1136:
2546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5459              		.loc 1 2546 0
 5460 027e 2268     		ldr	r2, [r4]
 5461 0280 1368     		ldr	r3, [r2]
 5462 0282 1025     		movs	r5, #16
 5463 0284 AB43     		bics	r3, r5
 5464 0286 1360     		str	r3, [r2]
 5465              	.LBB1138:
 5466              	.LBB1139:
 5467              		.loc 2 481 0
 5468              		.syntax divided
 5469              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5470 0288 80F31088 		MSR primask, r0
 5471              	@ 0 "" 2
 5472              		.thumb
 5473              		.syntax unified
 5474              	.LBE1139:
 5475              	.LBE1138:
 5476              	.LBE1133:
2550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5477              		.loc 1 2550 0
 5478 028c 0223     		movs	r3, #2
 5479 028e 2367     		str	r3, [r4, #112]
2557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5480              		.loc 1 2557 0
 5481 0290 2000     		movs	r0, r4
 5482 0292 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5483              	.LVL325:
 5484 0296 2DE0     		b	.L153
 5485              	.LVL326:
 5486              	.L171:
 5487              	.LBE1118:
2565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 5488              		.loc 1 2565 0
 5489 0298 DA02     		lsls	r2, r3, #11
 5490 029a 08D5     		bpl	.L174
2565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 5491              		.loc 1 2565 0 is_stmt 0 discriminator 1
 5492 029c 6A02     		lsls	r2, r5, #9
 5493 029e 06D5     		bpl	.L174
2567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5494              		.loc 1 2567 0 is_stmt 1
 5495 02a0 8023     		movs	r3, #128
 5496              	.LVL327:
 5497 02a2 5B03     		lsls	r3, r3, #13
 5498 02a4 0B62     		str	r3, [r1, #32]
2577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5499              		.loc 1 2577 0
 5500 02a6 2000     		movs	r0, r4
 5501              	.LVL328:
 5502 02a8 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 5503              	.LVL329:
ARM GAS  /tmp/cceLjgLz.s 			page 188


2579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 5504              		.loc 1 2579 0
 5505 02ac 22E0     		b	.L153
 5506              	.LVL330:
 5507              	.L174:
2583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 5508              		.loc 1 2583 0
 5509 02ae 1A06     		lsls	r2, r3, #24
 5510 02b0 09D5     		bpl	.L175
2584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 5511              		.loc 1 2584 0
 5512 02b2 0206     		lsls	r2, r0, #24
 5513 02b4 01D4     		bmi	.L176
2585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 5514              		.loc 1 2585 0
 5515 02b6 2A02     		lsls	r2, r5, #8
 5516 02b8 05D5     		bpl	.L175
 5517              	.L176:
2587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 5518              		.loc 1 2587 0
 5519 02ba A36F     		ldr	r3, [r4, #120]
 5520              	.LVL331:
 5521 02bc 002B     		cmp	r3, #0
 5522 02be 19D0     		beq	.L153
2589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 5523              		.loc 1 2589 0
 5524 02c0 2000     		movs	r0, r4
 5525              	.LVL332:
 5526 02c2 9847     		blx	r3
 5527              	.LVL333:
 5528 02c4 16E0     		b	.L153
 5529              	.LVL334:
 5530              	.L175:
2595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 5531              		.loc 1 2595 0
 5532 02c6 5A06     		lsls	r2, r3, #25
 5533 02c8 05D5     		bpl	.L177
2595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 5534              		.loc 1 2595 0 is_stmt 0 discriminator 1
 5535 02ca 4206     		lsls	r2, r0, #25
 5536 02cc 03D5     		bpl	.L177
2597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     return;
 5537              		.loc 1 2597 0 is_stmt 1
 5538 02ce 2000     		movs	r0, r4
 5539              	.LVL335:
 5540 02d0 FFF7FEFF 		bl	UART_EndTransmit_IT
 5541              	.LVL336:
2598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 5542              		.loc 1 2598 0
 5543 02d4 0EE0     		b	.L153
 5544              	.LVL337:
 5545              	.L177:
2602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 5546              		.loc 1 2602 0
 5547 02d6 1A02     		lsls	r2, r3, #8
 5548 02d8 05D5     		bpl	.L178
2602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
ARM GAS  /tmp/cceLjgLz.s 			page 189


 5549              		.loc 1 2602 0 is_stmt 0 discriminator 1
 5550 02da 4200     		lsls	r2, r0, #1
 5551 02dc 03D5     		bpl	.L178
2609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5552              		.loc 1 2609 0 is_stmt 1
 5553 02de 2000     		movs	r0, r4
 5554              	.LVL338:
 5555 02e0 FFF7FEFF 		bl	HAL_UARTEx_TxFifoEmptyCallback
 5556              	.LVL339:
2611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 5557              		.loc 1 2611 0
 5558 02e4 06E0     		b	.L153
 5559              	.LVL340:
 5560              	.L178:
2615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 5561              		.loc 1 2615 0
 5562 02e6 DB01     		lsls	r3, r3, #7
 5563 02e8 04D5     		bpl	.L153
 5564              	.LVL341:
2615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 5565              		.loc 1 2615 0 is_stmt 0 discriminator 1
 5566 02ea 0028     		cmp	r0, #0
 5567 02ec 02DA     		bge	.L153
2622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5568              		.loc 1 2622 0 is_stmt 1
 5569 02ee 2000     		movs	r0, r4
 5570              	.LVL342:
 5571 02f0 FFF7FEFF 		bl	HAL_UARTEx_RxFifoFullCallback
 5572              	.LVL343:
 5573              	.L153:
2626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 5574              		.loc 1 2626 0
 5575              		@ sp needed
 5576              	.LVL344:
 5577 02f4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5578              	.L180:
 5579 02f6 C046     		.align	2
 5580              	.L179:
 5581 02f8 0F080000 		.word	2063
 5582 02fc 01000010 		.word	268435457
 5583 0300 20010004 		.word	67109152
 5584 0304 00000000 		.word	UART_DMAAbortOnError
 5585 0308 FFFEFFFF 		.word	-257
 5586 030c DFFEFFFF 		.word	-289
 5587 0310 FEFFFFEF 		.word	-268435458
 5588              		.cfi_endproc
 5589              	.LFE332:
 5591              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 5592              		.align	2
 5593              		.code	16
 5594              		.thumb_func
 5596              	UART_RxISR_8BIT:
 5597              	.LFB376:
4219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
4221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8 bits data word length .
4222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/cceLjgLz.s 			page 190


4223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
4224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
4225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
4226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 5598              		.loc 1 4226 0
 5599              		.cfi_startproc
 5600              		@ args = 0, pretend = 0, frame = 0
 5601              		@ frame_needed = 0, uses_anonymous_args = 0
 5602              	.LVL345:
 5603 0000 70B5     		push	{r4, r5, r6, lr}
 5604              	.LCFI28:
 5605              		.cfi_def_cfa_offset 16
 5606              		.cfi_offset 4, -16
 5607              		.cfi_offset 5, -12
 5608              		.cfi_offset 6, -8
 5609              		.cfi_offset 14, -4
4227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 5610              		.loc 1 4227 0
 5611 0002 6023     		movs	r3, #96
 5612 0004 C35A     		ldrh	r3, [r0, r3]
 5613              	.LVL346:
4228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  uhdata;
4229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 5614              		.loc 1 4231 0
 5615 0006 8C22     		movs	r2, #140
 5616 0008 8258     		ldr	r2, [r0, r2]
 5617 000a 222A     		cmp	r2, #34
 5618 000c 4CD1     		bne	.L182
4232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
4233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 5619              		.loc 1 4233 0
 5620 000e 0268     		ldr	r2, [r0]
 5621 0010 526A     		ldr	r2, [r2, #36]
 5622              	.LVL347:
4234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 5623              		.loc 1 4234 0
 5624 0012 DBB2     		uxtb	r3, r3
 5625              	.LVL348:
 5626 0014 1340     		ands	r3, r2
 5627 0016 826D     		ldr	r2, [r0, #88]
 5628              	.LVL349:
 5629 0018 1370     		strb	r3, [r2]
 5630              	.LVL350:
4235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pRxBuffPtr++;
 5631              		.loc 1 4235 0
 5632 001a 836D     		ldr	r3, [r0, #88]
 5633 001c 0133     		adds	r3, r3, #1
 5634 001e 8365     		str	r3, [r0, #88]
4236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount--;
 5635              		.loc 1 4236 0
 5636 0020 5E22     		movs	r2, #94
 5637 0022 835A     		ldrh	r3, [r0, r2]
 5638 0024 013B     		subs	r3, r3, #1
 5639 0026 9BB2     		uxth	r3, r3
 5640 0028 8352     		strh	r3, [r0, r2]
ARM GAS  /tmp/cceLjgLz.s 			page 191


4237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 5641              		.loc 1 4238 0
 5642 002a 835A     		ldrh	r3, [r0, r2]
 5643 002c 9BB2     		uxth	r3, r3
 5644 002e 002B     		cmp	r3, #0
 5645 0030 3FD1     		bne	.L181
 5646              	.LBB1140:
 5647              	.LBB1141:
 5648              	.LBB1142:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5649              		.loc 2 453 0
 5650              		.syntax divided
 5651              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5652 0032 EFF31084 		MRS r4, primask
 5653              	@ 0 "" 2
 5654              	.LVL351:
 5655              		.thumb
 5656              		.syntax unified
 5657              	.LBE1142:
 5658              	.LBE1141:
 5659              	.LBB1143:
 5660              	.LBB1144:
 5661              		.loc 2 481 0
 5662 0036 0121     		movs	r1, #1
 5663              		.syntax divided
 5664              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5665 0038 81F31088 		MSR primask, r1
 5666              	@ 0 "" 2
 5667              	.LVL352:
 5668              		.thumb
 5669              		.syntax unified
 5670              	.LBE1144:
 5671              	.LBE1143:
4239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
4240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
4241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 5672              		.loc 1 4241 0
 5673 003c 0268     		ldr	r2, [r0]
 5674 003e 1568     		ldr	r5, [r2]
 5675 0040 1C4B     		ldr	r3, .L186
 5676 0042 2B40     		ands	r3, r5
 5677 0044 1360     		str	r3, [r2]
 5678              	.LBB1145:
 5679              	.LBB1146:
 5680              		.loc 2 481 0
 5681              		.syntax divided
 5682              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5683 0046 84F31088 		MSR primask, r4
 5684              	@ 0 "" 2
 5685              		.thumb
 5686              		.syntax unified
 5687              	.LBE1146:
 5688              	.LBE1145:
 5689              	.LBE1140:
 5690              	.LBB1147:
 5691              	.LBB1148:
ARM GAS  /tmp/cceLjgLz.s 			page 192


 5692              	.LBB1149:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5693              		.loc 2 453 0
 5694              		.syntax divided
 5695              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5696 004a EFF31084 		MRS r4, primask
 5697              	@ 0 "" 2
 5698              	.LVL353:
 5699              		.thumb
 5700              		.syntax unified
 5701              	.LBE1149:
 5702              	.LBE1148:
 5703              	.LBB1150:
 5704              	.LBB1151:
 5705              		.loc 2 481 0
 5706 004e 0123     		movs	r3, #1
 5707              		.syntax divided
 5708              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5709 0050 83F31088 		MSR primask, r3
 5710              	@ 0 "" 2
 5711              	.LVL354:
 5712              		.thumb
 5713              		.syntax unified
 5714              	.LBE1151:
 5715              	.LBE1150:
4242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5716              		.loc 1 4244 0
 5717 0054 0268     		ldr	r2, [r0]
 5718 0056 9368     		ldr	r3, [r2, #8]
 5719 0058 8B43     		bics	r3, r1
 5720 005a 9360     		str	r3, [r2, #8]
 5721              	.LBB1152:
 5722              	.LBB1153:
 5723              		.loc 2 481 0
 5724              		.syntax divided
 5725              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5726 005c 84F31088 		MSR primask, r4
 5727              	@ 0 "" 2
 5728              		.thumb
 5729              		.syntax unified
 5730              	.LBE1153:
 5731              	.LBE1152:
 5732              	.LBE1147:
4245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5733              		.loc 1 4247 0
 5734 0060 2022     		movs	r2, #32
 5735 0062 8C23     		movs	r3, #140
 5736 0064 C250     		str	r2, [r0, r3]
4248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Clear RxISR function pointer */
4250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxISR = NULL;
 5737              		.loc 1 4250 0
 5738 0066 0023     		movs	r3, #0
ARM GAS  /tmp/cceLjgLz.s 			page 193


 5739 0068 4367     		str	r3, [r0, #116]
4251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
4253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
 5740              		.loc 1 4253 0
 5741 006a 0367     		str	r3, [r0, #112]
4254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Check current reception Mode :
4256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5742              		.loc 1 4257 0
 5743 006c C36E     		ldr	r3, [r0, #108]
 5744 006e 012B     		cmp	r3, #1
 5745 0070 17D1     		bne	.L184
4258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
4259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Set reception type to Standard */
4260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5746              		.loc 1 4260 0
 5747 0072 0023     		movs	r3, #0
 5748 0074 C366     		str	r3, [r0, #108]
 5749              	.LBB1154:
 5750              	.LBB1155:
 5751              	.LBB1156:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5752              		.loc 2 453 0
 5753              		.syntax divided
 5754              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5755 0076 EFF31084 		MRS r4, primask
 5756              	@ 0 "" 2
 5757              	.LVL355:
 5758              		.thumb
 5759              		.syntax unified
 5760              	.LBE1156:
 5761              	.LBE1155:
 5762              	.LBB1157:
 5763              	.LBB1158:
 5764              		.loc 2 481 0
 5765 007a 0133     		adds	r3, r3, #1
 5766              		.syntax divided
 5767              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5768 007c 83F31088 		MSR primask, r3
 5769              	@ 0 "" 2
 5770              	.LVL356:
 5771              		.thumb
 5772              		.syntax unified
 5773              	.LBE1158:
 5774              	.LBE1157:
4261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable IDLE interrupt */
4263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5775              		.loc 1 4263 0
 5776 0080 0168     		ldr	r1, [r0]
 5777 0082 0B68     		ldr	r3, [r1]
 5778 0084 103A     		subs	r2, r2, #16
 5779 0086 9343     		bics	r3, r2
 5780 0088 0B60     		str	r3, [r1]
 5781              	.LBB1159:
ARM GAS  /tmp/cceLjgLz.s 			page 194


 5782              	.LBB1160:
 5783              		.loc 2 481 0
 5784              		.syntax divided
 5785              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5786 008a 84F31088 		MSR primask, r4
 5787              	@ 0 "" 2
 5788              		.thumb
 5789              		.syntax unified
 5790              	.LBE1160:
 5791              	.LBE1159:
 5792              	.LBE1154:
4264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 5793              		.loc 1 4265 0
 5794 008e 0368     		ldr	r3, [r0]
 5795 0090 D969     		ldr	r1, [r3, #28]
 5796 0092 0A42     		tst	r2, r1
 5797 0094 00D0     		beq	.L185
4266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Clear IDLE Flag */
4268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 5798              		.loc 1 4268 0
 5799 0096 1A62     		str	r2, [r3, #32]
 5800              	.L185:
4269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
4275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 5801              		.loc 1 4276 0
 5802 0098 5C23     		movs	r3, #92
 5803 009a C15A     		ldrh	r1, [r0, r3]
 5804 009c FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5805              	.LVL357:
 5806 00a0 07E0     		b	.L181
 5807              	.LVL358:
 5808              	.L184:
4277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
4280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
4281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Standard reception API called */
4282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
4286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 5809              		.loc 1 4287 0
 5810 00a2 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 5811              	.LVL359:
 5812 00a6 04E0     		b	.L181
 5813              	.LVL360:
 5814              	.L182:
ARM GAS  /tmp/cceLjgLz.s 			page 195


4288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
4291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
4292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
4293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
4294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 5815              		.loc 1 4295 0
 5816 00a8 0268     		ldr	r2, [r0]
 5817 00aa 9169     		ldr	r1, [r2, #24]
 5818 00ac 0823     		movs	r3, #8
 5819              	.LVL361:
 5820 00ae 0B43     		orrs	r3, r1
 5821 00b0 9361     		str	r3, [r2, #24]
 5822              	.LVL362:
 5823              	.L181:
4296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
4297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 5824              		.loc 1 4297 0
 5825              		@ sp needed
 5826 00b2 70BD     		pop	{r4, r5, r6, pc}
 5827              	.L187:
 5828              		.align	2
 5829              	.L186:
 5830 00b4 DFFEFFFF 		.word	-289
 5831              		.cfi_endproc
 5832              	.LFE376:
 5834              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 5835              		.align	2
 5836              		.code	16
 5837              		.thumb_func
 5839              	UART_RxISR_16BIT:
 5840              	.LFB377:
4298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
4300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length .
4301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
4304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
4305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
4306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
4307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 5841              		.loc 1 4307 0
 5842              		.cfi_startproc
 5843              		@ args = 0, pretend = 0, frame = 0
 5844              		@ frame_needed = 0, uses_anonymous_args = 0
 5845              	.LVL363:
 5846 0000 70B5     		push	{r4, r5, r6, lr}
 5847              	.LCFI29:
 5848              		.cfi_def_cfa_offset 16
 5849              		.cfi_offset 4, -16
 5850              		.cfi_offset 5, -12
 5851              		.cfi_offset 6, -8
 5852              		.cfi_offset 14, -4
4308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t *tmp;
ARM GAS  /tmp/cceLjgLz.s 			page 196


4309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 5853              		.loc 1 4309 0
 5854 0002 6023     		movs	r3, #96
 5855 0004 C25A     		ldrh	r2, [r0, r3]
 5856              	.LVL364:
4310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  uhdata;
4311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 5857              		.loc 1 4313 0
 5858 0006 2C33     		adds	r3, r3, #44
 5859 0008 C358     		ldr	r3, [r0, r3]
 5860 000a 222B     		cmp	r3, #34
 5861 000c 4BD1     		bne	.L189
4314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
4315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 5862              		.loc 1 4315 0
 5863 000e 0368     		ldr	r3, [r0]
 5864 0010 5B6A     		ldr	r3, [r3, #36]
 5865              	.LVL365:
4316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
4317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 5866              		.loc 1 4317 0
 5867 0012 1A40     		ands	r2, r3
 5868              	.LVL366:
 5869 0014 836D     		ldr	r3, [r0, #88]
 5870              	.LVL367:
 5871 0016 1A80     		strh	r2, [r3]
 5872              	.LVL368:
4318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 5873              		.loc 1 4318 0
 5874 0018 836D     		ldr	r3, [r0, #88]
 5875              	.LVL369:
 5876 001a 0233     		adds	r3, r3, #2
 5877 001c 8365     		str	r3, [r0, #88]
4319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount--;
 5878              		.loc 1 4319 0
 5879 001e 5E22     		movs	r2, #94
 5880 0020 835A     		ldrh	r3, [r0, r2]
 5881 0022 013B     		subs	r3, r3, #1
 5882 0024 9BB2     		uxth	r3, r3
 5883 0026 8352     		strh	r3, [r0, r2]
4320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 5884              		.loc 1 4321 0
 5885 0028 835A     		ldrh	r3, [r0, r2]
 5886 002a 9BB2     		uxth	r3, r3
 5887 002c 002B     		cmp	r3, #0
 5888 002e 3FD1     		bne	.L188
 5889              	.LBB1161:
 5890              	.LBB1162:
 5891              	.LBB1163:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5892              		.loc 2 453 0
 5893              		.syntax divided
 5894              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5895 0030 EFF31084 		MRS r4, primask
ARM GAS  /tmp/cceLjgLz.s 			page 197


 5896              	@ 0 "" 2
 5897              	.LVL370:
 5898              		.thumb
 5899              		.syntax unified
 5900              	.LBE1163:
 5901              	.LBE1162:
 5902              	.LBB1164:
 5903              	.LBB1165:
 5904              		.loc 2 481 0
 5905 0034 0121     		movs	r1, #1
 5906              		.syntax divided
 5907              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5908 0036 81F31088 		MSR primask, r1
 5909              	@ 0 "" 2
 5910              	.LVL371:
 5911              		.thumb
 5912              		.syntax unified
 5913              	.LBE1165:
 5914              	.LBE1164:
4322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
4323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
4324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 5915              		.loc 1 4324 0
 5916 003a 0268     		ldr	r2, [r0]
 5917 003c 1568     		ldr	r5, [r2]
 5918 003e 1D4B     		ldr	r3, .L193
 5919 0040 2B40     		ands	r3, r5
 5920 0042 1360     		str	r3, [r2]
 5921              	.LBB1166:
 5922              	.LBB1167:
 5923              		.loc 2 481 0
 5924              		.syntax divided
 5925              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5926 0044 84F31088 		MSR primask, r4
 5927              	@ 0 "" 2
 5928              		.thumb
 5929              		.syntax unified
 5930              	.LBE1167:
 5931              	.LBE1166:
 5932              	.LBE1161:
 5933              	.LBB1168:
 5934              	.LBB1169:
 5935              	.LBB1170:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5936              		.loc 2 453 0
 5937              		.syntax divided
 5938              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5939 0048 EFF31084 		MRS r4, primask
 5940              	@ 0 "" 2
 5941              	.LVL372:
 5942              		.thumb
 5943              		.syntax unified
 5944              	.LBE1170:
 5945              	.LBE1169:
 5946              	.LBB1171:
 5947              	.LBB1172:
 5948              		.loc 2 481 0
ARM GAS  /tmp/cceLjgLz.s 			page 198


 5949 004c 0123     		movs	r3, #1
 5950              		.syntax divided
 5951              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5952 004e 83F31088 		MSR primask, r3
 5953              	@ 0 "" 2
 5954              	.LVL373:
 5955              		.thumb
 5956              		.syntax unified
 5957              	.LBE1172:
 5958              	.LBE1171:
4325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5959              		.loc 1 4327 0
 5960 0052 0268     		ldr	r2, [r0]
 5961 0054 9368     		ldr	r3, [r2, #8]
 5962 0056 8B43     		bics	r3, r1
 5963 0058 9360     		str	r3, [r2, #8]
 5964              	.LBB1173:
 5965              	.LBB1174:
 5966              		.loc 2 481 0
 5967              		.syntax divided
 5968              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5969 005a 84F31088 		MSR primask, r4
 5970              	@ 0 "" 2
 5971              		.thumb
 5972              		.syntax unified
 5973              	.LBE1174:
 5974              	.LBE1173:
 5975              	.LBE1168:
4328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5976              		.loc 1 4330 0
 5977 005e 2022     		movs	r2, #32
 5978 0060 8C23     		movs	r3, #140
 5979 0062 C250     		str	r2, [r0, r3]
4331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Clear RxISR function pointer */
4333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxISR = NULL;
 5980              		.loc 1 4333 0
 5981 0064 0023     		movs	r3, #0
 5982 0066 4367     		str	r3, [r0, #116]
4334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
4336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
 5983              		.loc 1 4336 0
 5984 0068 0367     		str	r3, [r0, #112]
4337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Check current reception Mode :
4339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5985              		.loc 1 4340 0
 5986 006a C36E     		ldr	r3, [r0, #108]
 5987 006c 012B     		cmp	r3, #1
 5988 006e 17D1     		bne	.L191
4341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
ARM GAS  /tmp/cceLjgLz.s 			page 199


4342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Set reception type to Standard */
4343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5989              		.loc 1 4343 0
 5990 0070 0023     		movs	r3, #0
 5991 0072 C366     		str	r3, [r0, #108]
 5992              	.LBB1175:
 5993              	.LBB1176:
 5994              	.LBB1177:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5995              		.loc 2 453 0
 5996              		.syntax divided
 5997              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5998 0074 EFF31084 		MRS r4, primask
 5999              	@ 0 "" 2
 6000              	.LVL374:
 6001              		.thumb
 6002              		.syntax unified
 6003              	.LBE1177:
 6004              	.LBE1176:
 6005              	.LBB1178:
 6006              	.LBB1179:
 6007              		.loc 2 481 0
 6008 0078 0133     		adds	r3, r3, #1
 6009              		.syntax divided
 6010              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6011 007a 83F31088 		MSR primask, r3
 6012              	@ 0 "" 2
 6013              	.LVL375:
 6014              		.thumb
 6015              		.syntax unified
 6016              	.LBE1179:
 6017              	.LBE1178:
4344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable IDLE interrupt */
4346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6018              		.loc 1 4346 0
 6019 007e 0168     		ldr	r1, [r0]
 6020 0080 0B68     		ldr	r3, [r1]
 6021 0082 103A     		subs	r2, r2, #16
 6022 0084 9343     		bics	r3, r2
 6023 0086 0B60     		str	r3, [r1]
 6024              	.LBB1180:
 6025              	.LBB1181:
 6026              		.loc 2 481 0
 6027              		.syntax divided
 6028              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6029 0088 84F31088 		MSR primask, r4
 6030              	@ 0 "" 2
 6031              		.thumb
 6032              		.syntax unified
 6033              	.LBE1181:
 6034              	.LBE1180:
 6035              	.LBE1175:
4347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 6036              		.loc 1 4348 0
 6037 008c 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cceLjgLz.s 			page 200


 6038 008e D969     		ldr	r1, [r3, #28]
 6039 0090 0A42     		tst	r2, r1
 6040 0092 00D0     		beq	.L192
4349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Clear IDLE Flag */
4351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 6041              		.loc 1 4351 0
 6042 0094 1A62     		str	r2, [r3, #32]
 6043              	.L192:
4352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
4358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 6044              		.loc 1 4359 0
 6045 0096 5C23     		movs	r3, #92
 6046 0098 C15A     		ldrh	r1, [r0, r3]
 6047 009a FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 6048              	.LVL376:
 6049 009e 07E0     		b	.L188
 6050              	.LVL377:
 6051              	.L191:
4360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       else
4363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
4364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Standard reception API called */
4365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
4369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 6052              		.loc 1 4370 0
 6053 00a0 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 6054              	.LVL378:
 6055 00a4 04E0     		b	.L188
 6056              	.LVL379:
 6057              	.L189:
4371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
4374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
4375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
4376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
4377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 6058              		.loc 1 4378 0
 6059 00a6 0268     		ldr	r2, [r0]
 6060              	.LVL380:
 6061 00a8 9169     		ldr	r1, [r2, #24]
 6062 00aa 0823     		movs	r3, #8
 6063 00ac 0B43     		orrs	r3, r1
 6064 00ae 9361     		str	r3, [r2, #24]
ARM GAS  /tmp/cceLjgLz.s 			page 201


 6065              	.LVL381:
 6066              	.L188:
4379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
4380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 6067              		.loc 1 4380 0
 6068              		@ sp needed
 6069 00b0 70BD     		pop	{r4, r5, r6, pc}
 6070              	.L194:
 6071 00b2 C046     		.align	2
 6072              	.L193:
 6073 00b4 DFFEFFFF 		.word	-289
 6074              		.cfi_endproc
 6075              	.LFE377:
 6077              		.section	.text.UART_RxISR_8BIT_FIFOEN,"ax",%progbits
 6078              		.align	2
 6079              		.code	16
 6080              		.thumb_func
 6082              	UART_RxISR_8BIT_FIFOEN:
 6083              	.LFB378:
4381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
4383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8  bits data word length and FIFO mode is enabled.
4384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
4387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
4388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
4389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
4390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 6084              		.loc 1 4390 0
 6085              		.cfi_startproc
 6086              		@ args = 0, pretend = 0, frame = 8
 6087              		@ frame_needed = 0, uses_anonymous_args = 0
 6088              	.LVL382:
 6089 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6090              	.LCFI30:
 6091              		.cfi_def_cfa_offset 20
 6092              		.cfi_offset 4, -20
 6093              		.cfi_offset 5, -16
 6094              		.cfi_offset 6, -12
 6095              		.cfi_offset 7, -8
 6096              		.cfi_offset 14, -4
 6097 0002 4746     		mov	r7, r8
 6098 0004 80B4     		push	{r7}
 6099              	.LCFI31:
 6100              		.cfi_def_cfa_offset 24
 6101              		.cfi_offset 8, -24
 6102 0006 82B0     		sub	sp, sp, #8
 6103              	.LCFI32:
 6104              		.cfi_def_cfa_offset 32
 6105 0008 0400     		movs	r4, r0
4391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 6106              		.loc 1 4391 0
 6107 000a 6023     		movs	r3, #96
 6108 000c C35A     		ldrh	r3, [r0, r3]
 6109 000e 0193     		str	r3, [sp, #4]
 6110              	.LVL383:
ARM GAS  /tmp/cceLjgLz.s 			page 202


4392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  uhdata;
4393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  nb_rx_data;
4394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  rxdatacount;
4395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 6111              		.loc 1 4395 0
 6112 0010 0368     		ldr	r3, [r0]
 6113 0012 DD69     		ldr	r5, [r3, #28]
 6114              	.LVL384:
4396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 6115              		.loc 1 4396 0
 6116 0014 1A68     		ldr	r2, [r3]
 6117 0016 9046     		mov	r8, r2
 6118              	.LVL385:
4397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 6119              		.loc 1 4397 0
 6120 0018 9F68     		ldr	r7, [r3, #8]
 6121              	.LVL386:
4398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 6122              		.loc 1 4400 0
 6123 001a 8C22     		movs	r2, #140
 6124              	.LVL387:
 6125 001c 8258     		ldr	r2, [r0, r2]
 6126 001e 222A     		cmp	r2, #34
 6127 0020 00D0     		beq	.LCB4546
 6128 0022 ADE0     		b	.L196	@long jump
 6129              	.LCB4546:
4401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
4402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     nb_rx_data = huart->NbRxDataToProcess;
 6130              		.loc 1 4402 0
 6131 0024 6823     		movs	r3, #104
 6132 0026 C65A     		ldrh	r6, [r0, r3]
 6133              	.LVL388:
4403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 6134              		.loc 1 4403 0
 6135 0028 81E0     		b	.L197
 6136              	.LVL389:
 6137              	.L206:
4404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
4405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 6138              		.loc 1 4405 0
 6139 002a 2368     		ldr	r3, [r4]
 6140 002c 5A6A     		ldr	r2, [r3, #36]
 6141              	.LVL390:
4406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 6142              		.loc 1 4406 0
 6143 002e 6B46     		mov	r3, sp
 6144 0030 1B79     		ldrb	r3, [r3, #4]
 6145 0032 1340     		ands	r3, r2
 6146 0034 A26D     		ldr	r2, [r4, #88]
 6147              	.LVL391:
 6148 0036 1370     		strb	r3, [r2]
4407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pRxBuffPtr++;
 6149              		.loc 1 4407 0
 6150 0038 A36D     		ldr	r3, [r4, #88]
 6151 003a 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cceLjgLz.s 			page 203


 6152 003c A365     		str	r3, [r4, #88]
4408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxXferCount--;
 6153              		.loc 1 4408 0
 6154 003e 5E22     		movs	r2, #94
 6155 0040 A35A     		ldrh	r3, [r4, r2]
 6156 0042 013B     		subs	r3, r3, #1
 6157 0044 9BB2     		uxth	r3, r3
 6158 0046 A352     		strh	r3, [r4, r2]
4409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       isrflags = READ_REG(huart->Instance->ISR);
 6159              		.loc 1 4409 0
 6160 0048 2368     		ldr	r3, [r4]
 6161 004a DD69     		ldr	r5, [r3, #28]
 6162              	.LVL392:
4410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* If some non blocking errors occurred */
4412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 6163              		.loc 1 4412 0
 6164 004c 6A07     		lsls	r2, r5, #29
 6165 004e 2CD0     		beq	.L198
4413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
4414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* UART parity error interrupt occurred -------------------------------------*/
4415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 6166              		.loc 1 4415 0
 6167 0050 EA07     		lsls	r2, r5, #31
 6168 0052 08D5     		bpl	.L199
 6169              		.loc 1 4415 0 is_stmt 0 discriminator 1
 6170 0054 4246     		mov	r2, r8
 6171 0056 D205     		lsls	r2, r2, #23
 6172 0058 05D5     		bpl	.L199
4416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 6173              		.loc 1 4417 0 is_stmt 1
 6174 005a 0122     		movs	r2, #1
 6175 005c 1A62     		str	r2, [r3, #32]
4418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_PE;
 6176              		.loc 1 4419 0
 6177 005e 9023     		movs	r3, #144
 6178 0060 E158     		ldr	r1, [r4, r3]
 6179 0062 0A43     		orrs	r2, r1
 6180 0064 E250     		str	r2, [r4, r3]
 6181              	.L199:
4420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* UART frame error interrupt occurred --------------------------------------*/
4423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 6182              		.loc 1 4423 0
 6183 0066 AB07     		lsls	r3, r5, #30
 6184 0068 09D5     		bpl	.L200
 6185              		.loc 1 4423 0 is_stmt 0 discriminator 1
 6186 006a FB07     		lsls	r3, r7, #31
 6187 006c 07D5     		bpl	.L200
4424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 6188              		.loc 1 4425 0 is_stmt 1
 6189 006e 2368     		ldr	r3, [r4]
 6190 0070 0222     		movs	r2, #2
ARM GAS  /tmp/cceLjgLz.s 			page 204


 6191 0072 1A62     		str	r2, [r3, #32]
4426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_FE;
 6192              		.loc 1 4427 0
 6193 0074 8E32     		adds	r2, r2, #142
 6194 0076 A158     		ldr	r1, [r4, r2]
 6195 0078 0423     		movs	r3, #4
 6196 007a 0B43     		orrs	r3, r1
 6197 007c A350     		str	r3, [r4, r2]
 6198              	.L200:
4428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* UART noise error interrupt occurred --------------------------------------*/
4431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 6199              		.loc 1 4431 0
 6200 007e 6B07     		lsls	r3, r5, #29
 6201 0080 09D5     		bpl	.L201
 6202              		.loc 1 4431 0 is_stmt 0 discriminator 1
 6203 0082 FB07     		lsls	r3, r7, #31
 6204 0084 07D5     		bpl	.L201
4432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 6205              		.loc 1 4433 0 is_stmt 1
 6206 0086 2368     		ldr	r3, [r4]
 6207 0088 0422     		movs	r2, #4
 6208 008a 1A62     		str	r2, [r3, #32]
4434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_NE;
 6209              		.loc 1 4435 0
 6210 008c 8C32     		adds	r2, r2, #140
 6211 008e A158     		ldr	r1, [r4, r2]
 6212 0090 0223     		movs	r3, #2
 6213 0092 0B43     		orrs	r3, r1
 6214 0094 A350     		str	r3, [r4, r2]
 6215              	.L201:
4436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Call UART Error Call back function if need be ----------------------------*/
4439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 6216              		.loc 1 4439 0
 6217 0096 9023     		movs	r3, #144
 6218 0098 E358     		ldr	r3, [r4, r3]
 6219 009a 002B     		cmp	r3, #0
 6220 009c 05D0     		beq	.L198
4440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Non Blocking error : transfer could go on.
4442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           Error is notified to user through user error callback */
4443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call registered error callback*/
4445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCallback(huart);
4446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
4447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call legacy weak error callback*/
4448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 6221              		.loc 1 4448 0
 6222 009e 2000     		movs	r0, r4
 6223 00a0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 6224              	.LVL393:
ARM GAS  /tmp/cceLjgLz.s 			page 205


4449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_NONE;
 6225              		.loc 1 4450 0
 6226 00a4 0022     		movs	r2, #0
 6227 00a6 9023     		movs	r3, #144
 6228 00a8 E250     		str	r2, [r4, r3]
 6229              	.L198:
4451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
 6230              		.loc 1 4454 0
 6231 00aa 5E23     		movs	r3, #94
 6232 00ac E35A     		ldrh	r3, [r4, r3]
 6233 00ae 9BB2     		uxth	r3, r3
 6234 00b0 002B     		cmp	r3, #0
 6235 00b2 3CD1     		bne	.L197
 6236              	.LBB1182:
 6237              	.LBB1183:
 6238              	.LBB1184:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6239              		.loc 2 453 0
 6240              		.syntax divided
 6241              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6242 00b4 EFF31081 		MRS r1, primask
 6243              	@ 0 "" 2
 6244              	.LVL394:
 6245              		.thumb
 6246              		.syntax unified
 6247              	.LBE1184:
 6248              	.LBE1183:
 6249              	.LBB1185:
 6250              	.LBB1186:
 6251              		.loc 2 481 0
 6252 00b8 0133     		adds	r3, r3, #1
 6253              		.syntax divided
 6254              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6255 00ba 83F31088 		MSR primask, r3
 6256              	@ 0 "" 2
 6257              	.LVL395:
 6258              		.thumb
 6259              		.syntax unified
 6260              	.LBE1186:
 6261              	.LBE1185:
4455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
4456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 6262              		.loc 1 4457 0
 6263 00be 2268     		ldr	r2, [r4]
 6264 00c0 1068     		ldr	r0, [r2]
 6265 00c2 334B     		ldr	r3, .L208
 6266 00c4 0340     		ands	r3, r0
 6267 00c6 1360     		str	r3, [r2]
 6268              	.LBB1187:
 6269              	.LBB1188:
 6270              		.loc 2 481 0
 6271              		.syntax divided
ARM GAS  /tmp/cceLjgLz.s 			page 206


 6272              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6273 00c8 81F31088 		MSR primask, r1
 6274              	@ 0 "" 2
 6275              		.thumb
 6276              		.syntax unified
 6277              	.LBE1188:
 6278              	.LBE1187:
 6279              	.LBE1182:
 6280              	.LBB1189:
 6281              	.LBB1190:
 6282              	.LBB1191:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6283              		.loc 2 453 0
 6284              		.syntax divided
 6285              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6286 00cc EFF31081 		MRS r1, primask
 6287              	@ 0 "" 2
 6288              	.LVL396:
 6289              		.thumb
 6290              		.syntax unified
 6291              	.LBE1191:
 6292              	.LBE1190:
 6293              	.LBB1192:
 6294              	.LBB1193:
 6295              		.loc 2 481 0
 6296 00d0 0123     		movs	r3, #1
 6297              		.syntax divided
 6298              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6299 00d2 83F31088 		MSR primask, r3
 6300              	@ 0 "" 2
 6301              	.LVL397:
 6302              		.thumb
 6303              		.syntax unified
 6304              	.LBE1193:
 6305              	.LBE1192:
4458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
4460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
4461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 6306              		.loc 1 4461 0
 6307 00d6 2268     		ldr	r2, [r4]
 6308 00d8 9068     		ldr	r0, [r2, #8]
 6309 00da 2E4B     		ldr	r3, .L208+4
 6310 00dc 0340     		ands	r3, r0
 6311 00de 9360     		str	r3, [r2, #8]
 6312              	.LBB1194:
 6313              	.LBB1195:
 6314              		.loc 2 481 0
 6315              		.syntax divided
 6316              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6317 00e0 81F31088 		MSR primask, r1
 6318              	@ 0 "" 2
 6319              		.thumb
 6320              		.syntax unified
 6321              	.LBE1195:
 6322              	.LBE1194:
 6323              	.LBE1189:
ARM GAS  /tmp/cceLjgLz.s 			page 207


4462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 6324              		.loc 1 4464 0
 6325 00e4 2022     		movs	r2, #32
 6326 00e6 8C23     		movs	r3, #140
 6327 00e8 E250     		str	r2, [r4, r3]
4465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Clear RxISR function pointer */
4467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxISR = NULL;
 6328              		.loc 1 4467 0
 6329 00ea 0023     		movs	r3, #0
 6330 00ec 6367     		str	r3, [r4, #116]
4468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Initialize type of RxEvent to Transfer Complete */
4470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_TC;
 6331              		.loc 1 4470 0
 6332 00ee 2367     		str	r3, [r4, #112]
4471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Check current reception Mode :
4473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            If Reception till IDLE event has been selected : */
4474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 6333              		.loc 1 4474 0
 6334 00f0 E36E     		ldr	r3, [r4, #108]
 6335 00f2 012B     		cmp	r3, #1
 6336 00f4 18D1     		bne	.L203
4475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set reception type to Standard */
4477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 6337              		.loc 1 4477 0
 6338 00f6 0023     		movs	r3, #0
 6339 00f8 E366     		str	r3, [r4, #108]
 6340              	.LBB1196:
 6341              	.LBB1197:
 6342              	.LBB1198:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6343              		.loc 2 453 0
 6344              		.syntax divided
 6345              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6346 00fa EFF31080 		MRS r0, primask
 6347              	@ 0 "" 2
 6348              	.LVL398:
 6349              		.thumb
 6350              		.syntax unified
 6351              	.LBE1198:
 6352              	.LBE1197:
 6353              	.LBB1199:
 6354              	.LBB1200:
 6355              		.loc 2 481 0
 6356 00fe 0133     		adds	r3, r3, #1
 6357              		.syntax divided
 6358              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6359 0100 83F31088 		MSR primask, r3
 6360              	@ 0 "" 2
 6361              	.LVL399:
 6362              		.thumb
 6363              		.syntax unified
ARM GAS  /tmp/cceLjgLz.s 			page 208


 6364              	.LBE1200:
 6365              	.LBE1199:
4478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Disable IDLE interrupt */
4480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6366              		.loc 1 4480 0
 6367 0104 2168     		ldr	r1, [r4]
 6368 0106 0B68     		ldr	r3, [r1]
 6369 0108 103A     		subs	r2, r2, #16
 6370 010a 9343     		bics	r3, r2
 6371 010c 0B60     		str	r3, [r1]
 6372              	.LBB1201:
 6373              	.LBB1202:
 6374              		.loc 2 481 0
 6375              		.syntax divided
 6376              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6377 010e 80F31088 		MSR primask, r0
 6378              	@ 0 "" 2
 6379              		.thumb
 6380              		.syntax unified
 6381              	.LBE1202:
 6382              	.LBE1201:
 6383              	.LBE1196:
4481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 6384              		.loc 1 4482 0
 6385 0112 2368     		ldr	r3, [r4]
 6386 0114 D969     		ldr	r1, [r3, #28]
 6387 0116 0A42     		tst	r2, r1
 6388 0118 00D0     		beq	.L204
4483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           {
4484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             /* Clear IDLE Flag */
4485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 6389              		.loc 1 4485 0
 6390 011a 1A62     		str	r2, [r3, #32]
 6391              	.L204:
4486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           }
4487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call registered Rx Event callback*/
4490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->RxEventCallback(huart, huart->RxXferSize);
4491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
4492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call legacy weak Rx Event callback*/
4493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 6392              		.loc 1 4493 0
 6393 011c 5C23     		movs	r3, #92
 6394 011e E15A     		ldrh	r1, [r4, r3]
 6395 0120 2000     		movs	r0, r4
 6396 0122 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 6397              	.LVL400:
 6398 0126 02E0     		b	.L197
 6399              	.L203:
4494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         else
4497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Standard reception API called */
ARM GAS  /tmp/cceLjgLz.s 			page 209


4499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call registered Rx complete callback*/
4501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->RxCpltCallback(huart);
4502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
4503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call legacy weak Rx complete callback*/
4504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           HAL_UART_RxCpltCallback(huart);
 6400              		.loc 1 4504 0
 6401 0128 2000     		movs	r0, r4
 6402 012a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 6403              	.LVL401:
 6404              	.L197:
4403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 6405              		.loc 1 4403 0
 6406 012e 002E     		cmp	r6, #0
 6407 0130 02D0     		beq	.L205
4403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 6408              		.loc 1 4403 0 is_stmt 0 discriminator 1
 6409 0132 AB06     		lsls	r3, r5, #26
 6410 0134 00D5     		bpl	.LCB4778
 6411 0136 78E7     		b	.L206	@long jump
 6412              	.LCB4778:
 6413              	.L205:
4505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
4509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     */
4514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 6414              		.loc 1 4514 0 is_stmt 1
 6415 0138 5E23     		movs	r3, #94
 6416 013a E35A     		ldrh	r3, [r4, r3]
 6417 013c 9BB2     		uxth	r3, r3
 6418              	.LVL402:
4515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 6419              		.loc 1 4515 0
 6420 013e 002B     		cmp	r3, #0
 6421 0140 22D0     		beq	.L195
 6422              		.loc 1 4515 0 is_stmt 0 discriminator 1
 6423 0142 6822     		movs	r2, #104
 6424 0144 A25A     		ldrh	r2, [r4, r2]
 6425 0146 9342     		cmp	r3, r2
 6426 0148 1ED2     		bcs	.L195
 6427              	.LBB1203:
 6428              	.LBB1204:
 6429              	.LBB1205:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6430              		.loc 2 453 0 is_stmt 1
 6431              		.syntax divided
 6432              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6433 014a EFF31081 		MRS r1, primask
 6434              	@ 0 "" 2
 6435              	.LVL403:
 6436              		.thumb
ARM GAS  /tmp/cceLjgLz.s 			page 210


 6437              		.syntax unified
 6438              	.LBE1205:
 6439              	.LBE1204:
 6440              	.LBB1206:
 6441              	.LBB1207:
 6442              		.loc 2 481 0
 6443 014e 0123     		movs	r3, #1
 6444              	.LVL404:
 6445              		.syntax divided
 6446              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6447 0150 83F31088 		MSR primask, r3
 6448              	@ 0 "" 2
 6449              	.LVL405:
 6450              		.thumb
 6451              		.syntax unified
 6452              	.LBE1207:
 6453              	.LBE1206:
4516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
4517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 6454              		.loc 1 4518 0
 6455 0154 2268     		ldr	r2, [r4]
 6456 0156 9068     		ldr	r0, [r2, #8]
 6457 0158 0F4B     		ldr	r3, .L208+8
 6458 015a 0340     		ands	r3, r0
 6459 015c 9360     		str	r3, [r2, #8]
 6460              	.LBB1208:
 6461              	.LBB1209:
 6462              		.loc 2 481 0
 6463              		.syntax divided
 6464              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6465 015e 81F31088 		MSR primask, r1
 6466              	@ 0 "" 2
 6467              		.thumb
 6468              		.syntax unified
 6469              	.LBE1209:
 6470              	.LBE1208:
 6471              	.LBE1203:
4519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Update the RxISR function pointer */
4521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 6472              		.loc 1 4521 0
 6473 0162 0E4B     		ldr	r3, .L208+12
 6474 0164 6367     		str	r3, [r4, #116]
 6475              	.LBB1210:
 6476              	.LBB1211:
 6477              	.LBB1212:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6478              		.loc 2 453 0
 6479              		.syntax divided
 6480              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6481 0166 EFF31081 		MRS r1, primask
 6482              	@ 0 "" 2
 6483              	.LVL406:
 6484              		.thumb
 6485              		.syntax unified
 6486              	.LBE1212:
ARM GAS  /tmp/cceLjgLz.s 			page 211


 6487              	.LBE1211:
 6488              	.LBB1213:
 6489              	.LBB1214:
 6490              		.loc 2 481 0
 6491 016a 0123     		movs	r3, #1
 6492              		.syntax divided
 6493              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6494 016c 83F31088 		MSR primask, r3
 6495              	@ 0 "" 2
 6496              	.LVL407:
 6497              		.thumb
 6498              		.syntax unified
 6499              	.LBE1214:
 6500              	.LBE1213:
4522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 6501              		.loc 1 4524 0
 6502 0170 2268     		ldr	r2, [r4]
 6503 0172 1068     		ldr	r0, [r2]
 6504 0174 1F33     		adds	r3, r3, #31
 6505 0176 0343     		orrs	r3, r0
 6506 0178 1360     		str	r3, [r2]
 6507              	.LBB1215:
 6508              	.LBB1216:
 6509              		.loc 2 481 0
 6510              		.syntax divided
 6511              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6512 017a 81F31088 		MSR primask, r1
 6513              	@ 0 "" 2
 6514              		.thumb
 6515              		.syntax unified
 6516 017e 03E0     		b	.L195
 6517              	.LVL408:
 6518              	.L196:
 6519              	.LBE1216:
 6520              	.LBE1215:
 6521              	.LBE1210:
4525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
4526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
4527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
4528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
4529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 6522              		.loc 1 4530 0
 6523 0180 9969     		ldr	r1, [r3, #24]
 6524 0182 0822     		movs	r2, #8
 6525 0184 0A43     		orrs	r2, r1
 6526 0186 9A61     		str	r2, [r3, #24]
 6527              	.LVL409:
 6528              	.L195:
4531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
4532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 6529              		.loc 1 4532 0
 6530 0188 02B0     		add	sp, sp, #8
 6531              		@ sp needed
 6532              	.LVL410:
ARM GAS  /tmp/cceLjgLz.s 			page 212


 6533              	.LVL411:
 6534              	.LVL412:
 6535              	.LVL413:
 6536 018a 04BC     		pop	{r2}
 6537 018c 9046     		mov	r8, r2
 6538 018e F0BD     		pop	{r4, r5, r6, r7, pc}
 6539              	.L209:
 6540              		.align	2
 6541              	.L208:
 6542 0190 FFFEFFFF 		.word	-257
 6543 0194 FEFFFFEF 		.word	-268435458
 6544 0198 FFFFFFEF 		.word	-268435457
 6545 019c 00000000 		.word	UART_RxISR_8BIT
 6546              		.cfi_endproc
 6547              	.LFE378:
 6549              		.section	.text.UART_RxISR_16BIT_FIFOEN,"ax",%progbits
 6550              		.align	2
 6551              		.code	16
 6552              		.thumb_func
 6554              	UART_RxISR_16BIT_FIFOEN:
 6555              	.LFB379:
4533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
4535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length and FIFO mode is enabled.
4536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @param huart UART handle.
4539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   * @retval None
4540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   */
4541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** {
 6556              		.loc 1 4542 0
 6557              		.cfi_startproc
 6558              		@ args = 0, pretend = 0, frame = 0
 6559              		@ frame_needed = 0, uses_anonymous_args = 0
 6560              	.LVL414:
 6561 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6562              	.LCFI33:
 6563              		.cfi_def_cfa_offset 24
 6564              		.cfi_offset 3, -24
 6565              		.cfi_offset 4, -20
 6566              		.cfi_offset 5, -16
 6567              		.cfi_offset 6, -12
 6568              		.cfi_offset 7, -8
 6569              		.cfi_offset 14, -4
 6570 0002 4F46     		mov	r7, r9
 6571 0004 4646     		mov	r6, r8
 6572 0006 C0B4     		push	{r6, r7}
 6573              	.LCFI34:
 6574              		.cfi_def_cfa_offset 32
 6575              		.cfi_offset 8, -32
 6576              		.cfi_offset 9, -28
 6577 0008 0400     		movs	r4, r0
4543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t *tmp;
4544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 6578              		.loc 1 4544 0
 6579 000a 6023     		movs	r3, #96
ARM GAS  /tmp/cceLjgLz.s 			page 213


 6580 000c C55A     		ldrh	r5, [r0, r3]
 6581              	.LVL415:
4545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  uhdata;
4546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  nb_rx_data;
4547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint16_t  rxdatacount;
4548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 6582              		.loc 1 4548 0
 6583 000e 0368     		ldr	r3, [r0]
 6584 0010 DF69     		ldr	r7, [r3, #28]
 6585              	.LVL416:
4549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 6586              		.loc 1 4549 0
 6587 0012 1A68     		ldr	r2, [r3]
 6588 0014 9046     		mov	r8, r2
 6589              	.LVL417:
4550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 6590              		.loc 1 4550 0
 6591 0016 9A68     		ldr	r2, [r3, #8]
 6592              	.LVL418:
 6593 0018 9146     		mov	r9, r2
 6594              	.LVL419:
4551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 6595              		.loc 1 4553 0
 6596 001a 8C22     		movs	r2, #140
 6597              	.LVL420:
 6598 001c 8258     		ldr	r2, [r0, r2]
 6599 001e 222A     		cmp	r2, #34
 6600 0020 00D0     		beq	.LCB4923
 6601 0022 ADE0     		b	.L211	@long jump
 6602              	.LCB4923:
4554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
4555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     nb_rx_data = huart->NbRxDataToProcess;
 6603              		.loc 1 4555 0
 6604 0024 6823     		movs	r3, #104
 6605 0026 C65A     		ldrh	r6, [r0, r3]
 6606              	.LVL421:
4556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 6607              		.loc 1 4556 0
 6608 0028 81E0     		b	.L212
 6609              	.LVL422:
 6610              	.L221:
4557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
4558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 6611              		.loc 1 4558 0
 6612 002a 2368     		ldr	r3, [r4]
 6613 002c 5B6A     		ldr	r3, [r3, #36]
 6614              	.LVL423:
4559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
4560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 6615              		.loc 1 4560 0
 6616 002e 2B40     		ands	r3, r5
 6617              	.LVL424:
 6618 0030 A26D     		ldr	r2, [r4, #88]
 6619 0032 1380     		strh	r3, [r2]
 6620              	.LVL425:
ARM GAS  /tmp/cceLjgLz.s 			page 214


4561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 6621              		.loc 1 4561 0
 6622 0034 A36D     		ldr	r3, [r4, #88]
 6623 0036 0233     		adds	r3, r3, #2
 6624 0038 A365     		str	r3, [r4, #88]
4562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxXferCount--;
 6625              		.loc 1 4562 0
 6626 003a 5E22     		movs	r2, #94
 6627              	.LVL426:
 6628 003c A35A     		ldrh	r3, [r4, r2]
 6629 003e 013B     		subs	r3, r3, #1
 6630 0040 9BB2     		uxth	r3, r3
 6631 0042 A352     		strh	r3, [r4, r2]
4563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       isrflags = READ_REG(huart->Instance->ISR);
 6632              		.loc 1 4563 0
 6633 0044 2368     		ldr	r3, [r4]
 6634 0046 DF69     		ldr	r7, [r3, #28]
 6635              	.LVL427:
4564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* If some non blocking errors occurred */
4566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 6636              		.loc 1 4566 0
 6637 0048 7A07     		lsls	r2, r7, #29
 6638 004a 2ED0     		beq	.L213
4567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
4568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* UART parity error interrupt occurred -------------------------------------*/
4569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 6639              		.loc 1 4569 0
 6640 004c FA07     		lsls	r2, r7, #31
 6641 004e 08D5     		bpl	.L214
 6642              		.loc 1 4569 0 is_stmt 0 discriminator 1
 6643 0050 4246     		mov	r2, r8
 6644 0052 D205     		lsls	r2, r2, #23
 6645 0054 05D5     		bpl	.L214
4570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 6646              		.loc 1 4571 0 is_stmt 1
 6647 0056 0122     		movs	r2, #1
 6648 0058 1A62     		str	r2, [r3, #32]
4572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_PE;
 6649              		.loc 1 4573 0
 6650 005a 9023     		movs	r3, #144
 6651 005c E158     		ldr	r1, [r4, r3]
 6652 005e 0A43     		orrs	r2, r1
 6653 0060 E250     		str	r2, [r4, r3]
 6654              	.L214:
4574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* UART frame error interrupt occurred --------------------------------------*/
4577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 6655              		.loc 1 4577 0
 6656 0062 BB07     		lsls	r3, r7, #30
 6657 0064 0AD5     		bpl	.L215
 6658              		.loc 1 4577 0 is_stmt 0 discriminator 1
 6659 0066 4B46     		mov	r3, r9
 6660 0068 DB07     		lsls	r3, r3, #31
ARM GAS  /tmp/cceLjgLz.s 			page 215


 6661 006a 07D5     		bpl	.L215
4578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 6662              		.loc 1 4579 0 is_stmt 1
 6663 006c 2368     		ldr	r3, [r4]
 6664 006e 0222     		movs	r2, #2
 6665 0070 1A62     		str	r2, [r3, #32]
4580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_FE;
 6666              		.loc 1 4581 0
 6667 0072 8E32     		adds	r2, r2, #142
 6668 0074 A158     		ldr	r1, [r4, r2]
 6669 0076 0423     		movs	r3, #4
 6670 0078 0B43     		orrs	r3, r1
 6671 007a A350     		str	r3, [r4, r2]
 6672              	.L215:
4582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* UART noise error interrupt occurred --------------------------------------*/
4585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 6673              		.loc 1 4585 0
 6674 007c 7B07     		lsls	r3, r7, #29
 6675 007e 0AD5     		bpl	.L216
 6676              		.loc 1 4585 0 is_stmt 0 discriminator 1
 6677 0080 4B46     		mov	r3, r9
 6678 0082 DB07     		lsls	r3, r3, #31
 6679 0084 07D5     		bpl	.L216
4586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 6680              		.loc 1 4587 0 is_stmt 1
 6681 0086 2368     		ldr	r3, [r4]
 6682 0088 0422     		movs	r2, #4
 6683 008a 1A62     		str	r2, [r3, #32]
4588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_NE;
 6684              		.loc 1 4589 0
 6685 008c 8C32     		adds	r2, r2, #140
 6686 008e A158     		ldr	r1, [r4, r2]
 6687 0090 0223     		movs	r3, #2
 6688 0092 0B43     		orrs	r3, r1
 6689 0094 A350     		str	r3, [r4, r2]
 6690              	.L216:
4590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Call UART Error Call back function if need be ----------------------------*/
4593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 6691              		.loc 1 4593 0
 6692 0096 9023     		movs	r3, #144
 6693 0098 E358     		ldr	r3, [r4, r3]
 6694 009a 002B     		cmp	r3, #0
 6695 009c 05D0     		beq	.L213
4594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Non Blocking error : transfer could go on.
4596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           Error is notified to user through user error callback */
4597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call registered error callback*/
4599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCallback(huart);
ARM GAS  /tmp/cceLjgLz.s 			page 216


4600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
4601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call legacy weak error callback*/
4602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 6696              		.loc 1 4602 0
 6697 009e 2000     		movs	r0, r4
 6698 00a0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 6699              	.LVL428:
4603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_NONE;
 6700              		.loc 1 4604 0
 6701 00a4 0022     		movs	r2, #0
 6702 00a6 9023     		movs	r3, #144
 6703 00a8 E250     		str	r2, [r4, r3]
 6704              	.L213:
4605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
 6705              		.loc 1 4608 0
 6706 00aa 5E23     		movs	r3, #94
 6707 00ac E35A     		ldrh	r3, [r4, r3]
 6708 00ae 9BB2     		uxth	r3, r3
 6709 00b0 002B     		cmp	r3, #0
 6710 00b2 3CD1     		bne	.L212
 6711              	.LBB1217:
 6712              	.LBB1218:
 6713              	.LBB1219:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6714              		.loc 2 453 0
 6715              		.syntax divided
 6716              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6717 00b4 EFF31081 		MRS r1, primask
 6718              	@ 0 "" 2
 6719              	.LVL429:
 6720              		.thumb
 6721              		.syntax unified
 6722              	.LBE1219:
 6723              	.LBE1218:
 6724              	.LBB1220:
 6725              	.LBB1221:
 6726              		.loc 2 481 0
 6727 00b8 0133     		adds	r3, r3, #1
 6728              		.syntax divided
 6729              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6730 00ba 83F31088 		MSR primask, r3
 6731              	@ 0 "" 2
 6732              	.LVL430:
 6733              		.thumb
 6734              		.syntax unified
 6735              	.LBE1221:
 6736              	.LBE1220:
4609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
4610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 6737              		.loc 1 4611 0
 6738 00be 2268     		ldr	r2, [r4]
 6739 00c0 1068     		ldr	r0, [r2]
ARM GAS  /tmp/cceLjgLz.s 			page 217


 6740 00c2 334B     		ldr	r3, .L223
 6741 00c4 0340     		ands	r3, r0
 6742 00c6 1360     		str	r3, [r2]
 6743              	.LBB1222:
 6744              	.LBB1223:
 6745              		.loc 2 481 0
 6746              		.syntax divided
 6747              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6748 00c8 81F31088 		MSR primask, r1
 6749              	@ 0 "" 2
 6750              		.thumb
 6751              		.syntax unified
 6752              	.LBE1223:
 6753              	.LBE1222:
 6754              	.LBE1217:
 6755              	.LBB1224:
 6756              	.LBB1225:
 6757              	.LBB1226:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6758              		.loc 2 453 0
 6759              		.syntax divided
 6760              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6761 00cc EFF31081 		MRS r1, primask
 6762              	@ 0 "" 2
 6763              	.LVL431:
 6764              		.thumb
 6765              		.syntax unified
 6766              	.LBE1226:
 6767              	.LBE1225:
 6768              	.LBB1227:
 6769              	.LBB1228:
 6770              		.loc 2 481 0
 6771 00d0 0123     		movs	r3, #1
 6772              		.syntax divided
 6773              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6774 00d2 83F31088 		MSR primask, r3
 6775              	@ 0 "" 2
 6776              	.LVL432:
 6777              		.thumb
 6778              		.syntax unified
 6779              	.LBE1228:
 6780              	.LBE1227:
4612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
4614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
4615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 6781              		.loc 1 4615 0
 6782 00d6 2268     		ldr	r2, [r4]
 6783 00d8 9068     		ldr	r0, [r2, #8]
 6784 00da 2E4B     		ldr	r3, .L223+4
 6785 00dc 0340     		ands	r3, r0
 6786 00de 9360     		str	r3, [r2, #8]
 6787              	.LBB1229:
 6788              	.LBB1230:
 6789              		.loc 2 481 0
 6790              		.syntax divided
 6791              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cceLjgLz.s 			page 218


 6792 00e0 81F31088 		MSR primask, r1
 6793              	@ 0 "" 2
 6794              		.thumb
 6795              		.syntax unified
 6796              	.LBE1230:
 6797              	.LBE1229:
 6798              	.LBE1224:
4616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 6799              		.loc 1 4618 0
 6800 00e4 2022     		movs	r2, #32
 6801 00e6 8C23     		movs	r3, #140
 6802 00e8 E250     		str	r2, [r4, r3]
4619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Clear RxISR function pointer */
4621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxISR = NULL;
 6803              		.loc 1 4621 0
 6804 00ea 0023     		movs	r3, #0
 6805 00ec 6367     		str	r3, [r4, #116]
4622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Initialize type of RxEvent to Transfer Complete */
4624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_TC;
 6806              		.loc 1 4624 0
 6807 00ee 2367     		str	r3, [r4, #112]
4625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         /* Check current reception Mode :
4627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****            If Reception till IDLE event has been selected : */
4628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 6808              		.loc 1 4628 0
 6809 00f0 E36E     		ldr	r3, [r4, #108]
 6810 00f2 012B     		cmp	r3, #1
 6811 00f4 18D1     		bne	.L218
4629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Set reception type to Standard */
4631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 6812              		.loc 1 4631 0
 6813 00f6 0023     		movs	r3, #0
 6814 00f8 E366     		str	r3, [r4, #108]
 6815              	.LBB1231:
 6816              	.LBB1232:
 6817              	.LBB1233:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6818              		.loc 2 453 0
 6819              		.syntax divided
 6820              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6821 00fa EFF31080 		MRS r0, primask
 6822              	@ 0 "" 2
 6823              	.LVL433:
 6824              		.thumb
 6825              		.syntax unified
 6826              	.LBE1233:
 6827              	.LBE1232:
 6828              	.LBB1234:
 6829              	.LBB1235:
 6830              		.loc 2 481 0
 6831 00fe 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cceLjgLz.s 			page 219


 6832              		.syntax divided
 6833              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6834 0100 83F31088 		MSR primask, r3
 6835              	@ 0 "" 2
 6836              	.LVL434:
 6837              		.thumb
 6838              		.syntax unified
 6839              	.LBE1235:
 6840              	.LBE1234:
4632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Disable IDLE interrupt */
4634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6841              		.loc 1 4634 0
 6842 0104 2168     		ldr	r1, [r4]
 6843 0106 0B68     		ldr	r3, [r1]
 6844 0108 103A     		subs	r2, r2, #16
 6845 010a 9343     		bics	r3, r2
 6846 010c 0B60     		str	r3, [r1]
 6847              	.LBB1236:
 6848              	.LBB1237:
 6849              		.loc 2 481 0
 6850              		.syntax divided
 6851              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6852 010e 80F31088 		MSR primask, r0
 6853              	@ 0 "" 2
 6854              		.thumb
 6855              		.syntax unified
 6856              	.LBE1237:
 6857              	.LBE1236:
 6858              	.LBE1231:
4635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 6859              		.loc 1 4636 0
 6860 0112 2368     		ldr	r3, [r4]
 6861 0114 D969     		ldr	r1, [r3, #28]
 6862 0116 0A42     		tst	r2, r1
 6863 0118 00D0     		beq	.L219
4637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           {
4638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             /* Clear IDLE Flag */
4639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****             __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 6864              		.loc 1 4639 0
 6865 011a 1A62     		str	r2, [r3, #32]
 6866              	.L219:
4640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           }
4641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call registered Rx Event callback*/
4644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->RxEventCallback(huart, huart->RxXferSize);
4645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
4646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call legacy weak Rx Event callback*/
4647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 6867              		.loc 1 4647 0
 6868 011c 5C23     		movs	r3, #92
 6869 011e E15A     		ldrh	r1, [r4, r3]
 6870 0120 2000     		movs	r0, r4
 6871 0122 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 6872              	.LVL435:
ARM GAS  /tmp/cceLjgLz.s 			page 220


 6873 0126 02E0     		b	.L212
 6874              	.L218:
4648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         else
4651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
4652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /* Standard reception API called */
4653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call registered Rx complete callback*/
4655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->RxCpltCallback(huart);
4656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #else
4657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           /*Call legacy weak Rx complete callback*/
4658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           HAL_UART_RxCpltCallback(huart);
 6875              		.loc 1 4658 0
 6876 0128 2000     		movs	r0, r4
 6877 012a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 6878              	.LVL436:
 6879              	.L212:
4556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 6880              		.loc 1 4556 0
 6881 012e 002E     		cmp	r6, #0
 6882 0130 02D0     		beq	.L220
4556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 6883              		.loc 1 4556 0 is_stmt 0 discriminator 1
 6884 0132 BB06     		lsls	r3, r7, #26
 6885 0134 00D5     		bpl	.LCB5162
 6886 0136 78E7     		b	.L221	@long jump
 6887              	.LCB5162:
 6888              	.L220:
4659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
4661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
4662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
4663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     */
4668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 6889              		.loc 1 4668 0 is_stmt 1
 6890 0138 5E23     		movs	r3, #94
 6891 013a E35A     		ldrh	r3, [r4, r3]
 6892 013c 9BB2     		uxth	r3, r3
 6893              	.LVL437:
4669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 6894              		.loc 1 4669 0
 6895 013e 002B     		cmp	r3, #0
 6896 0140 22D0     		beq	.L210
 6897              		.loc 1 4669 0 is_stmt 0 discriminator 1
 6898 0142 6822     		movs	r2, #104
 6899 0144 A25A     		ldrh	r2, [r4, r2]
 6900 0146 9342     		cmp	r3, r2
 6901 0148 1ED2     		bcs	.L210
 6902              	.LBB1238:
 6903              	.LBB1239:
 6904              	.LBB1240:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/cceLjgLz.s 			page 221


 6905              		.loc 2 453 0 is_stmt 1
 6906              		.syntax divided
 6907              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6908 014a EFF31081 		MRS r1, primask
 6909              	@ 0 "" 2
 6910              	.LVL438:
 6911              		.thumb
 6912              		.syntax unified
 6913              	.LBE1240:
 6914              	.LBE1239:
 6915              	.LBB1241:
 6916              	.LBB1242:
 6917              		.loc 2 481 0
 6918 014e 0123     		movs	r3, #1
 6919              	.LVL439:
 6920              		.syntax divided
 6921              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6922 0150 83F31088 		MSR primask, r3
 6923              	@ 0 "" 2
 6924              	.LVL440:
 6925              		.thumb
 6926              		.syntax unified
 6927              	.LBE1242:
 6928              	.LBE1241:
4670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
4671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 6929              		.loc 1 4672 0
 6930 0154 2268     		ldr	r2, [r4]
 6931 0156 9068     		ldr	r0, [r2, #8]
 6932 0158 0F4B     		ldr	r3, .L223+8
 6933 015a 0340     		ands	r3, r0
 6934 015c 9360     		str	r3, [r2, #8]
 6935              	.LBB1243:
 6936              	.LBB1244:
 6937              		.loc 2 481 0
 6938              		.syntax divided
 6939              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6940 015e 81F31088 		MSR primask, r1
 6941              	@ 0 "" 2
 6942              		.thumb
 6943              		.syntax unified
 6944              	.LBE1244:
 6945              	.LBE1243:
 6946              	.LBE1238:
4673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Update the RxISR function pointer */
4675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 6947              		.loc 1 4675 0
 6948 0162 0E4B     		ldr	r3, .L223+12
 6949 0164 6367     		str	r3, [r4, #116]
 6950              	.LBB1245:
 6951              	.LBB1246:
 6952              	.LBB1247:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6953              		.loc 2 453 0
 6954              		.syntax divided
ARM GAS  /tmp/cceLjgLz.s 			page 222


 6955              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6956 0166 EFF31081 		MRS r1, primask
 6957              	@ 0 "" 2
 6958              	.LVL441:
 6959              		.thumb
 6960              		.syntax unified
 6961              	.LBE1247:
 6962              	.LBE1246:
 6963              	.LBB1248:
 6964              	.LBB1249:
 6965              		.loc 2 481 0
 6966 016a 0123     		movs	r3, #1
 6967              		.syntax divided
 6968              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6969 016c 83F31088 		MSR primask, r3
 6970              	@ 0 "" 2
 6971              	.LVL442:
 6972              		.thumb
 6973              		.syntax unified
 6974              	.LBE1249:
 6975              	.LBE1248:
4676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
4677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 6976              		.loc 1 4678 0
 6977 0170 2268     		ldr	r2, [r4]
 6978 0172 1068     		ldr	r0, [r2]
 6979 0174 1F33     		adds	r3, r3, #31
 6980 0176 0343     		orrs	r3, r0
 6981 0178 1360     		str	r3, [r2]
 6982              	.LBB1250:
 6983              	.LBB1251:
 6984              		.loc 2 481 0
 6985              		.syntax divided
 6986              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6987 017a 81F31088 		MSR primask, r1
 6988              	@ 0 "" 2
 6989              		.thumb
 6990              		.syntax unified
 6991 017e 03E0     		b	.L210
 6992              	.LVL443:
 6993              	.L211:
 6994              	.LBE1251:
 6995              	.LBE1250:
 6996              	.LBE1245:
4679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
4680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
4681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   else
4682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
4683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 6997              		.loc 1 4684 0
 6998 0180 9969     		ldr	r1, [r3, #24]
 6999 0182 0822     		movs	r2, #8
 7000 0184 0A43     		orrs	r2, r1
 7001 0186 9A61     		str	r2, [r3, #24]
 7002              	.LVL444:
ARM GAS  /tmp/cceLjgLz.s 			page 223


 7003              	.L210:
4685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
4686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 7004              		.loc 1 4686 0
 7005              		@ sp needed
 7006              	.LVL445:
 7007              	.LVL446:
 7008              	.LVL447:
 7009              	.LVL448:
 7010              	.LVL449:
 7011 0188 0CBC     		pop	{r2, r3}
 7012 018a 9046     		mov	r8, r2
 7013 018c 9946     		mov	r9, r3
 7014 018e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7015              	.L224:
 7016              		.align	2
 7017              	.L223:
 7018 0190 FFFEFFFF 		.word	-257
 7019 0194 FEFFFFEF 		.word	-268435458
 7020 0198 FFFFFFEF 		.word	-268435457
 7021 019c 00000000 		.word	UART_RxISR_16BIT
 7022              		.cfi_endproc
 7023              	.LFE379:
 7025              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 7026              		.align	2
 7027              		.code	16
 7028              		.thumb_func
 7030              	UART_DMARxHalfCplt:
 7031              	.LFB364:
3785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 7032              		.loc 1 3785 0
 7033              		.cfi_startproc
 7034              		@ args = 0, pretend = 0, frame = 0
 7035              		@ frame_needed = 0, uses_anonymous_args = 0
 7036              	.LVL450:
 7037 0000 10B5     		push	{r4, lr}
 7038              	.LCFI35:
 7039              		.cfi_def_cfa_offset 8
 7040              		.cfi_offset 4, -8
 7041              		.cfi_offset 14, -4
3786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7042              		.loc 1 3786 0
 7043 0002 806A     		ldr	r0, [r0, #40]
 7044              	.LVL451:
3790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7045              		.loc 1 3790 0
 7046 0004 0123     		movs	r3, #1
 7047 0006 0367     		str	r3, [r0, #112]
3794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7048              		.loc 1 3794 0
 7049 0008 C36E     		ldr	r3, [r0, #108]
 7050 000a 012B     		cmp	r3, #1
 7051 000c 05D1     		bne	.L226
3801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7052              		.loc 1 3801 0
 7053 000e 5B33     		adds	r3, r3, #91
 7054 0010 C15A     		ldrh	r1, [r0, r3]
ARM GAS  /tmp/cceLjgLz.s 			page 224


 7055 0012 4908     		lsrs	r1, r1, #1
 7056 0014 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 7057              	.LVL452:
 7058 0018 01E0     		b	.L225
 7059              	.LVL453:
 7060              	.L226:
3812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7061              		.loc 1 3812 0
 7062 001a FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 7063              	.LVL454:
 7064              	.L225:
3815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7065              		.loc 1 3815 0
 7066              		@ sp needed
 7067 001e 10BD     		pop	{r4, pc}
 7068              		.cfi_endproc
 7069              	.LFE364:
 7071              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 7072              		.align	2
 7073              		.code	16
 7074              		.thumb_func
 7076              	UART_DMAReceiveCplt:
 7077              	.LFB363:
3724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 7078              		.loc 1 3724 0
 7079              		.cfi_startproc
 7080              		@ args = 0, pretend = 0, frame = 0
 7081              		@ frame_needed = 0, uses_anonymous_args = 0
 7082              	.LVL455:
 7083 0000 70B5     		push	{r4, r5, r6, lr}
 7084              	.LCFI36:
 7085              		.cfi_def_cfa_offset 16
 7086              		.cfi_offset 4, -16
 7087              		.cfi_offset 5, -12
 7088              		.cfi_offset 6, -8
 7089              		.cfi_offset 14, -4
3725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7090              		.loc 1 3725 0
 7091 0002 836A     		ldr	r3, [r0, #40]
 7092              	.LVL456:
3728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7093              		.loc 1 3728 0
 7094 0004 0268     		ldr	r2, [r0]
 7095 0006 1268     		ldr	r2, [r2]
 7096 0008 9206     		lsls	r2, r2, #26
 7097 000a 36D4     		bmi	.L229
3730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7098              		.loc 1 3730 0
 7099 000c 0021     		movs	r1, #0
 7100 000e 5E22     		movs	r2, #94
 7101 0010 9952     		strh	r1, [r3, r2]
 7102              	.LBB1252:
 7103              	.LBB1253:
 7104              	.LBB1254:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7105              		.loc 2 453 0
 7106              		.syntax divided
ARM GAS  /tmp/cceLjgLz.s 			page 225


 7107              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7108 0012 EFF31084 		MRS r4, primask
 7109              	@ 0 "" 2
 7110              	.LVL457:
 7111              		.thumb
 7112              		.syntax unified
 7113              	.LBE1254:
 7114              	.LBE1253:
 7115              	.LBB1255:
 7116              	.LBB1256:
 7117              		.loc 2 481 0
 7118 0016 0120     		movs	r0, #1
 7119              	.LVL458:
 7120              		.syntax divided
 7121              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7122 0018 80F31088 		MSR primask, r0
 7123              	@ 0 "" 2
 7124              	.LVL459:
 7125              		.thumb
 7126              		.syntax unified
 7127              	.LBE1256:
 7128              	.LBE1255:
3733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7129              		.loc 1 3733 0
 7130 001c 1968     		ldr	r1, [r3]
 7131 001e 0D68     		ldr	r5, [r1]
 7132 0020 1D4A     		ldr	r2, .L232
 7133 0022 2A40     		ands	r2, r5
 7134 0024 0A60     		str	r2, [r1]
 7135              	.LBB1257:
 7136              	.LBB1258:
 7137              		.loc 2 481 0
 7138              		.syntax divided
 7139              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7140 0026 84F31088 		MSR primask, r4
 7141              	@ 0 "" 2
 7142              		.thumb
 7143              		.syntax unified
 7144              	.LBE1258:
 7145              	.LBE1257:
 7146              	.LBE1252:
 7147              	.LBB1259:
 7148              	.LBB1260:
 7149              	.LBB1261:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7150              		.loc 2 453 0
 7151              		.syntax divided
 7152              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7153 002a EFF31084 		MRS r4, primask
 7154              	@ 0 "" 2
 7155              	.LVL460:
 7156              		.thumb
 7157              		.syntax unified
 7158              	.LBE1261:
 7159              	.LBE1260:
 7160              	.LBB1262:
 7161              	.LBB1263:
ARM GAS  /tmp/cceLjgLz.s 			page 226


 7162              		.loc 2 481 0
 7163 002e 0122     		movs	r2, #1
 7164              		.syntax divided
 7165              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7166 0030 82F31088 		MSR primask, r2
 7167              	@ 0 "" 2
 7168              	.LVL461:
 7169              		.thumb
 7170              		.syntax unified
 7171              	.LBE1263:
 7172              	.LBE1262:
3734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7173              		.loc 1 3734 0
 7174 0034 1968     		ldr	r1, [r3]
 7175 0036 8A68     		ldr	r2, [r1, #8]
 7176 0038 8243     		bics	r2, r0
 7177 003a 8A60     		str	r2, [r1, #8]
 7178              	.LBB1264:
 7179              	.LBB1265:
 7180              		.loc 2 481 0
 7181              		.syntax divided
 7182              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7183 003c 84F31088 		MSR primask, r4
 7184              	@ 0 "" 2
 7185              		.thumb
 7186              		.syntax unified
 7187              	.LBE1265:
 7188              	.LBE1264:
 7189              	.LBE1259:
 7190              	.LBB1266:
 7191              	.LBB1267:
 7192              	.LBB1268:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7193              		.loc 2 453 0
 7194              		.syntax divided
 7195              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7196 0040 EFF31080 		MRS r0, primask
 7197              	@ 0 "" 2
 7198              	.LVL462:
 7199              		.thumb
 7200              		.syntax unified
 7201              	.LBE1268:
 7202              	.LBE1267:
 7203              	.LBB1269:
 7204              	.LBB1270:
 7205              		.loc 2 481 0
 7206 0044 0122     		movs	r2, #1
 7207              		.syntax divided
 7208              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7209 0046 82F31088 		MSR primask, r2
 7210              	@ 0 "" 2
 7211              	.LVL463:
 7212              		.thumb
 7213              		.syntax unified
 7214              	.LBE1270:
 7215              	.LBE1269:
3738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 227


 7216              		.loc 1 3738 0
 7217 004a 1968     		ldr	r1, [r3]
 7218 004c 8A68     		ldr	r2, [r1, #8]
 7219 004e 4024     		movs	r4, #64
 7220 0050 A243     		bics	r2, r4
 7221 0052 8A60     		str	r2, [r1, #8]
 7222              	.LBB1271:
 7223              	.LBB1272:
 7224              		.loc 2 481 0
 7225              		.syntax divided
 7226              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7227 0054 80F31088 		MSR primask, r0
 7228              	@ 0 "" 2
 7229              		.thumb
 7230              		.syntax unified
 7231              	.LBE1272:
 7232              	.LBE1271:
 7233              	.LBE1266:
3741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7234              		.loc 1 3741 0
 7235 0058 2021     		movs	r1, #32
 7236 005a 8C22     		movs	r2, #140
 7237 005c 9950     		str	r1, [r3, r2]
3744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7238              		.loc 1 3744 0
 7239 005e DA6E     		ldr	r2, [r3, #108]
 7240 0060 012A     		cmp	r2, #1
 7241 0062 0AD1     		bne	.L229
 7242              	.LBB1273:
 7243              	.LBB1274:
 7244              	.LBB1275:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7245              		.loc 2 453 0
 7246              		.syntax divided
 7247              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7248 0064 EFF31080 		MRS r0, primask
 7249              	@ 0 "" 2
 7250              	.LVL464:
 7251              		.thumb
 7252              		.syntax unified
 7253              	.LBE1275:
 7254              	.LBE1274:
 7255              	.LBB1276:
 7256              	.LBB1277:
 7257              		.loc 2 481 0
 7258              		.syntax divided
 7259              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7260 0068 82F31088 		MSR primask, r2
 7261              	@ 0 "" 2
 7262              	.LVL465:
 7263              		.thumb
 7264              		.syntax unified
 7265              	.LBE1277:
 7266              	.LBE1276:
3746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7267              		.loc 1 3746 0
 7268 006c 1968     		ldr	r1, [r3]
ARM GAS  /tmp/cceLjgLz.s 			page 228


 7269 006e 0A68     		ldr	r2, [r1]
 7270 0070 303C     		subs	r4, r4, #48
 7271 0072 A243     		bics	r2, r4
 7272 0074 0A60     		str	r2, [r1]
 7273              	.LBB1278:
 7274              	.LBB1279:
 7275              		.loc 2 481 0
 7276              		.syntax divided
 7277              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7278 0076 80F31088 		MSR primask, r0
 7279              	@ 0 "" 2
 7280              		.thumb
 7281              		.syntax unified
 7282              	.L229:
 7283              	.LBE1279:
 7284              	.LBE1278:
 7285              	.LBE1273:
3752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7286              		.loc 1 3752 0
 7287 007a 0022     		movs	r2, #0
 7288 007c 1A67     		str	r2, [r3, #112]
3756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 7289              		.loc 1 3756 0
 7290 007e DA6E     		ldr	r2, [r3, #108]
 7291 0080 012A     		cmp	r2, #1
 7292 0082 05D1     		bne	.L230
3763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7293              		.loc 1 3763 0
 7294 0084 5B32     		adds	r2, r2, #91
 7295 0086 995A     		ldrh	r1, [r3, r2]
 7296 0088 1800     		movs	r0, r3
 7297 008a FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 7298              	.LVL466:
 7299 008e 02E0     		b	.L228
 7300              	.LVL467:
 7301              	.L230:
3774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7302              		.loc 1 3774 0
 7303 0090 1800     		movs	r0, r3
 7304 0092 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 7305              	.LVL468:
 7306              	.L228:
3777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7307              		.loc 1 3777 0
 7308              		@ sp needed
 7309 0096 70BD     		pop	{r4, r5, r6, pc}
 7310              	.L233:
 7311              		.align	2
 7312              	.L232:
 7313 0098 FFFEFFFF 		.word	-257
 7314              		.cfi_endproc
 7315              	.LFE363:
 7317              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 7318              		.align	2
 7319              		.global	HAL_UART_ReceiverTimeout_Config
 7320              		.code	16
 7321              		.thumb_func
ARM GAS  /tmp/cceLjgLz.s 			page 229


 7323              	HAL_UART_ReceiverTimeout_Config:
 7324              	.LFB342:
2804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 7325              		.loc 1 2804 0
 7326              		.cfi_startproc
 7327              		@ args = 0, pretend = 0, frame = 0
 7328              		@ frame_needed = 0, uses_anonymous_args = 0
 7329              		@ link register save eliminated.
 7330              	.LVL469:
2808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 7331              		.loc 1 2808 0
 7332 0000 0268     		ldr	r2, [r0]
 7333 0002 5369     		ldr	r3, [r2, #20]
 7334 0004 1B0E     		lsrs	r3, r3, #24
 7335 0006 1B06     		lsls	r3, r3, #24
 7336 0008 0B43     		orrs	r3, r1
 7337 000a 5361     		str	r3, [r2, #20]
2810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7338              		.loc 1 2810 0
 7339              		@ sp needed
 7340 000c 7047     		bx	lr
 7341              		.cfi_endproc
 7342              	.LFE342:
 7344 000e C046     		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 7345              		.align	2
 7346              		.global	HAL_UART_EnableReceiverTimeout
 7347              		.code	16
 7348              		.thumb_func
 7350              	HAL_UART_EnableReceiverTimeout:
 7351              	.LFB343:
2819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 7352              		.loc 1 2819 0
 7353              		.cfi_startproc
 7354              		@ args = 0, pretend = 0, frame = 0
 7355              		@ frame_needed = 0, uses_anonymous_args = 0
 7356              	.LVL470:
 7357 0000 30B5     		push	{r4, r5, lr}
 7358              	.LCFI37:
 7359              		.cfi_def_cfa_offset 12
 7360              		.cfi_offset 4, -12
 7361              		.cfi_offset 5, -8
 7362              		.cfi_offset 14, -4
2822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7363              		.loc 1 2822 0
 7364 0002 8823     		movs	r3, #136
 7365 0004 C358     		ldr	r3, [r0, r3]
 7366 0006 202B     		cmp	r3, #32
 7367 0008 15D1     		bne	.L237
2825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7368              		.loc 1 2825 0
 7369 000a 6433     		adds	r3, r3, #100
 7370 000c C35C     		ldrb	r3, [r0, r3]
 7371 000e 012B     		cmp	r3, #1
 7372 0010 13D0     		beq	.L238
2825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7373              		.loc 1 2825 0 is_stmt 0 discriminator 2
 7374 0012 8422     		movs	r2, #132
ARM GAS  /tmp/cceLjgLz.s 			page 230


 7375 0014 0123     		movs	r3, #1
 7376 0016 8354     		strb	r3, [r0, r2]
2827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7377              		.loc 1 2827 0 is_stmt 1 discriminator 2
 7378 0018 8821     		movs	r1, #136
 7379 001a 2333     		adds	r3, r3, #35
 7380 001c 4350     		str	r3, [r0, r1]
2830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7381              		.loc 1 2830 0 discriminator 2
 7382 001e 0468     		ldr	r4, [r0]
 7383 0020 6368     		ldr	r3, [r4, #4]
 7384 0022 8025     		movs	r5, #128
 7385 0024 2D04     		lsls	r5, r5, #16
 7386 0026 2B43     		orrs	r3, r5
 7387 0028 6360     		str	r3, [r4, #4]
2832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7388              		.loc 1 2832 0 discriminator 2
 7389 002a 2023     		movs	r3, #32
 7390 002c 4350     		str	r3, [r0, r1]
2835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7391              		.loc 1 2835 0 discriminator 2
 7392 002e 0023     		movs	r3, #0
 7393 0030 8354     		strb	r3, [r0, r2]
2837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7394              		.loc 1 2837 0 discriminator 2
 7395 0032 0020     		movs	r0, #0
 7396              	.LVL471:
 7397 0034 02E0     		b	.L236
 7398              	.LVL472:
 7399              	.L237:
2841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7400              		.loc 1 2841 0
 7401 0036 0220     		movs	r0, #2
 7402              	.LVL473:
 7403 0038 00E0     		b	.L236
 7404              	.LVL474:
 7405              	.L238:
2825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7406              		.loc 1 2825 0
 7407 003a 0220     		movs	r0, #2
 7408              	.LVL475:
 7409              	.L236:
2848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7410              		.loc 1 2848 0
 7411              		@ sp needed
 7412 003c 30BD     		pop	{r4, r5, pc}
 7413              		.cfi_endproc
 7414              	.LFE343:
 7416 003e C046     		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 7417              		.align	2
 7418              		.global	HAL_UART_DisableReceiverTimeout
 7419              		.code	16
 7420              		.thumb_func
 7422              	HAL_UART_DisableReceiverTimeout:
 7423              	.LFB344:
2857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 7424              		.loc 1 2857 0
ARM GAS  /tmp/cceLjgLz.s 			page 231


 7425              		.cfi_startproc
 7426              		@ args = 0, pretend = 0, frame = 0
 7427              		@ frame_needed = 0, uses_anonymous_args = 0
 7428              	.LVL476:
 7429 0000 30B5     		push	{r4, r5, lr}
 7430              	.LCFI38:
 7431              		.cfi_def_cfa_offset 12
 7432              		.cfi_offset 4, -12
 7433              		.cfi_offset 5, -8
 7434              		.cfi_offset 14, -4
2860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 7435              		.loc 1 2860 0
 7436 0002 8823     		movs	r3, #136
 7437 0004 C358     		ldr	r3, [r0, r3]
 7438 0006 202B     		cmp	r3, #32
 7439 0008 14D1     		bne	.L241
2863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7440              		.loc 1 2863 0
 7441 000a 6433     		adds	r3, r3, #100
 7442 000c C35C     		ldrb	r3, [r0, r3]
 7443 000e 012B     		cmp	r3, #1
 7444 0010 12D0     		beq	.L242
2863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7445              		.loc 1 2863 0 is_stmt 0 discriminator 2
 7446 0012 8422     		movs	r2, #132
 7447 0014 0123     		movs	r3, #1
 7448 0016 8354     		strb	r3, [r0, r2]
2865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7449              		.loc 1 2865 0 is_stmt 1 discriminator 2
 7450 0018 8821     		movs	r1, #136
 7451 001a 2333     		adds	r3, r3, #35
 7452 001c 4350     		str	r3, [r0, r1]
2868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7453              		.loc 1 2868 0 discriminator 2
 7454 001e 0468     		ldr	r4, [r0]
 7455 0020 6568     		ldr	r5, [r4, #4]
 7456 0022 064B     		ldr	r3, .L243
 7457 0024 2B40     		ands	r3, r5
 7458 0026 6360     		str	r3, [r4, #4]
2870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7459              		.loc 1 2870 0 discriminator 2
 7460 0028 2023     		movs	r3, #32
 7461 002a 4350     		str	r3, [r0, r1]
2873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7462              		.loc 1 2873 0 discriminator 2
 7463 002c 0023     		movs	r3, #0
 7464 002e 8354     		strb	r3, [r0, r2]
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7465              		.loc 1 2875 0 discriminator 2
 7466 0030 0020     		movs	r0, #0
 7467              	.LVL477:
 7468 0032 02E0     		b	.L240
 7469              	.LVL478:
 7470              	.L241:
2879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 7471              		.loc 1 2879 0
 7472 0034 0220     		movs	r0, #2
ARM GAS  /tmp/cceLjgLz.s 			page 232


 7473              	.LVL479:
 7474 0036 00E0     		b	.L240
 7475              	.LVL480:
 7476              	.L242:
2863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7477              		.loc 1 2863 0
 7478 0038 0220     		movs	r0, #2
 7479              	.LVL481:
 7480              	.L240:
2886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7481              		.loc 1 2886 0
 7482              		@ sp needed
 7483 003a 30BD     		pop	{r4, r5, pc}
 7484              	.L244:
 7485              		.align	2
 7486              	.L243:
 7487 003c FFFF7FFF 		.word	-8388609
 7488              		.cfi_endproc
 7489              	.LFE344:
 7491              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 7492              		.align	2
 7493              		.global	HAL_MultiProcessor_EnterMuteMode
 7494              		.code	16
 7495              		.thumb_func
 7497              	HAL_MultiProcessor_EnterMuteMode:
 7498              	.LFB347:
2935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 7499              		.loc 1 2935 0
 7500              		.cfi_startproc
 7501              		@ args = 0, pretend = 0, frame = 0
 7502              		@ frame_needed = 0, uses_anonymous_args = 0
 7503              		@ link register save eliminated.
 7504              	.LVL482:
2936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 7505              		.loc 1 2936 0
 7506 0000 0268     		ldr	r2, [r0]
 7507 0002 9169     		ldr	r1, [r2, #24]
 7508 0004 0423     		movs	r3, #4
 7509 0006 0B43     		orrs	r3, r1
 7510 0008 9361     		str	r3, [r2, #24]
2937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7511              		.loc 1 2937 0
 7512              		@ sp needed
 7513 000a 7047     		bx	lr
 7514              		.cfi_endproc
 7515              	.LFE347:
 7517              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 7518              		.align	2
 7519              		.global	HAL_HalfDuplex_EnableTransmitter
 7520              		.code	16
 7521              		.thumb_func
 7523              	HAL_HalfDuplex_EnableTransmitter:
 7524              	.LFB348:
2945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 7525              		.loc 1 2945 0
 7526              		.cfi_startproc
 7527              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cceLjgLz.s 			page 233


 7528              		@ frame_needed = 0, uses_anonymous_args = 0
 7529              	.LVL483:
 7530 0000 70B5     		push	{r4, r5, r6, lr}
 7531              	.LCFI39:
 7532              		.cfi_def_cfa_offset 16
 7533              		.cfi_offset 4, -16
 7534              		.cfi_offset 5, -12
 7535              		.cfi_offset 6, -8
 7536              		.cfi_offset 14, -4
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7537              		.loc 1 2946 0
 7538 0002 8423     		movs	r3, #132
 7539 0004 C35C     		ldrb	r3, [r0, r3]
 7540 0006 012B     		cmp	r3, #1
 7541 0008 23D0     		beq	.L248
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7542              		.loc 1 2946 0 is_stmt 0 discriminator 2
 7543 000a 8422     		movs	r2, #132
 7544 000c 0123     		movs	r3, #1
 7545 000e 8354     		strb	r3, [r0, r2]
2947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7546              		.loc 1 2947 0 is_stmt 1 discriminator 2
 7547 0010 8821     		movs	r1, #136
 7548 0012 2333     		adds	r3, r3, #35
 7549 0014 4350     		str	r3, [r0, r1]
 7550              	.LBB1280:
 7551              	.LBB1281:
 7552              	.LBB1282:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7553              		.loc 2 453 0 discriminator 2
 7554              		.syntax divided
 7555              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7556 0016 EFF31085 		MRS r5, primask
 7557              	@ 0 "" 2
 7558              	.LVL484:
 7559              		.thumb
 7560              		.syntax unified
 7561              	.LBE1282:
 7562              	.LBE1281:
 7563              	.LBB1283:
 7564              	.LBB1284:
 7565              		.loc 2 481 0 discriminator 2
 7566 001a 233B     		subs	r3, r3, #35
 7567              		.syntax divided
 7568              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7569 001c 83F31088 		MSR primask, r3
 7570              	@ 0 "" 2
 7571              	.LVL485:
 7572              		.thumb
 7573              		.syntax unified
 7574              	.LBE1284:
 7575              	.LBE1283:
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7576              		.loc 1 2950 0 discriminator 2
 7577 0020 0468     		ldr	r4, [r0]
 7578 0022 2368     		ldr	r3, [r4]
 7579 0024 0C26     		movs	r6, #12
ARM GAS  /tmp/cceLjgLz.s 			page 234


 7580 0026 B343     		bics	r3, r6
 7581 0028 2360     		str	r3, [r4]
 7582              	.LBB1285:
 7583              	.LBB1286:
 7584              		.loc 2 481 0 discriminator 2
 7585              		.syntax divided
 7586              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7587 002a 85F31088 		MSR primask, r5
 7588              	@ 0 "" 2
 7589              		.thumb
 7590              		.syntax unified
 7591              	.LBE1286:
 7592              	.LBE1285:
 7593              	.LBE1280:
 7594              	.LBB1287:
 7595              	.LBB1288:
 7596              	.LBB1289:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7597              		.loc 2 453 0 discriminator 2
 7598              		.syntax divided
 7599              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7600 002e EFF31085 		MRS r5, primask
 7601              	@ 0 "" 2
 7602              	.LVL486:
 7603              		.thumb
 7604              		.syntax unified
 7605              	.LBE1289:
 7606              	.LBE1288:
 7607              	.LBB1290:
 7608              	.LBB1291:
 7609              		.loc 2 481 0 discriminator 2
 7610 0032 0123     		movs	r3, #1
 7611              		.syntax divided
 7612              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7613 0034 83F31088 		MSR primask, r3
 7614              	@ 0 "" 2
 7615              	.LVL487:
 7616              		.thumb
 7617              		.syntax unified
 7618              	.LBE1291:
 7619              	.LBE1290:
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7620              		.loc 1 2953 0 discriminator 2
 7621 0038 0468     		ldr	r4, [r0]
 7622 003a 2668     		ldr	r6, [r4]
 7623 003c 0733     		adds	r3, r3, #7
 7624 003e 3343     		orrs	r3, r6
 7625 0040 2360     		str	r3, [r4]
 7626              	.LBB1292:
 7627              	.LBB1293:
 7628              		.loc 2 481 0 discriminator 2
 7629              		.syntax divided
 7630              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7631 0042 85F31088 		MSR primask, r5
 7632              	@ 0 "" 2
 7633              		.thumb
 7634              		.syntax unified
ARM GAS  /tmp/cceLjgLz.s 			page 235


 7635              	.LBE1293:
 7636              	.LBE1292:
 7637              	.LBE1287:
2955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7638              		.loc 1 2955 0 discriminator 2
 7639 0046 2023     		movs	r3, #32
 7640 0048 4350     		str	r3, [r0, r1]
2957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7641              		.loc 1 2957 0 discriminator 2
 7642 004a 0023     		movs	r3, #0
 7643 004c 8354     		strb	r3, [r0, r2]
2959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 7644              		.loc 1 2959 0 discriminator 2
 7645 004e 0020     		movs	r0, #0
 7646              	.LVL488:
 7647 0050 00E0     		b	.L247
 7648              	.LVL489:
 7649              	.L248:
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7650              		.loc 1 2946 0
 7651 0052 0220     		movs	r0, #2
 7652              	.LVL490:
 7653              	.L247:
2960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7654              		.loc 1 2960 0
 7655              		@ sp needed
 7656 0054 70BD     		pop	{r4, r5, r6, pc}
 7657              		.cfi_endproc
 7658              	.LFE348:
 7660 0056 C046     		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 7661              		.align	2
 7662              		.global	HAL_HalfDuplex_EnableReceiver
 7663              		.code	16
 7664              		.thumb_func
 7666              	HAL_HalfDuplex_EnableReceiver:
 7667              	.LFB349:
2968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 7668              		.loc 1 2968 0
 7669              		.cfi_startproc
 7670              		@ args = 0, pretend = 0, frame = 0
 7671              		@ frame_needed = 0, uses_anonymous_args = 0
 7672              	.LVL491:
 7673 0000 70B5     		push	{r4, r5, r6, lr}
 7674              	.LCFI40:
 7675              		.cfi_def_cfa_offset 16
 7676              		.cfi_offset 4, -16
 7677              		.cfi_offset 5, -12
 7678              		.cfi_offset 6, -8
 7679              		.cfi_offset 14, -4
2969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7680              		.loc 1 2969 0
 7681 0002 8423     		movs	r3, #132
 7682 0004 C35C     		ldrb	r3, [r0, r3]
 7683 0006 012B     		cmp	r3, #1
 7684 0008 23D0     		beq	.L251
2969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7685              		.loc 1 2969 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/cceLjgLz.s 			page 236


 7686 000a 8422     		movs	r2, #132
 7687 000c 0123     		movs	r3, #1
 7688 000e 8354     		strb	r3, [r0, r2]
2970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7689              		.loc 1 2970 0 is_stmt 1 discriminator 2
 7690 0010 8821     		movs	r1, #136
 7691 0012 2333     		adds	r3, r3, #35
 7692 0014 4350     		str	r3, [r0, r1]
 7693              	.LBB1294:
 7694              	.LBB1295:
 7695              	.LBB1296:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7696              		.loc 2 453 0 discriminator 2
 7697              		.syntax divided
 7698              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7699 0016 EFF31085 		MRS r5, primask
 7700              	@ 0 "" 2
 7701              	.LVL492:
 7702              		.thumb
 7703              		.syntax unified
 7704              	.LBE1296:
 7705              	.LBE1295:
 7706              	.LBB1297:
 7707              	.LBB1298:
 7708              		.loc 2 481 0 discriminator 2
 7709 001a 233B     		subs	r3, r3, #35
 7710              		.syntax divided
 7711              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7712 001c 83F31088 		MSR primask, r3
 7713              	@ 0 "" 2
 7714              	.LVL493:
 7715              		.thumb
 7716              		.syntax unified
 7717              	.LBE1298:
 7718              	.LBE1297:
2973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7719              		.loc 1 2973 0 discriminator 2
 7720 0020 0468     		ldr	r4, [r0]
 7721 0022 2368     		ldr	r3, [r4]
 7722 0024 0C26     		movs	r6, #12
 7723 0026 B343     		bics	r3, r6
 7724 0028 2360     		str	r3, [r4]
 7725              	.LBB1299:
 7726              	.LBB1300:
 7727              		.loc 2 481 0 discriminator 2
 7728              		.syntax divided
 7729              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7730 002a 85F31088 		MSR primask, r5
 7731              	@ 0 "" 2
 7732              		.thumb
 7733              		.syntax unified
 7734              	.LBE1300:
 7735              	.LBE1299:
 7736              	.LBE1294:
 7737              	.LBB1301:
 7738              	.LBB1302:
 7739              	.LBB1303:
ARM GAS  /tmp/cceLjgLz.s 			page 237


 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7740              		.loc 2 453 0 discriminator 2
 7741              		.syntax divided
 7742              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7743 002e EFF31085 		MRS r5, primask
 7744              	@ 0 "" 2
 7745              	.LVL494:
 7746              		.thumb
 7747              		.syntax unified
 7748              	.LBE1303:
 7749              	.LBE1302:
 7750              	.LBB1304:
 7751              	.LBB1305:
 7752              		.loc 2 481 0 discriminator 2
 7753 0032 0123     		movs	r3, #1
 7754              		.syntax divided
 7755              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7756 0034 83F31088 		MSR primask, r3
 7757              	@ 0 "" 2
 7758              	.LVL495:
 7759              		.thumb
 7760              		.syntax unified
 7761              	.LBE1305:
 7762              	.LBE1304:
2976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7763              		.loc 1 2976 0 discriminator 2
 7764 0038 0468     		ldr	r4, [r0]
 7765 003a 2668     		ldr	r6, [r4]
 7766 003c 0333     		adds	r3, r3, #3
 7767 003e 3343     		orrs	r3, r6
 7768 0040 2360     		str	r3, [r4]
 7769              	.LBB1306:
 7770              	.LBB1307:
 7771              		.loc 2 481 0 discriminator 2
 7772              		.syntax divided
 7773              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7774 0042 85F31088 		MSR primask, r5
 7775              	@ 0 "" 2
 7776              		.thumb
 7777              		.syntax unified
 7778              	.LBE1307:
 7779              	.LBE1306:
 7780              	.LBE1301:
2978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7781              		.loc 1 2978 0 discriminator 2
 7782 0046 2023     		movs	r3, #32
 7783 0048 4350     		str	r3, [r0, r1]
2980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7784              		.loc 1 2980 0 discriminator 2
 7785 004a 0023     		movs	r3, #0
 7786 004c 8354     		strb	r3, [r0, r2]
2982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 7787              		.loc 1 2982 0 discriminator 2
 7788 004e 0020     		movs	r0, #0
 7789              	.LVL496:
 7790 0050 00E0     		b	.L250
 7791              	.LVL497:
ARM GAS  /tmp/cceLjgLz.s 			page 238


 7792              	.L251:
2969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7793              		.loc 1 2969 0
 7794 0052 0220     		movs	r0, #2
 7795              	.LVL498:
 7796              	.L250:
2983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7797              		.loc 1 2983 0
 7798              		@ sp needed
 7799 0054 70BD     		pop	{r4, r5, r6, pc}
 7800              		.cfi_endproc
 7801              	.LFE349:
 7803 0056 C046     		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 7804              		.align	2
 7805              		.global	HAL_LIN_SendBreak
 7806              		.code	16
 7807              		.thumb_func
 7809              	HAL_LIN_SendBreak:
 7810              	.LFB350:
2992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the parameters */
 7811              		.loc 1 2992 0
 7812              		.cfi_startproc
 7813              		@ args = 0, pretend = 0, frame = 0
 7814              		@ frame_needed = 0, uses_anonymous_args = 0
 7815              	.LVL499:
 7816 0000 30B5     		push	{r4, r5, lr}
 7817              	.LCFI41:
 7818              		.cfi_def_cfa_offset 12
 7819              		.cfi_offset 4, -12
 7820              		.cfi_offset 5, -8
 7821              		.cfi_offset 14, -4
2996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7822              		.loc 1 2996 0
 7823 0002 8423     		movs	r3, #132
 7824 0004 C35C     		ldrb	r3, [r0, r3]
 7825 0006 012B     		cmp	r3, #1
 7826 0008 10D0     		beq	.L254
2996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7827              		.loc 1 2996 0 is_stmt 0 discriminator 2
 7828 000a 8422     		movs	r2, #132
 7829 000c 0123     		movs	r3, #1
 7830 000e 8354     		strb	r3, [r0, r2]
2998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7831              		.loc 1 2998 0 is_stmt 1 discriminator 2
 7832 0010 8821     		movs	r1, #136
 7833 0012 2333     		adds	r3, r3, #35
 7834 0014 4350     		str	r3, [r0, r1]
3001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7835              		.loc 1 3001 0 discriminator 2
 7836 0016 0468     		ldr	r4, [r0]
 7837 0018 A569     		ldr	r5, [r4, #24]
 7838 001a 223B     		subs	r3, r3, #34
 7839 001c 2B43     		orrs	r3, r5
 7840 001e A361     		str	r3, [r4, #24]
3003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7841              		.loc 1 3003 0 discriminator 2
 7842 0020 2023     		movs	r3, #32
ARM GAS  /tmp/cceLjgLz.s 			page 239


 7843 0022 4350     		str	r3, [r0, r1]
3005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7844              		.loc 1 3005 0 discriminator 2
 7845 0024 0023     		movs	r3, #0
 7846 0026 8354     		strb	r3, [r0, r2]
3007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 7847              		.loc 1 3007 0 discriminator 2
 7848 0028 0020     		movs	r0, #0
 7849              	.LVL500:
 7850 002a 00E0     		b	.L253
 7851              	.LVL501:
 7852              	.L254:
2996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7853              		.loc 1 2996 0
 7854 002c 0220     		movs	r0, #2
 7855              	.LVL502:
 7856              	.L253:
3008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7857              		.loc 1 3008 0
 7858              		@ sp needed
 7859 002e 30BD     		pop	{r4, r5, pc}
 7860              		.cfi_endproc
 7861              	.LFE350:
 7863              		.section	.text.HAL_UART_GetState,"ax",%progbits
 7864              		.align	2
 7865              		.global	HAL_UART_GetState
 7866              		.code	16
 7867              		.thumb_func
 7869              	HAL_UART_GetState:
 7870              	.LFB351:
3037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t temp1;
 7871              		.loc 1 3037 0
 7872              		.cfi_startproc
 7873              		@ args = 0, pretend = 0, frame = 0
 7874              		@ frame_needed = 0, uses_anonymous_args = 0
 7875              		@ link register save eliminated.
 7876              	.LVL503:
3040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   temp2 = huart->RxState;
 7877              		.loc 1 3040 0
 7878 0000 8823     		movs	r3, #136
 7879 0002 C258     		ldr	r2, [r0, r3]
 7880              	.LVL504:
3041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7881              		.loc 1 3041 0
 7882 0004 0433     		adds	r3, r3, #4
 7883 0006 C358     		ldr	r3, [r0, r3]
 7884              	.LVL505:
3043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 7885              		.loc 1 3043 0
 7886 0008 1A43     		orrs	r2, r3
 7887              	.LVL506:
 7888 000a 1000     		movs	r0, r2
 7889              	.LVL507:
3044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7890              		.loc 1 3044 0
 7891              		@ sp needed
 7892 000c 7047     		bx	lr
ARM GAS  /tmp/cceLjgLz.s 			page 240


 7893              		.cfi_endproc
 7894              	.LFE351:
 7896 000e C046     		.section	.text.HAL_UART_GetError,"ax",%progbits
 7897              		.align	2
 7898              		.global	HAL_UART_GetError
 7899              		.code	16
 7900              		.thumb_func
 7902              	HAL_UART_GetError:
 7903              	.LFB352:
3053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   return huart->ErrorCode;
 7904              		.loc 1 3053 0
 7905              		.cfi_startproc
 7906              		@ args = 0, pretend = 0, frame = 0
 7907              		@ frame_needed = 0, uses_anonymous_args = 0
 7908              		@ link register save eliminated.
 7909              	.LVL508:
3054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 7910              		.loc 1 3054 0
 7911 0000 9023     		movs	r3, #144
 7912 0002 C058     		ldr	r0, [r0, r3]
 7913              	.LVL509:
3055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** /**
 7914              		.loc 1 3055 0
 7915              		@ sp needed
 7916 0004 7047     		bx	lr
 7917              		.cfi_endproc
 7918              	.LFE352:
 7920              		.global	__aeabi_uidiv
 7921              		.section	.text.UART_SetConfig,"ax",%progbits
 7922              		.align	2
 7923              		.global	UART_SetConfig
 7924              		.code	16
 7925              		.thumb_func
 7927              	UART_SetConfig:
 7928              	.LFB353:
3099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t tmpreg;
 7929              		.loc 1 3099 0
 7930              		.cfi_startproc
 7931              		@ args = 0, pretend = 0, frame = 0
 7932              		@ frame_needed = 0, uses_anonymous_args = 0
 7933              	.LVL510:
 7934 0000 70B5     		push	{r4, r5, r6, lr}
 7935              	.LCFI42:
 7936              		.cfi_def_cfa_offset 16
 7937              		.cfi_offset 4, -16
 7938              		.cfi_offset 5, -12
 7939              		.cfi_offset 6, -8
 7940              		.cfi_offset 14, -4
 7941 0002 0400     		movs	r4, r0
 7942              	.LVL511:
3134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 7943              		.loc 1 3134 0
 7944 0004 8368     		ldr	r3, [r0, #8]
 7945 0006 0269     		ldr	r2, [r0, #16]
 7946 0008 1343     		orrs	r3, r2
 7947 000a 4269     		ldr	r2, [r0, #20]
 7948 000c 1343     		orrs	r3, r2
ARM GAS  /tmp/cceLjgLz.s 			page 241


 7949 000e C169     		ldr	r1, [r0, #28]
 7950 0010 1943     		orrs	r1, r3
 7951              	.LVL512:
3135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7952              		.loc 1 3135 0
 7953 0012 0068     		ldr	r0, [r0]
 7954              	.LVL513:
 7955 0014 0368     		ldr	r3, [r0]
 7956 0016 6E4A     		ldr	r2, .L293
 7957 0018 1340     		ands	r3, r2
 7958 001a 0B43     		orrs	r3, r1
 7959 001c 0360     		str	r3, [r0]
3140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7960              		.loc 1 3140 0
 7961 001e 2268     		ldr	r2, [r4]
 7962 0020 5168     		ldr	r1, [r2, #4]
 7963              	.LVL514:
 7964 0022 6C4B     		ldr	r3, .L293+4
 7965 0024 0B40     		ands	r3, r1
 7966 0026 E168     		ldr	r1, [r4, #12]
 7967 0028 0B43     		orrs	r3, r1
 7968 002a 5360     		str	r3, [r2, #4]
 7969              	.LVL515:
3152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 7970              		.loc 1 3152 0
 7971 002c A169     		ldr	r1, [r4, #24]
 7972 002e 236A     		ldr	r3, [r4, #32]
 7973 0030 1943     		orrs	r1, r3
 7974              	.LVL516:
3154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7975              		.loc 1 3154 0
 7976 0032 2068     		ldr	r0, [r4]
 7977 0034 8368     		ldr	r3, [r0, #8]
 7978 0036 684A     		ldr	r2, .L293+8
 7979 0038 1340     		ands	r3, r2
 7980 003a 0B43     		orrs	r3, r1
 7981 003c 8360     		str	r3, [r0, #8]
3159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7982              		.loc 1 3159 0
 7983 003e 2268     		ldr	r2, [r4]
 7984 0040 D36A     		ldr	r3, [r2, #44]
 7985 0042 0F21     		movs	r1, #15
 7986              	.LVL517:
 7987 0044 8B43     		bics	r3, r1
 7988 0046 616A     		ldr	r1, [r4, #36]
 7989 0048 0B43     		orrs	r3, r1
 7990 004a D362     		str	r3, [r2, #44]
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7991              		.loc 1 3162 0
 7992 004c 2368     		ldr	r3, [r4]
 7993 004e 634A     		ldr	r2, .L293+12
 7994 0050 9342     		cmp	r3, r2
 7995 0052 14D1     		bne	.L258
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 7996              		.loc 1 3162 0 is_stmt 0 discriminator 1
 7997 0054 624B     		ldr	r3, .L293+16
 7998 0056 5B6D     		ldr	r3, [r3, #84]
ARM GAS  /tmp/cceLjgLz.s 			page 242


 7999 0058 0322     		movs	r2, #3
 8000 005a 1340     		ands	r3, r2
 8001 005c 012B     		cmp	r3, #1
 8002 005e 08D0     		beq	.L260
 8003 0060 002B     		cmp	r3, #0
 8004 0062 04D0     		beq	.L261
 8005 0064 022B     		cmp	r3, #2
 8006 0066 2CD0     		beq	.L284
 8007 0068 032B     		cmp	r3, #3
 8008 006a 04D0     		beq	.L263
 8009 006c 05E0     		b	.L292
 8010              	.L261:
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8011              		.loc 1 3162 0
 8012 006e 0023     		movs	r3, #0
 8013 0070 2EE0     		b	.L262
 8014              	.L260:
 8015              	.LVL518:
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8016              		.loc 1 3162 0 discriminator 5
 8017 0072 0423     		movs	r3, #4
 8018 0074 2CE0     		b	.L262
 8019              	.LVL519:
 8020              	.L263:
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8021              		.loc 1 3162 0 discriminator 7
 8022 0076 0823     		movs	r3, #8
 8023 0078 2AE0     		b	.L262
 8024              	.LVL520:
 8025              	.L292:
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8026              		.loc 1 3162 0 discriminator 3
 8027 007a 1023     		movs	r3, #16
 8028 007c 28E0     		b	.L262
 8029              	.LVL521:
 8030              	.L258:
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8031              		.loc 1 3162 0 discriminator 2
 8032 007e 594A     		ldr	r2, .L293+20
 8033 0080 9342     		cmp	r3, r2
 8034 0082 16D1     		bne	.L264
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8035              		.loc 1 3162 0 discriminator 8
 8036 0084 564B     		ldr	r3, .L293+16
 8037 0086 5B6D     		ldr	r3, [r3, #84]
 8038 0088 0C22     		movs	r2, #12
 8039 008a 1340     		ands	r3, r2
 8040 008c 042B     		cmp	r3, #4
 8041 008e 0AD0     		beq	.L266
 8042 0090 02D8     		bhi	.L267
 8043 0092 002B     		cmp	r3, #0
 8044 0094 05D0     		beq	.L268
 8045 0096 0AE0     		b	.L265
 8046              	.L267:
 8047 0098 082B     		cmp	r3, #8
 8048 009a 14D0     		beq	.L285
 8049 009c 0C2B     		cmp	r3, #12
ARM GAS  /tmp/cceLjgLz.s 			page 243


 8050 009e 04D0     		beq	.L269
 8051 00a0 05E0     		b	.L265
 8052              	.L268:
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8053              		.loc 1 3162 0
 8054 00a2 0023     		movs	r3, #0
 8055 00a4 14E0     		b	.L262
 8056              	.L266:
 8057              	.LVL522:
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8058              		.loc 1 3162 0 discriminator 12
 8059 00a6 0423     		movs	r3, #4
 8060 00a8 12E0     		b	.L262
 8061              	.LVL523:
 8062              	.L269:
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8063              		.loc 1 3162 0 discriminator 14
 8064 00aa 0823     		movs	r3, #8
 8065 00ac 10E0     		b	.L262
 8066              	.LVL524:
 8067              	.L265:
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8068              		.loc 1 3162 0 discriminator 10
 8069 00ae 1023     		movs	r3, #16
 8070 00b0 0EE0     		b	.L262
 8071              	.LVL525:
 8072              	.L264:
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8073              		.loc 1 3162 0 discriminator 9
 8074 00b2 4D4A     		ldr	r2, .L293+24
 8075 00b4 9342     		cmp	r3, r2
 8076 00b6 08D0     		beq	.L286
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8077              		.loc 1 3162 0 discriminator 16
 8078 00b8 4C4A     		ldr	r2, .L293+28
 8079 00ba 9342     		cmp	r3, r2
 8080 00bc 07D1     		bne	.L287
3162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8081              		.loc 1 3162 0
 8082 00be 0023     		movs	r3, #0
 8083 00c0 06E0     		b	.L262
 8084              	.L284:
 8085 00c2 0223     		movs	r3, #2
 8086 00c4 04E0     		b	.L262
 8087              	.L285:
 8088 00c6 0223     		movs	r3, #2
 8089 00c8 02E0     		b	.L262
 8090              	.L286:
 8091 00ca 0023     		movs	r3, #0
 8092 00cc 00E0     		b	.L262
 8093              	.L287:
 8094 00ce 1023     		movs	r3, #16
 8095              	.L262:
 8096              	.LVL526:
3218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8097              		.loc 1 3218 0 is_stmt 1
 8098 00d0 8022     		movs	r2, #128
ARM GAS  /tmp/cceLjgLz.s 			page 244


 8099 00d2 1202     		lsls	r2, r2, #8
 8100 00d4 E169     		ldr	r1, [r4, #28]
 8101 00d6 9142     		cmp	r1, r2
 8102 00d8 39D1     		bne	.L270
3220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8103              		.loc 1 3220 0
 8104 00da 022B     		cmp	r3, #2
 8105 00dc 08D0     		beq	.L272
 8106 00de 02D8     		bhi	.L273
 8107 00e0 002B     		cmp	r3, #0
 8108 00e2 08D0     		beq	.L274
 8109 00e4 0FE0     		b	.L271
 8110              	.L273:
 8111 00e6 042B     		cmp	r3, #4
 8112 00e8 09D0     		beq	.L275
 8113 00ea 082B     		cmp	r3, #8
 8114 00ec 0ED0     		beq	.L288
 8115 00ee 0AE0     		b	.L271
 8116              	.L272:
3226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 8117              		.loc 1 3226 0
 8118 00f0 3F48     		ldr	r0, .L293+32
3104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 8119              		.loc 1 3104 0
 8120 00f2 0025     		movs	r5, #0
 8121 00f4 0DE0     		b	.L276
 8122              	.L274:
3223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 8123              		.loc 1 3223 0
 8124 00f6 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 8125              	.LVL527:
3104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 8126              		.loc 1 3104 0
 8127 00fa 0025     		movs	r5, #0
3224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 8128              		.loc 1 3224 0
 8129 00fc 09E0     		b	.L276
 8130              	.LVL528:
 8131              	.L275:
3229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 8132              		.loc 1 3229 0
 8133 00fe FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 8134              	.LVL529:
3104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 8135              		.loc 1 3104 0
 8136 0102 0025     		movs	r5, #0
3230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 8137              		.loc 1 3230 0
 8138 0104 05E0     		b	.L276
 8139              	.LVL530:
 8140              	.L271:
3235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ret = HAL_ERROR;
 8141              		.loc 1 3235 0
 8142 0106 0020     		movs	r0, #0
3236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 8143              		.loc 1 3236 0
 8144 0108 0125     		movs	r5, #1
ARM GAS  /tmp/cceLjgLz.s 			page 245


3237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 8145              		.loc 1 3237 0
 8146 010a 02E0     		b	.L276
 8147              	.LVL531:
 8148              	.L288:
3232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 8149              		.loc 1 3232 0
 8150 010c 8020     		movs	r0, #128
 8151 010e 0002     		lsls	r0, r0, #8
3104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 8152              		.loc 1 3104 0
 8153 0110 0025     		movs	r5, #0
 8154              	.LVL532:
 8155              	.L276:
3241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8156              		.loc 1 3241 0
 8157 0112 0028     		cmp	r0, #0
 8158 0114 52D0     		beq	.L277
3243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8159              		.loc 1 3243 0
 8160 0116 636A     		ldr	r3, [r4, #36]
 8161 0118 5B00     		lsls	r3, r3, #1
 8162 011a 364A     		ldr	r2, .L293+36
 8163 011c 995A     		ldrh	r1, [r3, r2]
 8164 011e FFF7FEFF 		bl	__aeabi_uidiv
 8165              	.LVL533:
 8166 0122 4000     		lsls	r0, r0, #1
 8167 0124 6368     		ldr	r3, [r4, #4]
 8168 0126 5B08     		lsrs	r3, r3, #1
 8169 0128 C018     		adds	r0, r0, r3
 8170 012a 6168     		ldr	r1, [r4, #4]
 8171 012c FFF7FEFF 		bl	__aeabi_uidiv
 8172              	.LVL534:
3244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 8173              		.loc 1 3244 0
 8174 0130 0200     		movs	r2, r0
 8175 0132 103A     		subs	r2, r2, #16
 8176 0134 304B     		ldr	r3, .L293+40
 8177 0136 9A42     		cmp	r2, r3
 8178 0138 3DD8     		bhi	.L289
3246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8179              		.loc 1 3246 0
 8180 013a 83B2     		uxth	r3, r0
 8181 013c 0F22     		movs	r2, #15
 8182 013e 9343     		bics	r3, r2
 8183              	.LVL535:
3247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 8184              		.loc 1 3247 0
 8185 0140 4008     		lsrs	r0, r0, #1
 8186              	.LVL536:
 8187 0142 083A     		subs	r2, r2, #8
 8188 0144 1040     		ands	r0, r2
 8189 0146 1843     		orrs	r0, r3
 8190              	.LVL537:
3248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 8191              		.loc 1 3248 0
 8192 0148 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cceLjgLz.s 			page 246


 8193 014a D860     		str	r0, [r3, #12]
 8194 014c 36E0     		b	.L277
 8195              	.LVL538:
 8196              	.L270:
3258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8197              		.loc 1 3258 0
 8198 014e 022B     		cmp	r3, #2
 8199 0150 08D0     		beq	.L279
 8200 0152 02D8     		bhi	.L280
 8201 0154 002B     		cmp	r3, #0
 8202 0156 08D0     		beq	.L281
 8203 0158 0FE0     		b	.L278
 8204              	.L280:
 8205 015a 042B     		cmp	r3, #4
 8206 015c 09D0     		beq	.L282
 8207 015e 082B     		cmp	r3, #8
 8208 0160 0ED0     		beq	.L290
 8209 0162 0AE0     		b	.L278
 8210              	.L279:
3264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 8211              		.loc 1 3264 0
 8212 0164 2248     		ldr	r0, .L293+32
3104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 8213              		.loc 1 3104 0
 8214 0166 0025     		movs	r5, #0
 8215 0168 0DE0     		b	.L283
 8216              	.L281:
3261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 8217              		.loc 1 3261 0
 8218 016a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 8219              	.LVL539:
3104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 8220              		.loc 1 3104 0
 8221 016e 0025     		movs	r5, #0
3262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 8222              		.loc 1 3262 0
 8223 0170 09E0     		b	.L283
 8224              	.LVL540:
 8225              	.L282:
3267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 8226              		.loc 1 3267 0
 8227 0172 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 8228              	.LVL541:
3104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 8229              		.loc 1 3104 0
 8230 0176 0025     		movs	r5, #0
3268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 8231              		.loc 1 3268 0
 8232 0178 05E0     		b	.L283
 8233              	.LVL542:
 8234              	.L278:
3273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         ret = HAL_ERROR;
 8235              		.loc 1 3273 0
 8236 017a 0020     		movs	r0, #0
3274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 8237              		.loc 1 3274 0
 8238 017c 0125     		movs	r5, #1
ARM GAS  /tmp/cceLjgLz.s 			page 247


3275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 8239              		.loc 1 3275 0
 8240 017e 02E0     		b	.L283
 8241              	.LVL543:
 8242              	.L290:
3270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         break;
 8243              		.loc 1 3270 0
 8244 0180 8020     		movs	r0, #128
 8245 0182 0002     		lsls	r0, r0, #8
3104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 8246              		.loc 1 3104 0
 8247 0184 0025     		movs	r5, #0
 8248              	.LVL544:
 8249              	.L283:
3278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8250              		.loc 1 3278 0
 8251 0186 0028     		cmp	r0, #0
 8252 0188 18D0     		beq	.L277
3281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8253              		.loc 1 3281 0
 8254 018a 636A     		ldr	r3, [r4, #36]
 8255 018c 5B00     		lsls	r3, r3, #1
 8256 018e 194A     		ldr	r2, .L293+36
 8257 0190 995A     		ldrh	r1, [r3, r2]
 8258 0192 FFF7FEFF 		bl	__aeabi_uidiv
 8259              	.LVL545:
 8260 0196 6368     		ldr	r3, [r4, #4]
 8261 0198 5B08     		lsrs	r3, r3, #1
 8262 019a C018     		adds	r0, r0, r3
 8263 019c 6168     		ldr	r1, [r4, #4]
 8264 019e FFF7FEFF 		bl	__aeabi_uidiv
 8265              	.LVL546:
3282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 8266              		.loc 1 3282 0
 8267 01a2 0200     		movs	r2, r0
 8268 01a4 103A     		subs	r2, r2, #16
 8269 01a6 144B     		ldr	r3, .L293+40
 8270 01a8 9A42     		cmp	r2, r3
 8271 01aa 06D8     		bhi	.L291
3284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 8272              		.loc 1 3284 0
 8273 01ac 2368     		ldr	r3, [r4]
 8274 01ae 0004     		lsls	r0, r0, #16
 8275              	.LVL547:
 8276 01b0 000C     		lsrs	r0, r0, #16
 8277 01b2 D860     		str	r0, [r3, #12]
 8278 01b4 02E0     		b	.L277
 8279              	.LVL548:
 8280              	.L289:
3252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 8281              		.loc 1 3252 0
 8282 01b6 0125     		movs	r5, #1
 8283              	.LVL549:
 8284 01b8 00E0     		b	.L277
 8285              	.LVL550:
 8286              	.L291:
3288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
ARM GAS  /tmp/cceLjgLz.s 			page 248


 8287              		.loc 1 3288 0
 8288 01ba 0125     		movs	r5, #1
 8289              	.LVL551:
 8290              	.L277:
3294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
 8291              		.loc 1 3294 0
 8292 01bc 0123     		movs	r3, #1
 8293 01be 6A22     		movs	r2, #106
 8294 01c0 A352     		strh	r3, [r4, r2]
3295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8295              		.loc 1 3295 0
 8296 01c2 023A     		subs	r2, r2, #2
 8297 01c4 A352     		strh	r3, [r4, r2]
3298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->TxISR = NULL;
 8298              		.loc 1 3298 0
 8299 01c6 0023     		movs	r3, #0
 8300 01c8 6367     		str	r3, [r4, #116]
3299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8301              		.loc 1 3299 0
 8302 01ca A367     		str	r3, [r4, #120]
3302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8303              		.loc 1 3302 0
 8304 01cc 2800     		movs	r0, r5
 8305              		@ sp needed
 8306              	.LVL552:
 8307              	.LVL553:
 8308 01ce 70BD     		pop	{r4, r5, r6, pc}
 8309              	.L294:
 8310              		.align	2
 8311              	.L293:
 8312 01d0 F369FFCF 		.word	-805344781
 8313 01d4 FFCFFFFF 		.word	-12289
 8314 01d8 FFF4FF11 		.word	301987071
 8315 01dc 00380140 		.word	1073821696
 8316 01e0 00100240 		.word	1073876992
 8317 01e4 00440040 		.word	1073759232
 8318 01e8 00480040 		.word	1073760256
 8319 01ec 004C0040 		.word	1073761280
 8320 01f0 0024F400 		.word	16000000
 8321 01f4 00000000 		.word	.LANCHOR0
 8322 01f8 EFFF0000 		.word	65519
 8323              		.cfi_endproc
 8324              	.LFE353:
 8326              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 8327              		.align	2
 8328              		.global	UART_AdvFeatureConfig
 8329              		.code	16
 8330              		.thumb_func
 8332              	UART_AdvFeatureConfig:
 8333              	.LFB354:
3310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 8334              		.loc 1 3310 0
 8335              		.cfi_startproc
 8336              		@ args = 0, pretend = 0, frame = 0
 8337              		@ frame_needed = 0, uses_anonymous_args = 0
 8338              		@ link register save eliminated.
 8339              	.LVL554:
ARM GAS  /tmp/cceLjgLz.s 			page 249


3315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8340              		.loc 1 3315 0
 8341 0000 836A     		ldr	r3, [r0, #40]
 8342 0002 DB07     		lsls	r3, r3, #31
 8343 0004 06D5     		bpl	.L296
3318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8344              		.loc 1 3318 0
 8345 0006 0268     		ldr	r2, [r0]
 8346 0008 5168     		ldr	r1, [r2, #4]
 8347 000a 2C4B     		ldr	r3, .L304
 8348 000c 0B40     		ands	r3, r1
 8349 000e C16A     		ldr	r1, [r0, #44]
 8350 0010 0B43     		orrs	r3, r1
 8351 0012 5360     		str	r3, [r2, #4]
 8352              	.L296:
3322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8353              		.loc 1 3322 0
 8354 0014 836A     		ldr	r3, [r0, #40]
 8355 0016 9B07     		lsls	r3, r3, #30
 8356 0018 06D5     		bpl	.L297
3325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8357              		.loc 1 3325 0
 8358 001a 0268     		ldr	r2, [r0]
 8359 001c 5168     		ldr	r1, [r2, #4]
 8360 001e 284B     		ldr	r3, .L304+4
 8361 0020 0B40     		ands	r3, r1
 8362 0022 016B     		ldr	r1, [r0, #48]
 8363 0024 0B43     		orrs	r3, r1
 8364 0026 5360     		str	r3, [r2, #4]
 8365              	.L297:
3329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8366              		.loc 1 3329 0
 8367 0028 836A     		ldr	r3, [r0, #40]
 8368 002a 5B07     		lsls	r3, r3, #29
 8369 002c 06D5     		bpl	.L298
3332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8370              		.loc 1 3332 0
 8371 002e 0268     		ldr	r2, [r0]
 8372 0030 5168     		ldr	r1, [r2, #4]
 8373 0032 244B     		ldr	r3, .L304+8
 8374 0034 0B40     		ands	r3, r1
 8375 0036 416B     		ldr	r1, [r0, #52]
 8376 0038 0B43     		orrs	r3, r1
 8377 003a 5360     		str	r3, [r2, #4]
 8378              	.L298:
3336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8379              		.loc 1 3336 0
 8380 003c 836A     		ldr	r3, [r0, #40]
 8381 003e 1B07     		lsls	r3, r3, #28
 8382 0040 06D5     		bpl	.L299
3339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8383              		.loc 1 3339 0
 8384 0042 0268     		ldr	r2, [r0]
 8385 0044 5168     		ldr	r1, [r2, #4]
 8386 0046 204B     		ldr	r3, .L304+12
 8387 0048 0B40     		ands	r3, r1
 8388 004a 816B     		ldr	r1, [r0, #56]
ARM GAS  /tmp/cceLjgLz.s 			page 250


 8389 004c 0B43     		orrs	r3, r1
 8390 004e 5360     		str	r3, [r2, #4]
 8391              	.L299:
3343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8392              		.loc 1 3343 0
 8393 0050 836A     		ldr	r3, [r0, #40]
 8394 0052 DB06     		lsls	r3, r3, #27
 8395 0054 06D5     		bpl	.L300
3346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8396              		.loc 1 3346 0
 8397 0056 0268     		ldr	r2, [r0]
 8398 0058 9168     		ldr	r1, [r2, #8]
 8399 005a 1C4B     		ldr	r3, .L304+16
 8400 005c 0B40     		ands	r3, r1
 8401 005e C16B     		ldr	r1, [r0, #60]
 8402 0060 0B43     		orrs	r3, r1
 8403 0062 9360     		str	r3, [r2, #8]
 8404              	.L300:
3350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8405              		.loc 1 3350 0
 8406 0064 836A     		ldr	r3, [r0, #40]
 8407 0066 9B06     		lsls	r3, r3, #26
 8408 0068 06D5     		bpl	.L301
3353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8409              		.loc 1 3353 0
 8410 006a 0268     		ldr	r2, [r0]
 8411 006c 9168     		ldr	r1, [r2, #8]
 8412 006e 184B     		ldr	r3, .L304+20
 8413 0070 0B40     		ands	r3, r1
 8414 0072 016C     		ldr	r1, [r0, #64]
 8415 0074 0B43     		orrs	r3, r1
 8416 0076 9360     		str	r3, [r2, #8]
 8417              	.L301:
3357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8418              		.loc 1 3357 0
 8419 0078 836A     		ldr	r3, [r0, #40]
 8420 007a 5B06     		lsls	r3, r3, #25
 8421 007c 12D5     		bpl	.L302
3361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 8422              		.loc 1 3361 0
 8423 007e 0268     		ldr	r2, [r0]
 8424 0080 5168     		ldr	r1, [r2, #4]
 8425 0082 144B     		ldr	r3, .L304+24
 8426 0084 0B40     		ands	r3, r1
 8427 0086 416C     		ldr	r1, [r0, #68]
 8428 0088 0B43     		orrs	r3, r1
 8429 008a 5360     		str	r3, [r2, #4]
3363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8430              		.loc 1 3363 0
 8431 008c 8023     		movs	r3, #128
 8432 008e 5B03     		lsls	r3, r3, #13
 8433 0090 426C     		ldr	r2, [r0, #68]
 8434 0092 9A42     		cmp	r2, r3
 8435 0094 06D1     		bne	.L302
3366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 8436              		.loc 1 3366 0
 8437 0096 0268     		ldr	r2, [r0]
ARM GAS  /tmp/cceLjgLz.s 			page 251


 8438 0098 5168     		ldr	r1, [r2, #4]
 8439 009a 0F4B     		ldr	r3, .L304+28
 8440 009c 0B40     		ands	r3, r1
 8441 009e 816C     		ldr	r1, [r0, #72]
 8442 00a0 0B43     		orrs	r3, r1
 8443 00a2 5360     		str	r3, [r2, #4]
 8444              	.L302:
3371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8445              		.loc 1 3371 0
 8446 00a4 836A     		ldr	r3, [r0, #40]
 8447 00a6 1B06     		lsls	r3, r3, #24
 8448 00a8 06D5     		bpl	.L295
3374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8449              		.loc 1 3374 0
 8450 00aa 0168     		ldr	r1, [r0]
 8451 00ac 4A68     		ldr	r2, [r1, #4]
 8452 00ae 0B4B     		ldr	r3, .L304+32
 8453 00b0 1340     		ands	r3, r2
 8454 00b2 C26C     		ldr	r2, [r0, #76]
 8455 00b4 1343     		orrs	r3, r2
 8456 00b6 4B60     		str	r3, [r1, #4]
 8457              	.L295:
3376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8458              		.loc 1 3376 0
 8459              		@ sp needed
 8460 00b8 7047     		bx	lr
 8461              	.L305:
 8462 00ba C046     		.align	2
 8463              	.L304:
 8464 00bc FFFFFDFF 		.word	-131073
 8465 00c0 FFFFFEFF 		.word	-65537
 8466 00c4 FFFFFBFF 		.word	-262145
 8467 00c8 FF7FFFFF 		.word	-32769
 8468 00cc FFEFFFFF 		.word	-4097
 8469 00d0 FFDFFFFF 		.word	-8193
 8470 00d4 FFFFEFFF 		.word	-1048577
 8471 00d8 FFFF9FFF 		.word	-6291457
 8472 00dc FFFFF7FF 		.word	-524289
 8473              		.cfi_endproc
 8474              	.LFE354:
 8476              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 8477              		.align	2
 8478              		.global	UART_WaitOnFlagUntilTimeout
 8479              		.code	16
 8480              		.thumb_func
 8482              	UART_WaitOnFlagUntilTimeout:
 8483              	.LFB356:
3438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Wait until flag is set */
 8484              		.loc 1 3438 0
 8485              		.cfi_startproc
 8486              		@ args = 4, pretend = 0, frame = 0
 8487              		@ frame_needed = 0, uses_anonymous_args = 0
 8488              	.LVL555:
 8489 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8490              	.LCFI43:
 8491              		.cfi_def_cfa_offset 20
 8492              		.cfi_offset 4, -20
ARM GAS  /tmp/cceLjgLz.s 			page 252


 8493              		.cfi_offset 5, -16
 8494              		.cfi_offset 6, -12
 8495              		.cfi_offset 7, -8
 8496              		.cfi_offset 14, -4
 8497 0002 4746     		mov	r7, r8
 8498 0004 80B4     		push	{r7}
 8499              	.LCFI44:
 8500              		.cfi_def_cfa_offset 24
 8501              		.cfi_offset 8, -24
 8502 0006 0400     		movs	r4, r0
 8503 0008 0F00     		movs	r7, r1
 8504 000a 1600     		movs	r6, r2
 8505 000c 9846     		mov	r8, r3
 8506 000e 069D     		ldr	r5, [sp, #24]
3440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8507              		.loc 1 3440 0
 8508 0010 57E0     		b	.L308
 8509              	.LVL556:
 8510              	.L312:
3443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8511              		.loc 1 3443 0
 8512 0012 6B1C     		adds	r3, r5, #1
 8513 0014 55D0     		beq	.L308
3445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 8514              		.loc 1 3445 0
 8515 0016 FFF7FEFF 		bl	HAL_GetTick
 8516              	.LVL557:
 8517 001a 4346     		mov	r3, r8
 8518 001c C01A     		subs	r0, r0, r3
 8519 001e 8542     		cmp	r5, r0
 8520 0020 01D3     		bcc	.L309
 8521              	.LVL558:
3445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 8522              		.loc 1 3445 0 is_stmt 0 discriminator 1
 8523 0022 002D     		cmp	r5, #0
 8524 0024 20D1     		bne	.L310
 8525              	.L309:
 8526              	.LBB1308:
 8527              	.LBB1309:
 8528              	.LBB1310:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 8529              		.loc 2 453 0 is_stmt 1
 8530              		.syntax divided
 8531              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8532 0026 EFF31080 		MRS r0, primask
 8533              	@ 0 "" 2
 8534              	.LVL559:
 8535              		.thumb
 8536              		.syntax unified
 8537              	.LBE1310:
 8538              	.LBE1309:
 8539              	.LBB1311:
 8540              	.LBB1312:
 8541              		.loc 2 481 0
 8542 002a 0121     		movs	r1, #1
 8543              		.syntax divided
 8544              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cceLjgLz.s 			page 253


 8545 002c 81F31088 		MSR primask, r1
 8546              	@ 0 "" 2
 8547              	.LVL560:
 8548              		.thumb
 8549              		.syntax unified
 8550              	.LBE1312:
 8551              	.LBE1311:
3449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                                 USART_CR1_TXEIE_TXFNFIE));
 8552              		.loc 1 3449 0
 8553 0030 2268     		ldr	r2, [r4]
 8554 0032 1568     		ldr	r5, [r2]
 8555 0034 294B     		ldr	r3, .L313
 8556              	.LVL561:
 8557 0036 2B40     		ands	r3, r5
 8558 0038 1360     		str	r3, [r2]
 8559              	.LBB1313:
 8560              	.LBB1314:
 8561              		.loc 2 481 0
 8562              		.syntax divided
 8563              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8564 003a 80F31088 		MSR primask, r0
 8565              	@ 0 "" 2
 8566              		.thumb
 8567              		.syntax unified
 8568              	.LBE1314:
 8569              	.LBE1313:
 8570              	.LBE1308:
 8571              	.LBB1315:
 8572              	.LBB1316:
 8573              	.LBB1317:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 8574              		.loc 2 453 0
 8575              		.syntax divided
 8576              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8577 003e EFF31080 		MRS r0, primask
 8578              	@ 0 "" 2
 8579              	.LVL562:
 8580              		.thumb
 8581              		.syntax unified
 8582              	.LBE1317:
 8583              	.LBE1316:
 8584              	.LBB1318:
 8585              	.LBB1319:
 8586              		.loc 2 481 0
 8587 0042 0123     		movs	r3, #1
 8588              		.syntax divided
 8589              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8590 0044 83F31088 		MSR primask, r3
 8591              	@ 0 "" 2
 8592              	.LVL563:
 8593              		.thumb
 8594              		.syntax unified
 8595              	.LBE1319:
 8596              	.LBE1318:
3451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8597              		.loc 1 3451 0
 8598 0048 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cceLjgLz.s 			page 254


 8599 004a 9368     		ldr	r3, [r2, #8]
 8600 004c 8B43     		bics	r3, r1
 8601 004e 9360     		str	r3, [r2, #8]
 8602              	.LBB1320:
 8603              	.LBB1321:
 8604              		.loc 2 481 0
 8605              		.syntax divided
 8606              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8607 0050 80F31088 		MSR primask, r0
 8608              	@ 0 "" 2
 8609              		.thumb
 8610              		.syntax unified
 8611              	.LBE1321:
 8612              	.LBE1320:
 8613              	.LBE1315:
3453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 8614              		.loc 1 3453 0
 8615 0054 2023     		movs	r3, #32
 8616 0056 8822     		movs	r2, #136
 8617 0058 A350     		str	r3, [r4, r2]
3454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8618              		.loc 1 3454 0
 8619 005a 0432     		adds	r2, r2, #4
 8620 005c A350     		str	r3, [r4, r2]
3456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8621              		.loc 1 3456 0
 8622 005e 0022     		movs	r2, #0
 8623 0060 6433     		adds	r3, r3, #100
 8624 0062 E254     		strb	r2, [r4, r3]
3458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 8625              		.loc 1 3458 0
 8626 0064 0320     		movs	r0, #3
 8627 0066 36E0     		b	.L311
 8628              	.LVL564:
 8629              	.L310:
3461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 8630              		.loc 1 3461 0
 8631 0068 2368     		ldr	r3, [r4]
 8632              	.LVL565:
 8633 006a 1A68     		ldr	r2, [r3]
 8634 006c 5207     		lsls	r2, r2, #29
 8635 006e 28D5     		bpl	.L308
3463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         {
 8636              		.loc 1 3463 0
 8637 0070 DA69     		ldr	r2, [r3, #28]
 8638 0072 1205     		lsls	r2, r2, #20
 8639 0074 25D5     		bpl	.L308
3466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8640              		.loc 1 3466 0
 8641 0076 8022     		movs	r2, #128
 8642 0078 1201     		lsls	r2, r2, #4
 8643 007a 1A62     		str	r2, [r3, #32]
 8644              	.LBB1322:
 8645              	.LBB1323:
 8646              	.LBB1324:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 8647              		.loc 2 453 0
ARM GAS  /tmp/cceLjgLz.s 			page 255


 8648              		.syntax divided
 8649              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8650 007c EFF31080 		MRS r0, primask
 8651              	@ 0 "" 2
 8652              	.LVL566:
 8653              		.thumb
 8654              		.syntax unified
 8655              	.LBE1324:
 8656              	.LBE1323:
 8657              	.LBB1325:
 8658              	.LBB1326:
 8659              		.loc 2 481 0
 8660 0080 0121     		movs	r1, #1
 8661              		.syntax divided
 8662              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8663 0082 81F31088 		MSR primask, r1
 8664              	@ 0 "" 2
 8665              	.LVL567:
 8666              		.thumb
 8667              		.syntax unified
 8668              	.LBE1326:
 8669              	.LBE1325:
3470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****                                                   USART_CR1_TXEIE_TXFNFIE));
 8670              		.loc 1 3470 0
 8671 0086 2268     		ldr	r2, [r4]
 8672 0088 1568     		ldr	r5, [r2]
 8673 008a 144B     		ldr	r3, .L313
 8674 008c 2B40     		ands	r3, r5
 8675 008e 1360     		str	r3, [r2]
 8676              	.LBB1327:
 8677              	.LBB1328:
 8678              		.loc 2 481 0
 8679              		.syntax divided
 8680              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8681 0090 80F31088 		MSR primask, r0
 8682              	@ 0 "" 2
 8683              		.thumb
 8684              		.syntax unified
 8685              	.LBE1328:
 8686              	.LBE1327:
 8687              	.LBE1322:
 8688              	.LBB1329:
 8689              	.LBB1330:
 8690              	.LBB1331:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 8691              		.loc 2 453 0
 8692              		.syntax divided
 8693              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8694 0094 EFF31080 		MRS r0, primask
 8695              	@ 0 "" 2
 8696              	.LVL568:
 8697              		.thumb
 8698              		.syntax unified
 8699              	.LBE1331:
 8700              	.LBE1330:
 8701              	.LBB1332:
 8702              	.LBB1333:
ARM GAS  /tmp/cceLjgLz.s 			page 256


 8703              		.loc 2 481 0
 8704 0098 0123     		movs	r3, #1
 8705              		.syntax divided
 8706              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8707 009a 83F31088 		MSR primask, r3
 8708              	@ 0 "" 2
 8709              	.LVL569:
 8710              		.thumb
 8711              		.syntax unified
 8712              	.LBE1333:
 8713              	.LBE1332:
3472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8714              		.loc 1 3472 0
 8715 009e 2268     		ldr	r2, [r4]
 8716 00a0 9368     		ldr	r3, [r2, #8]
 8717 00a2 8B43     		bics	r3, r1
 8718 00a4 9360     		str	r3, [r2, #8]
 8719              	.LBB1334:
 8720              	.LBB1335:
 8721              		.loc 2 481 0
 8722              		.syntax divided
 8723              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8724 00a6 80F31088 		MSR primask, r0
 8725              	@ 0 "" 2
 8726              		.thumb
 8727              		.syntax unified
 8728              	.LBE1335:
 8729              	.LBE1334:
 8730              	.LBE1329:
3474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 8731              		.loc 1 3474 0
 8732 00aa 2023     		movs	r3, #32
 8733 00ac 8822     		movs	r2, #136
 8734 00ae A350     		str	r3, [r4, r2]
3475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 8735              		.loc 1 3475 0
 8736 00b0 0432     		adds	r2, r2, #4
 8737 00b2 A350     		str	r3, [r4, r2]
3476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8738              		.loc 1 3476 0
 8739 00b4 0432     		adds	r2, r2, #4
 8740 00b6 A350     		str	r3, [r4, r2]
3479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8741              		.loc 1 3479 0
 8742 00b8 0022     		movs	r2, #0
 8743 00ba 6433     		adds	r3, r3, #100
 8744 00bc E254     		strb	r2, [r4, r3]
3481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         }
 8745              		.loc 1 3481 0
 8746 00be 0320     		movs	r0, #3
 8747 00c0 09E0     		b	.L311
 8748              	.L308:
3440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8749              		.loc 1 3440 0
 8750 00c2 2368     		ldr	r3, [r4]
 8751 00c4 DB69     		ldr	r3, [r3, #28]
 8752 00c6 3A00     		movs	r2, r7
ARM GAS  /tmp/cceLjgLz.s 			page 257


 8753 00c8 9A43     		bics	r2, r3
 8754 00ca 1300     		movs	r3, r2
 8755 00cc 5A42     		rsbs	r2, r3, #0
 8756 00ce 5341     		adcs	r3, r3, r2
 8757 00d0 B342     		cmp	r3, r6
 8758 00d2 9ED0     		beq	.L312
3486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 8759              		.loc 1 3486 0
 8760 00d4 0020     		movs	r0, #0
 8761              	.L311:
3487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8762              		.loc 1 3487 0
 8763              		@ sp needed
 8764              	.LVL570:
 8765              	.LVL571:
 8766              	.LVL572:
 8767 00d6 04BC     		pop	{r2}
 8768 00d8 9046     		mov	r8, r2
 8769 00da F0BD     		pop	{r4, r5, r6, r7, pc}
 8770              	.L314:
 8771              		.align	2
 8772              	.L313:
 8773 00dc 5FFEFFFF 		.word	-417
 8774              		.cfi_endproc
 8775              	.LFE356:
 8777              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 8778              		.align	2
 8779              		.global	HAL_UART_Transmit
 8780              		.code	16
 8781              		.thumb_func
 8783              	HAL_UART_Transmit:
 8784              	.LFB317:
1128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   const uint8_t  *pdata8bits;
 8785              		.loc 1 1128 0
 8786              		.cfi_startproc
 8787              		@ args = 0, pretend = 0, frame = 8
 8788              		@ frame_needed = 0, uses_anonymous_args = 0
 8789              	.LVL573:
 8790 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8791              	.LCFI45:
 8792              		.cfi_def_cfa_offset 20
 8793              		.cfi_offset 4, -20
 8794              		.cfi_offset 5, -16
 8795              		.cfi_offset 6, -12
 8796              		.cfi_offset 7, -8
 8797              		.cfi_offset 14, -4
 8798 0002 85B0     		sub	sp, sp, #20
 8799              	.LCFI46:
 8800              		.cfi_def_cfa_offset 40
 8801 0004 0400     		movs	r4, r0
 8802 0006 0E00     		movs	r6, r1
 8803 0008 1700     		movs	r7, r2
 8804 000a 1D00     		movs	r5, r3
1134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 8805              		.loc 1 1134 0
 8806 000c 8823     		movs	r3, #136
 8807              	.LVL574:
ARM GAS  /tmp/cceLjgLz.s 			page 258


 8808 000e C358     		ldr	r3, [r0, r3]
 8809 0010 202B     		cmp	r3, #32
 8810 0012 56D1     		bne	.L323
1136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8811              		.loc 1 1136 0
 8812 0014 0029     		cmp	r1, #0
 8813 0016 56D0     		beq	.L324
1136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8814              		.loc 1 1136 0 is_stmt 0 discriminator 1
 8815 0018 002A     		cmp	r2, #0
 8816 001a 56D0     		beq	.L325
1144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8817              		.loc 1 1144 0 is_stmt 1
 8818 001c 8023     		movs	r3, #128
 8819 001e 5B01     		lsls	r3, r3, #5
 8820 0020 8268     		ldr	r2, [r0, #8]
 8821              	.LVL575:
 8822 0022 9A42     		cmp	r2, r3
 8823 0024 04D1     		bne	.L317
1144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8824              		.loc 1 1144 0 is_stmt 0 discriminator 1
 8825 0026 0369     		ldr	r3, [r0, #16]
 8826 0028 002B     		cmp	r3, #0
 8827 002a 01D1     		bne	.L317
1146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 8828              		.loc 1 1146 0 is_stmt 1
 8829 002c CB07     		lsls	r3, r1, #31
 8830 002e 4ED4     		bmi	.L326
 8831              	.L317:
1152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 8832              		.loc 1 1152 0
 8833 0030 0022     		movs	r2, #0
 8834 0032 9023     		movs	r3, #144
 8835 0034 E250     		str	r2, [r4, r3]
1153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8836              		.loc 1 1153 0
 8837 0036 2132     		adds	r2, r2, #33
 8838 0038 083B     		subs	r3, r3, #8
 8839 003a E250     		str	r2, [r4, r3]
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8840              		.loc 1 1156 0
 8841 003c FFF7FEFF 		bl	HAL_GetTick
 8842              	.LVL576:
 8843 0040 0390     		str	r0, [sp, #12]
 8844              	.LVL577:
1158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->TxXferCount = Size;
 8845              		.loc 1 1158 0
 8846 0042 5423     		movs	r3, #84
 8847 0044 E752     		strh	r7, [r4, r3]
1159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8848              		.loc 1 1159 0
 8849 0046 0233     		adds	r3, r3, #2
 8850 0048 E752     		strh	r7, [r4, r3]
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8851              		.loc 1 1162 0
 8852 004a 8023     		movs	r3, #128
 8853 004c 5B01     		lsls	r3, r3, #5
ARM GAS  /tmp/cceLjgLz.s 			page 259


 8854 004e A268     		ldr	r2, [r4, #8]
 8855 0050 9A42     		cmp	r2, r3
 8856 0052 04D1     		bne	.L327
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8857              		.loc 1 1162 0 is_stmt 0 discriminator 1
 8858 0054 2369     		ldr	r3, [r4, #16]
 8859 0056 002B     		cmp	r3, #0
 8860 0058 03D0     		beq	.L328
1170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 8861              		.loc 1 1170 0 is_stmt 1
 8862 005a 0027     		movs	r7, #0
 8863 005c 1FE0     		b	.L319
 8864              	.L327:
 8865 005e 0027     		movs	r7, #0
 8866 0060 1DE0     		b	.L319
 8867              	.L328:
1165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 8868              		.loc 1 1165 0
 8869 0062 3700     		movs	r7, r6
1164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 8870              		.loc 1 1164 0
 8871 0064 0026     		movs	r6, #0
 8872              	.LVL578:
 8873 0066 1AE0     		b	.L319
 8874              	.LVL579:
 8875              	.L322:
1175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 8876              		.loc 1 1175 0
 8877 0068 0095     		str	r5, [sp]
 8878 006a 039B     		ldr	r3, [sp, #12]
 8879 006c 0022     		movs	r2, #0
 8880 006e 8021     		movs	r1, #128
 8881 0070 2000     		movs	r0, r4
 8882 0072 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8883              	.LVL580:
 8884 0076 0028     		cmp	r0, #0
 8885 0078 2BD1     		bne	.L329
1179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 8886              		.loc 1 1179 0
 8887 007a 002E     		cmp	r6, #0
 8888 007c 06D1     		bne	.L320
1181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata16bits++;
 8889              		.loc 1 1181 0
 8890 007e 2268     		ldr	r2, [r4]
 8891 0080 3B88     		ldrh	r3, [r7]
 8892 0082 DB05     		lsls	r3, r3, #23
 8893 0084 DB0D     		lsrs	r3, r3, #23
 8894 0086 9362     		str	r3, [r2, #40]
1182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 8895              		.loc 1 1182 0
 8896 0088 0237     		adds	r7, r7, #2
 8897              	.LVL581:
 8898 008a 03E0     		b	.L321
 8899              	.L320:
1186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata8bits++;
 8900              		.loc 1 1186 0
 8901 008c 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cceLjgLz.s 			page 260


 8902 008e 3278     		ldrb	r2, [r6]
 8903 0090 9A62     		str	r2, [r3, #40]
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 8904              		.loc 1 1187 0
 8905 0092 0136     		adds	r6, r6, #1
 8906              	.LVL582:
 8907              	.L321:
1189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 8908              		.loc 1 1189 0
 8909 0094 5622     		movs	r2, #86
 8910 0096 A35A     		ldrh	r3, [r4, r2]
 8911 0098 013B     		subs	r3, r3, #1
 8912 009a 9BB2     		uxth	r3, r3
 8913 009c A352     		strh	r3, [r4, r2]
 8914              	.LVL583:
 8915              	.L319:
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8916              		.loc 1 1173 0
 8917 009e 5623     		movs	r3, #86
 8918 00a0 E35A     		ldrh	r3, [r4, r3]
 8919 00a2 9BB2     		uxth	r3, r3
 8920 00a4 002B     		cmp	r3, #0
 8921 00a6 DFD1     		bne	.L322
1192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 8922              		.loc 1 1192 0
 8923 00a8 0095     		str	r5, [sp]
 8924 00aa 039B     		ldr	r3, [sp, #12]
 8925 00ac 0022     		movs	r2, #0
 8926 00ae 4021     		movs	r1, #64
 8927 00b0 2000     		movs	r0, r4
 8928 00b2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8929              	.LVL584:
 8930 00b6 0028     		cmp	r0, #0
 8931 00b8 0DD1     		bne	.L330
1198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8932              		.loc 1 1198 0
 8933 00ba 2022     		movs	r2, #32
 8934 00bc 8823     		movs	r3, #136
 8935 00be E250     		str	r2, [r4, r3]
1200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8936              		.loc 1 1200 0
 8937 00c0 0AE0     		b	.L316
 8938              	.LVL585:
 8939              	.L323:
1204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 8940              		.loc 1 1204 0
 8941 00c2 0220     		movs	r0, #2
 8942              	.LVL586:
 8943 00c4 08E0     		b	.L316
 8944              	.LVL587:
 8945              	.L324:
1138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 8946              		.loc 1 1138 0
 8947 00c6 0120     		movs	r0, #1
 8948              	.LVL588:
 8949 00c8 06E0     		b	.L316
 8950              	.LVL589:
ARM GAS  /tmp/cceLjgLz.s 			page 261


 8951              	.L325:
 8952 00ca 0120     		movs	r0, #1
 8953              	.LVL590:
 8954 00cc 04E0     		b	.L316
 8955              	.LVL591:
 8956              	.L326:
1148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 8957              		.loc 1 1148 0
 8958 00ce 0120     		movs	r0, #1
 8959              	.LVL592:
 8960 00d0 02E0     		b	.L316
 8961              	.LVL593:
 8962              	.L329:
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 8963              		.loc 1 1177 0
 8964 00d2 0320     		movs	r0, #3
 8965 00d4 00E0     		b	.L316
 8966              	.L330:
1194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 8967              		.loc 1 1194 0
 8968 00d6 0320     		movs	r0, #3
 8969              	.LVL594:
 8970              	.L316:
1206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 8971              		.loc 1 1206 0
 8972 00d8 05B0     		add	sp, sp, #20
 8973              		@ sp needed
 8974              	.LVL595:
 8975              	.LVL596:
 8976 00da F0BD     		pop	{r4, r5, r6, r7, pc}
 8977              		.cfi_endproc
 8978              	.LFE317:
 8980              		.section	.text.HAL_UART_Receive,"ax",%progbits
 8981              		.align	2
 8982              		.global	HAL_UART_Receive
 8983              		.code	16
 8984              		.thumb_func
 8986              	HAL_UART_Receive:
 8987              	.LFB318:
1229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint8_t  *pdata8bits;
 8988              		.loc 1 1229 0
 8989              		.cfi_startproc
 8990              		@ args = 0, pretend = 0, frame = 8
 8991              		@ frame_needed = 0, uses_anonymous_args = 0
 8992              	.LVL597:
 8993 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8994              	.LCFI47:
 8995              		.cfi_def_cfa_offset 20
 8996              		.cfi_offset 4, -20
 8997              		.cfi_offset 5, -16
 8998              		.cfi_offset 6, -12
 8999              		.cfi_offset 7, -8
 9000              		.cfi_offset 14, -4
 9001 0002 4746     		mov	r7, r8
 9002 0004 80B4     		push	{r7}
 9003              	.LCFI48:
 9004              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cceLjgLz.s 			page 262


 9005              		.cfi_offset 8, -24
 9006 0006 84B0     		sub	sp, sp, #16
 9007              	.LCFI49:
 9008              		.cfi_def_cfa_offset 40
 9009 0008 0400     		movs	r4, r0
 9010 000a 0F00     		movs	r7, r1
 9011 000c 1600     		movs	r6, r2
 9012 000e 1D00     		movs	r5, r3
1236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9013              		.loc 1 1236 0
 9014 0010 8C23     		movs	r3, #140
 9015              	.LVL598:
 9016 0012 C358     		ldr	r3, [r0, r3]
 9017 0014 202B     		cmp	r3, #32
 9018 0016 00D0     		beq	.LCB7047
 9019 0018 88E0     		b	.L346	@long jump
 9020              	.LCB7047:
1238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 9021              		.loc 1 1238 0
 9022 001a 0029     		cmp	r1, #0
 9023 001c 00D1     		bne	.LCB7049
 9024 001e 87E0     		b	.L347	@long jump
 9025              	.LCB7049:
1238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 9026              		.loc 1 1238 0 is_stmt 0 discriminator 1
 9027 0020 002A     		cmp	r2, #0
 9028 0022 00D1     		bne	.LCB7051
 9029 0024 86E0     		b	.L348	@long jump
 9030              	.LCB7051:
1246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 9031              		.loc 1 1246 0 is_stmt 1
 9032 0026 8023     		movs	r3, #128
 9033 0028 5B01     		lsls	r3, r3, #5
 9034 002a 8268     		ldr	r2, [r0, #8]
 9035              	.LVL599:
 9036 002c 9A42     		cmp	r2, r3
 9037 002e 05D1     		bne	.L333
1246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 9038              		.loc 1 1246 0 is_stmt 0 discriminator 1
 9039 0030 0369     		ldr	r3, [r0, #16]
 9040 0032 002B     		cmp	r3, #0
 9041 0034 02D1     		bne	.L333
1248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 9042              		.loc 1 1248 0 is_stmt 1
 9043 0036 CB07     		lsls	r3, r1, #31
 9044 0038 00D5     		bpl	.LCB7066
 9045 003a 7DE0     		b	.L349	@long jump
 9046              	.LCB7066:
 9047              	.L333:
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 9048              		.loc 1 1254 0
 9049 003c 0023     		movs	r3, #0
 9050 003e 9022     		movs	r2, #144
 9051 0040 A350     		str	r3, [r4, r2]
1255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9052              		.loc 1 1255 0
 9053 0042 2221     		movs	r1, #34
ARM GAS  /tmp/cceLjgLz.s 			page 263


 9054              	.LVL600:
 9055 0044 043A     		subs	r2, r2, #4
 9056 0046 A150     		str	r1, [r4, r2]
1256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9057              		.loc 1 1256 0
 9058 0048 E366     		str	r3, [r4, #108]
1259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9059              		.loc 1 1259 0
 9060 004a FFF7FEFF 		bl	HAL_GetTick
 9061              	.LVL601:
 9062 004e 0390     		str	r0, [sp, #12]
 9063              	.LVL602:
1261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     huart->RxXferCount = Size;
 9064              		.loc 1 1261 0
 9065 0050 5C23     		movs	r3, #92
 9066 0052 E652     		strh	r6, [r4, r3]
1262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9067              		.loc 1 1262 0
 9068 0054 0233     		adds	r3, r3, #2
 9069 0056 E652     		strh	r6, [r4, r3]
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 9070              		.loc 1 1265 0
 9071 0058 A368     		ldr	r3, [r4, #8]
 9072 005a 8022     		movs	r2, #128
 9073 005c 5201     		lsls	r2, r2, #5
 9074 005e 9342     		cmp	r3, r2
 9075 0060 0AD1     		bne	.L334
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 9076              		.loc 1 1265 0 is_stmt 0 discriminator 1
 9077 0062 2269     		ldr	r2, [r4, #16]
 9078 0064 002A     		cmp	r2, #0
 9079 0066 03D1     		bne	.L335
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 9080              		.loc 1 1265 0 discriminator 3
 9081 0068 3749     		ldr	r1, .L353
 9082 006a 6032     		adds	r2, r2, #96
 9083 006c A152     		strh	r1, [r4, r2]
 9084 006e 22E0     		b	.L336
 9085              	.L335:
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 9086              		.loc 1 1265 0 discriminator 4
 9087 0070 FF21     		movs	r1, #255
 9088 0072 6022     		movs	r2, #96
 9089 0074 A152     		strh	r1, [r4, r2]
 9090 0076 1EE0     		b	.L336
 9091              	.L334:
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 9092              		.loc 1 1265 0 discriminator 2
 9093 0078 002B     		cmp	r3, #0
 9094 007a 0AD1     		bne	.L337
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 9095              		.loc 1 1265 0 discriminator 5
 9096 007c 2269     		ldr	r2, [r4, #16]
 9097 007e 002A     		cmp	r2, #0
 9098 0080 03D1     		bne	.L338
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 9099              		.loc 1 1265 0 discriminator 7
ARM GAS  /tmp/cceLjgLz.s 			page 264


 9100 0082 FF21     		movs	r1, #255
 9101 0084 6032     		adds	r2, r2, #96
 9102 0086 A152     		strh	r1, [r4, r2]
 9103 0088 15E0     		b	.L336
 9104              	.L338:
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 9105              		.loc 1 1265 0 discriminator 8
 9106 008a 7F21     		movs	r1, #127
 9107 008c 6022     		movs	r2, #96
 9108 008e A152     		strh	r1, [r4, r2]
 9109 0090 11E0     		b	.L336
 9110              	.L337:
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 9111              		.loc 1 1265 0 discriminator 6
 9112 0092 8022     		movs	r2, #128
 9113 0094 5205     		lsls	r2, r2, #21
 9114 0096 9342     		cmp	r3, r2
 9115 0098 0AD1     		bne	.L339
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 9116              		.loc 1 1265 0 discriminator 9
 9117 009a 2269     		ldr	r2, [r4, #16]
 9118 009c 002A     		cmp	r2, #0
 9119 009e 03D1     		bne	.L340
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 9120              		.loc 1 1265 0 discriminator 11
 9121 00a0 7F21     		movs	r1, #127
 9122 00a2 6032     		adds	r2, r2, #96
 9123 00a4 A152     		strh	r1, [r4, r2]
 9124 00a6 06E0     		b	.L336
 9125              	.L340:
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 9126              		.loc 1 1265 0 discriminator 12
 9127 00a8 3F21     		movs	r1, #63
 9128 00aa 6022     		movs	r2, #96
 9129 00ac A152     		strh	r1, [r4, r2]
 9130 00ae 02E0     		b	.L336
 9131              	.L339:
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     uhMask = huart->Mask;
 9132              		.loc 1 1265 0 discriminator 10
 9133 00b0 0021     		movs	r1, #0
 9134 00b2 6022     		movs	r2, #96
 9135 00b4 A152     		strh	r1, [r4, r2]
 9136              	.L336:
1266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9137              		.loc 1 1266 0 is_stmt 1
 9138 00b6 6022     		movs	r2, #96
 9139 00b8 A65A     		ldrh	r6, [r4, r2]
 9140              	.LVL603:
1269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 9141              		.loc 1 1269 0
 9142 00ba 8022     		movs	r2, #128
 9143 00bc 5201     		lsls	r2, r2, #5
 9144 00be 9342     		cmp	r3, r2
 9145 00c0 05D1     		bne	.L350
1269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 9146              		.loc 1 1269 0 is_stmt 0 discriminator 1
 9147 00c2 2369     		ldr	r3, [r4, #16]
ARM GAS  /tmp/cceLjgLz.s 			page 265


 9148 00c4 002B     		cmp	r3, #0
 9149 00c6 05D0     		beq	.L351
1277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 9150              		.loc 1 1277 0 is_stmt 1
 9151 00c8 0023     		movs	r3, #0
 9152 00ca 9846     		mov	r8, r3
 9153 00cc 24E0     		b	.L342
 9154              	.L350:
 9155 00ce 0023     		movs	r3, #0
 9156 00d0 9846     		mov	r8, r3
 9157 00d2 21E0     		b	.L342
 9158              	.L351:
1272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 9159              		.loc 1 1272 0
 9160 00d4 B846     		mov	r8, r7
1271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 9161              		.loc 1 1271 0
 9162 00d6 0027     		movs	r7, #0
 9163              	.LVL604:
 9164 00d8 1EE0     		b	.L342
 9165              	.LVL605:
 9166              	.L345:
1283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 9167              		.loc 1 1283 0
 9168 00da 0095     		str	r5, [sp]
 9169 00dc 039B     		ldr	r3, [sp, #12]
 9170 00de 0022     		movs	r2, #0
 9171 00e0 2021     		movs	r1, #32
 9172 00e2 2000     		movs	r0, r4
 9173 00e4 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 9174              	.LVL606:
 9175 00e8 0028     		cmp	r0, #0
 9176 00ea 27D1     		bne	.L352
1287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 9177              		.loc 1 1287 0
 9178 00ec 002F     		cmp	r7, #0
 9179 00ee 08D1     		bne	.L343
1289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata16bits++;
 9180              		.loc 1 1289 0
 9181 00f0 2368     		ldr	r3, [r4]
 9182 00f2 5B6A     		ldr	r3, [r3, #36]
 9183 00f4 3340     		ands	r3, r6
 9184 00f6 4246     		mov	r2, r8
 9185 00f8 1380     		strh	r3, [r2]
1290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 9186              		.loc 1 1290 0
 9187 00fa 0223     		movs	r3, #2
 9188 00fc 9C46     		mov	ip, r3
 9189 00fe E044     		add	r8, r8, ip
 9190              	.LVL607:
 9191 0100 05E0     		b	.L344
 9192              	.L343:
1294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****         pdata8bits++;
 9193              		.loc 1 1294 0
 9194 0102 2368     		ldr	r3, [r4]
 9195 0104 5A6A     		ldr	r2, [r3, #36]
 9196 0106 F3B2     		uxtb	r3, r6
ARM GAS  /tmp/cceLjgLz.s 			page 266


 9197 0108 1340     		ands	r3, r2
 9198 010a 3B70     		strb	r3, [r7]
1295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 9199              		.loc 1 1295 0
 9200 010c 0137     		adds	r7, r7, #1
 9201              	.LVL608:
 9202              	.L344:
1297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 9203              		.loc 1 1297 0
 9204 010e 5E22     		movs	r2, #94
 9205 0110 A35A     		ldrh	r3, [r4, r2]
 9206 0112 013B     		subs	r3, r3, #1
 9207 0114 9BB2     		uxth	r3, r3
 9208 0116 A352     		strh	r3, [r4, r2]
 9209              	.LVL609:
 9210              	.L342:
1281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 9211              		.loc 1 1281 0
 9212 0118 5E23     		movs	r3, #94
 9213 011a E35A     		ldrh	r3, [r4, r3]
 9214 011c 9BB2     		uxth	r3, r3
 9215 011e 002B     		cmp	r3, #0
 9216 0120 DBD1     		bne	.L345
1301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9217              		.loc 1 1301 0
 9218 0122 2022     		movs	r2, #32
 9219 0124 8C33     		adds	r3, r3, #140
 9220 0126 E250     		str	r2, [r4, r3]
1303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 9221              		.loc 1 1303 0
 9222 0128 0020     		movs	r0, #0
 9223 012a 08E0     		b	.L332
 9224              	.LVL610:
 9225              	.L346:
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 9226              		.loc 1 1307 0
 9227 012c 0220     		movs	r0, #2
 9228              	.LVL611:
 9229 012e 06E0     		b	.L332
 9230              	.LVL612:
 9231              	.L347:
1240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 9232              		.loc 1 1240 0
 9233 0130 0120     		movs	r0, #1
 9234              	.LVL613:
 9235 0132 04E0     		b	.L332
 9236              	.LVL614:
 9237              	.L348:
 9238 0134 0120     		movs	r0, #1
 9239              	.LVL615:
 9240 0136 02E0     		b	.L332
 9241              	.LVL616:
 9242              	.L349:
1250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 9243              		.loc 1 1250 0
 9244 0138 0120     		movs	r0, #1
 9245              	.LVL617:
ARM GAS  /tmp/cceLjgLz.s 			page 267


 9246 013a 00E0     		b	.L332
 9247              	.LVL618:
 9248              	.L352:
1285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 9249              		.loc 1 1285 0
 9250 013c 0320     		movs	r0, #3
 9251              	.LVL619:
 9252              	.L332:
1309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9253              		.loc 1 1309 0
 9254 013e 04B0     		add	sp, sp, #16
 9255              		@ sp needed
 9256              	.LVL620:
 9257              	.LVL621:
 9258 0140 04BC     		pop	{r2}
 9259 0142 9046     		mov	r8, r2
 9260 0144 F0BD     		pop	{r4, r5, r6, r7, pc}
 9261              	.L354:
 9262 0146 C046     		.align	2
 9263              	.L353:
 9264 0148 FF010000 		.word	511
 9265              		.cfi_endproc
 9266              	.LFE318:
 9268              		.section	.text.UART_CheckIdleState,"ax",%progbits
 9269              		.align	2
 9270              		.global	UART_CheckIdleState
 9271              		.code	16
 9272              		.thumb_func
 9274              	UART_CheckIdleState:
 9275              	.LFB355:
3384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   uint32_t tickstart;
 9276              		.loc 1 3384 0
 9277              		.cfi_startproc
 9278              		@ args = 0, pretend = 0, frame = 0
 9279              		@ frame_needed = 0, uses_anonymous_args = 0
 9280              	.LVL622:
 9281 0000 30B5     		push	{r4, r5, lr}
 9282              	.LCFI50:
 9283              		.cfi_def_cfa_offset 12
 9284              		.cfi_offset 4, -12
 9285              		.cfi_offset 5, -8
 9286              		.cfi_offset 14, -4
 9287 0002 83B0     		sub	sp, sp, #12
 9288              	.LCFI51:
 9289              		.cfi_def_cfa_offset 24
 9290 0004 0400     		movs	r4, r0
3388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9291              		.loc 1 3388 0
 9292 0006 0022     		movs	r2, #0
 9293 0008 9023     		movs	r3, #144
 9294 000a C250     		str	r2, [r0, r3]
3391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9295              		.loc 1 3391 0
 9296 000c FFF7FEFF 		bl	HAL_GetTick
 9297              	.LVL623:
 9298 0010 0500     		movs	r5, r0
 9299              	.LVL624:
ARM GAS  /tmp/cceLjgLz.s 			page 268


3394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9300              		.loc 1 3394 0
 9301 0012 2368     		ldr	r3, [r4]
 9302 0014 1B68     		ldr	r3, [r3]
 9303 0016 1B07     		lsls	r3, r3, #28
 9304 0018 0AD5     		bpl	.L356
3397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 9305              		.loc 1 3397 0
 9306 001a 154B     		ldr	r3, .L361
 9307 001c 0093     		str	r3, [sp]
 9308 001e 0300     		movs	r3, r0
 9309 0020 0022     		movs	r2, #0
 9310 0022 8021     		movs	r1, #128
 9311 0024 8903     		lsls	r1, r1, #14
 9312 0026 2000     		movs	r0, r4
 9313              	.LVL625:
 9314 0028 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 9315              	.LVL626:
 9316 002c 0028     		cmp	r0, #0
 9317 002e 1AD1     		bne	.L359
 9318              	.L356:
3405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9319              		.loc 1 3405 0
 9320 0030 2368     		ldr	r3, [r4]
 9321 0032 1B68     		ldr	r3, [r3]
 9322 0034 5B07     		lsls	r3, r3, #29
 9323 0036 0AD5     		bpl	.L358
3408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 9324              		.loc 1 3408 0
 9325 0038 0D4B     		ldr	r3, .L361
 9326 003a 0093     		str	r3, [sp]
 9327 003c 2B00     		movs	r3, r5
 9328 003e 0022     		movs	r2, #0
 9329 0040 8021     		movs	r1, #128
 9330 0042 C903     		lsls	r1, r1, #15
 9331 0044 2000     		movs	r0, r4
 9332 0046 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 9333              	.LVL627:
 9334 004a 0028     		cmp	r0, #0
 9335 004c 0DD1     		bne	.L360
 9336              	.L358:
3416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 9337              		.loc 1 3416 0
 9338 004e 2023     		movs	r3, #32
 9339 0050 8822     		movs	r2, #136
 9340 0052 A350     		str	r3, [r4, r2]
3417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9341              		.loc 1 3417 0
 9342 0054 0432     		adds	r2, r2, #4
 9343 0056 A350     		str	r3, [r4, r2]
3418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 9344              		.loc 1 3418 0
 9345 0058 0023     		movs	r3, #0
 9346 005a E366     		str	r3, [r4, #108]
3419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9347              		.loc 1 3419 0
 9348 005c 2367     		str	r3, [r4, #112]
ARM GAS  /tmp/cceLjgLz.s 			page 269


3421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9349              		.loc 1 3421 0
 9350 005e 083A     		subs	r2, r2, #8
 9351 0060 A354     		strb	r3, [r4, r2]
3423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 9352              		.loc 1 3423 0
 9353 0062 0020     		movs	r0, #0
 9354 0064 02E0     		b	.L357
 9355              	.L359:
3400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 9356              		.loc 1 3400 0
 9357 0066 0320     		movs	r0, #3
 9358 0068 00E0     		b	.L357
 9359              	.L360:
3411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 9360              		.loc 1 3411 0
 9361 006a 0320     		movs	r0, #3
 9362              	.L357:
3424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9363              		.loc 1 3424 0
 9364 006c 03B0     		add	sp, sp, #12
 9365              		@ sp needed
 9366              	.LVL628:
 9367              	.LVL629:
 9368 006e 30BD     		pop	{r4, r5, pc}
 9369              	.L362:
 9370              		.align	2
 9371              	.L361:
 9372 0070 FFFFFF01 		.word	33554431
 9373              		.cfi_endproc
 9374              	.LFE355:
 9376              		.section	.text.HAL_UART_Init,"ax",%progbits
 9377              		.align	2
 9378              		.global	HAL_UART_Init
 9379              		.code	16
 9380              		.thumb_func
 9382              	HAL_UART_Init:
 9383              	.LFB310:
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 9384              		.loc 1 308 0
 9385              		.cfi_startproc
 9386              		@ args = 0, pretend = 0, frame = 0
 9387              		@ frame_needed = 0, uses_anonymous_args = 0
 9388              	.LVL630:
 9389 0000 10B5     		push	{r4, lr}
 9390              	.LCFI52:
 9391              		.cfi_def_cfa_offset 8
 9392              		.cfi_offset 4, -8
 9393              		.cfi_offset 14, -4
 9394 0002 041E     		subs	r4, r0, #0
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9395              		.loc 1 310 0
 9396 0004 2ED0     		beq	.L367
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9397              		.loc 1 326 0
 9398 0006 8823     		movs	r3, #136
 9399 0008 C358     		ldr	r3, [r0, r3]
ARM GAS  /tmp/cceLjgLz.s 			page 270


 9400 000a 002B     		cmp	r3, #0
 9401 000c 04D1     		bne	.L365
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9402              		.loc 1 329 0
 9403 000e 0022     		movs	r2, #0
 9404 0010 8433     		adds	r3, r3, #132
 9405 0012 C254     		strb	r2, [r0, r3]
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 9406              		.loc 1 343 0
 9407 0014 FFF7FEFF 		bl	HAL_UART_MspInit
 9408              	.LVL631:
 9409              	.L365:
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9410              		.loc 1 347 0
 9411 0018 2422     		movs	r2, #36
 9412 001a 8823     		movs	r3, #136
 9413 001c E250     		str	r2, [r4, r3]
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9414              		.loc 1 349 0
 9415 001e 2268     		ldr	r2, [r4]
 9416 0020 1368     		ldr	r3, [r2]
 9417 0022 0121     		movs	r1, #1
 9418 0024 8B43     		bics	r3, r1
 9419 0026 1360     		str	r3, [r2]
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9420              		.loc 1 352 0
 9421 0028 2000     		movs	r0, r4
 9422 002a FFF7FEFF 		bl	UART_SetConfig
 9423              	.LVL632:
 9424 002e 0128     		cmp	r0, #1
 9425 0030 19D0     		beq	.L364
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9426              		.loc 1 357 0
 9427 0032 A36A     		ldr	r3, [r4, #40]
 9428 0034 002B     		cmp	r3, #0
 9429 0036 02D0     		beq	.L366
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 9430              		.loc 1 359 0
 9431 0038 2000     		movs	r0, r4
 9432 003a FFF7FEFF 		bl	UART_AdvFeatureConfig
 9433              	.LVL633:
 9434              	.L366:
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 9435              		.loc 1 365 0
 9436 003e 2268     		ldr	r2, [r4]
 9437 0040 5168     		ldr	r1, [r2, #4]
 9438 0042 094B     		ldr	r3, .L368
 9439 0044 0B40     		ands	r3, r1
 9440 0046 5360     		str	r3, [r2, #4]
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9441              		.loc 1 366 0
 9442 0048 2268     		ldr	r2, [r4]
 9443 004a 9368     		ldr	r3, [r2, #8]
 9444 004c 2A21     		movs	r1, #42
 9445 004e 8B43     		bics	r3, r1
 9446 0050 9360     		str	r3, [r2, #8]
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
ARM GAS  /tmp/cceLjgLz.s 			page 271


 9447              		.loc 1 368 0
 9448 0052 2268     		ldr	r2, [r4]
 9449 0054 1168     		ldr	r1, [r2]
 9450 0056 0123     		movs	r3, #1
 9451 0058 0B43     		orrs	r3, r1
 9452 005a 1360     		str	r3, [r2]
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 9453              		.loc 1 371 0
 9454 005c 2000     		movs	r0, r4
 9455 005e FFF7FEFF 		bl	UART_CheckIdleState
 9456              	.LVL634:
 9457 0062 00E0     		b	.L364
 9458              	.LVL635:
 9459              	.L367:
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 9460              		.loc 1 312 0
 9461 0064 0120     		movs	r0, #1
 9462              	.LVL636:
 9463              	.L364:
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9464              		.loc 1 372 0
 9465              		@ sp needed
 9466              	.LVL637:
 9467 0066 10BD     		pop	{r4, pc}
 9468              	.L369:
 9469              		.align	2
 9470              	.L368:
 9471 0068 FFB7FFFF 		.word	-18433
 9472              		.cfi_endproc
 9473              	.LFE310:
 9475              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 9476              		.align	2
 9477              		.global	HAL_HalfDuplex_Init
 9478              		.code	16
 9479              		.thumb_func
 9481              	HAL_HalfDuplex_Init:
 9482              	.LFB311:
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 9483              		.loc 1 381 0
 9484              		.cfi_startproc
 9485              		@ args = 0, pretend = 0, frame = 0
 9486              		@ frame_needed = 0, uses_anonymous_args = 0
 9487              	.LVL638:
 9488 0000 10B5     		push	{r4, lr}
 9489              	.LCFI53:
 9490              		.cfi_def_cfa_offset 8
 9491              		.cfi_offset 4, -8
 9492              		.cfi_offset 14, -4
 9493 0002 041E     		subs	r4, r0, #0
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9494              		.loc 1 383 0
 9495 0004 33D0     		beq	.L374
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9496              		.loc 1 391 0
 9497 0006 8823     		movs	r3, #136
 9498 0008 C358     		ldr	r3, [r0, r3]
 9499 000a 002B     		cmp	r3, #0
ARM GAS  /tmp/cceLjgLz.s 			page 272


 9500 000c 04D1     		bne	.L372
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9501              		.loc 1 394 0
 9502 000e 0022     		movs	r2, #0
 9503 0010 8433     		adds	r3, r3, #132
 9504 0012 C254     		strb	r2, [r0, r3]
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 9505              		.loc 1 408 0
 9506 0014 FFF7FEFF 		bl	HAL_UART_MspInit
 9507              	.LVL639:
 9508              	.L372:
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9509              		.loc 1 412 0
 9510 0018 2422     		movs	r2, #36
 9511 001a 8823     		movs	r3, #136
 9512 001c E250     		str	r2, [r4, r3]
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9513              		.loc 1 414 0
 9514 001e 2268     		ldr	r2, [r4]
 9515 0020 1368     		ldr	r3, [r2]
 9516 0022 0121     		movs	r1, #1
 9517 0024 8B43     		bics	r3, r1
 9518 0026 1360     		str	r3, [r2]
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9519              		.loc 1 417 0
 9520 0028 2000     		movs	r0, r4
 9521 002a FFF7FEFF 		bl	UART_SetConfig
 9522              	.LVL640:
 9523 002e 0128     		cmp	r0, #1
 9524 0030 1ED0     		beq	.L371
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9525              		.loc 1 422 0
 9526 0032 A36A     		ldr	r3, [r4, #40]
 9527 0034 002B     		cmp	r3, #0
 9528 0036 02D0     		beq	.L373
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 9529              		.loc 1 424 0
 9530 0038 2000     		movs	r0, r4
 9531 003a FFF7FEFF 		bl	UART_AdvFeatureConfig
 9532              	.LVL641:
 9533              	.L373:
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 9534              		.loc 1 430 0
 9535 003e 2268     		ldr	r2, [r4]
 9536 0040 5168     		ldr	r1, [r2, #4]
 9537 0042 0C4B     		ldr	r3, .L375
 9538 0044 0B40     		ands	r3, r1
 9539 0046 5360     		str	r3, [r2, #4]
 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9540              		.loc 1 431 0
 9541 0048 2268     		ldr	r2, [r4]
 9542 004a 9368     		ldr	r3, [r2, #8]
 9543 004c 2221     		movs	r1, #34
 9544 004e 8B43     		bics	r3, r1
 9545 0050 9360     		str	r3, [r2, #8]
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9546              		.loc 1 434 0
ARM GAS  /tmp/cceLjgLz.s 			page 273


 9547 0052 2268     		ldr	r2, [r4]
 9548 0054 9168     		ldr	r1, [r2, #8]
 9549 0056 0823     		movs	r3, #8
 9550 0058 0B43     		orrs	r3, r1
 9551 005a 9360     		str	r3, [r2, #8]
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9552              		.loc 1 436 0
 9553 005c 2268     		ldr	r2, [r4]
 9554 005e 1168     		ldr	r1, [r2]
 9555 0060 0123     		movs	r3, #1
 9556 0062 0B43     		orrs	r3, r1
 9557 0064 1360     		str	r3, [r2]
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 9558              		.loc 1 439 0
 9559 0066 2000     		movs	r0, r4
 9560 0068 FFF7FEFF 		bl	UART_CheckIdleState
 9561              	.LVL642:
 9562 006c 00E0     		b	.L371
 9563              	.LVL643:
 9564              	.L374:
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 9565              		.loc 1 385 0
 9566 006e 0120     		movs	r0, #1
 9567              	.LVL644:
 9568              	.L371:
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9569              		.loc 1 440 0
 9570              		@ sp needed
 9571              	.LVL645:
 9572 0070 10BD     		pop	{r4, pc}
 9573              	.L376:
 9574 0072 C046     		.align	2
 9575              	.L375:
 9576 0074 FFB7FFFF 		.word	-18433
 9577              		.cfi_endproc
 9578              	.LFE311:
 9580              		.section	.text.HAL_LIN_Init,"ax",%progbits
 9581              		.align	2
 9582              		.global	HAL_LIN_Init
 9583              		.code	16
 9584              		.thumb_func
 9586              	HAL_LIN_Init:
 9587              	.LFB312:
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 9588              		.loc 1 454 0
 9589              		.cfi_startproc
 9590              		@ args = 0, pretend = 0, frame = 0
 9591              		@ frame_needed = 0, uses_anonymous_args = 0
 9592              	.LVL646:
 9593 0000 70B5     		push	{r4, r5, r6, lr}
 9594              	.LCFI54:
 9595              		.cfi_def_cfa_offset 16
 9596              		.cfi_offset 4, -16
 9597              		.cfi_offset 5, -12
 9598              		.cfi_offset 6, -8
 9599              		.cfi_offset 14, -4
 9600 0002 0400     		movs	r4, r0
ARM GAS  /tmp/cceLjgLz.s 			page 274


 9601 0004 0D00     		movs	r5, r1
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9602              		.loc 1 456 0
 9603 0006 0028     		cmp	r0, #0
 9604 0008 42D0     		beq	.L381
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9605              		.loc 1 467 0
 9606 000a 8023     		movs	r3, #128
 9607 000c 1B02     		lsls	r3, r3, #8
 9608 000e C269     		ldr	r2, [r0, #28]
 9609 0010 9A42     		cmp	r2, r3
 9610 0012 3FD0     		beq	.L382
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9611              		.loc 1 472 0
 9612 0014 8368     		ldr	r3, [r0, #8]
 9613 0016 002B     		cmp	r3, #0
 9614 0018 3ED1     		bne	.L383
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9615              		.loc 1 477 0
 9616 001a 8833     		adds	r3, r3, #136
 9617 001c C358     		ldr	r3, [r0, r3]
 9618 001e 002B     		cmp	r3, #0
 9619 0020 04D1     		bne	.L379
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9620              		.loc 1 480 0
 9621 0022 0022     		movs	r2, #0
 9622 0024 8433     		adds	r3, r3, #132
 9623 0026 C254     		strb	r2, [r0, r3]
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 9624              		.loc 1 494 0
 9625 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 9626              	.LVL647:
 9627              	.L379:
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9628              		.loc 1 498 0
 9629 002c 2422     		movs	r2, #36
 9630 002e 8823     		movs	r3, #136
 9631 0030 E250     		str	r2, [r4, r3]
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9632              		.loc 1 500 0
 9633 0032 2268     		ldr	r2, [r4]
 9634 0034 1368     		ldr	r3, [r2]
 9635 0036 0121     		movs	r1, #1
 9636 0038 8B43     		bics	r3, r1
 9637 003a 1360     		str	r3, [r2]
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9638              		.loc 1 503 0
 9639 003c 2000     		movs	r0, r4
 9640 003e FFF7FEFF 		bl	UART_SetConfig
 9641              	.LVL648:
 9642 0042 0128     		cmp	r0, #1
 9643 0044 29D0     		beq	.L378
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9644              		.loc 1 508 0
 9645 0046 A36A     		ldr	r3, [r4, #40]
 9646 0048 002B     		cmp	r3, #0
 9647 004a 02D0     		beq	.L380
ARM GAS  /tmp/cceLjgLz.s 			page 275


 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 9648              		.loc 1 510 0
 9649 004c 2000     		movs	r0, r4
 9650 004e FFF7FEFF 		bl	UART_AdvFeatureConfig
 9651              	.LVL649:
 9652              	.L380:
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 9653              		.loc 1 516 0
 9654 0052 2268     		ldr	r2, [r4]
 9655 0054 5168     		ldr	r1, [r2, #4]
 9656 0056 114B     		ldr	r3, .L384
 9657 0058 0B40     		ands	r3, r1
 9658 005a 5360     		str	r3, [r2, #4]
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9659              		.loc 1 517 0
 9660 005c 2268     		ldr	r2, [r4]
 9661 005e 9368     		ldr	r3, [r2, #8]
 9662 0060 2A21     		movs	r1, #42
 9663 0062 8B43     		bics	r3, r1
 9664 0064 9360     		str	r3, [r2, #8]
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9665              		.loc 1 520 0
 9666 0066 2268     		ldr	r2, [r4]
 9667 0068 5368     		ldr	r3, [r2, #4]
 9668 006a 8021     		movs	r1, #128
 9669 006c C901     		lsls	r1, r1, #7
 9670 006e 0B43     		orrs	r3, r1
 9671 0070 5360     		str	r3, [r2, #4]
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9672              		.loc 1 523 0
 9673 0072 2268     		ldr	r2, [r4]
 9674 0074 5368     		ldr	r3, [r2, #4]
 9675 0076 2021     		movs	r1, #32
 9676 0078 8B43     		bics	r3, r1
 9677 007a 1D43     		orrs	r5, r3
 9678              	.LVL650:
 9679 007c 5560     		str	r5, [r2, #4]
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9680              		.loc 1 525 0
 9681 007e 2268     		ldr	r2, [r4]
 9682 0080 1168     		ldr	r1, [r2]
 9683 0082 0123     		movs	r3, #1
 9684 0084 0B43     		orrs	r3, r1
 9685 0086 1360     		str	r3, [r2]
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 9686              		.loc 1 528 0
 9687 0088 2000     		movs	r0, r4
 9688 008a FFF7FEFF 		bl	UART_CheckIdleState
 9689              	.LVL651:
 9690 008e 04E0     		b	.L378
 9691              	.LVL652:
 9692              	.L381:
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 9693              		.loc 1 458 0
 9694 0090 0120     		movs	r0, #1
 9695              	.LVL653:
 9696 0092 02E0     		b	.L378
ARM GAS  /tmp/cceLjgLz.s 			page 276


 9697              	.LVL654:
 9698              	.L382:
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 9699              		.loc 1 469 0
 9700 0094 0120     		movs	r0, #1
 9701              	.LVL655:
 9702 0096 00E0     		b	.L378
 9703              	.LVL656:
 9704              	.L383:
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 9705              		.loc 1 474 0
 9706 0098 0120     		movs	r0, #1
 9707              	.LVL657:
 9708              	.L378:
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9709              		.loc 1 529 0
 9710              		@ sp needed
 9711              	.LVL658:
 9712 009a 70BD     		pop	{r4, r5, r6, pc}
 9713              	.L385:
 9714              		.align	2
 9715              	.L384:
 9716 009c FFF7FFFF 		.word	-2049
 9717              		.cfi_endproc
 9718              	.LFE312:
 9720              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 9721              		.align	2
 9722              		.global	HAL_MultiProcessor_Init
 9723              		.code	16
 9724              		.thumb_func
 9726              	HAL_MultiProcessor_Init:
 9727              	.LFB313:
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check the UART handle allocation */
 9728              		.loc 1 551 0
 9729              		.cfi_startproc
 9730              		@ args = 0, pretend = 0, frame = 0
 9731              		@ frame_needed = 0, uses_anonymous_args = 0
 9732              	.LVL659:
 9733 0000 70B5     		push	{r4, r5, r6, lr}
 9734              	.LCFI55:
 9735              		.cfi_def_cfa_offset 16
 9736              		.cfi_offset 4, -16
 9737              		.cfi_offset 5, -12
 9738              		.cfi_offset 6, -8
 9739              		.cfi_offset 14, -4
 9740 0002 0400     		movs	r4, r0
 9741 0004 0D00     		movs	r5, r1
 9742 0006 1600     		movs	r6, r2
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9743              		.loc 1 553 0
 9744 0008 0028     		cmp	r0, #0
 9745 000a 3FD0     		beq	.L391
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9746              		.loc 1 561 0
 9747 000c 8823     		movs	r3, #136
 9748 000e C358     		ldr	r3, [r0, r3]
 9749 0010 002B     		cmp	r3, #0
ARM GAS  /tmp/cceLjgLz.s 			page 277


 9750 0012 04D1     		bne	.L388
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9751              		.loc 1 564 0
 9752 0014 0022     		movs	r2, #0
 9753              	.LVL660:
 9754 0016 8433     		adds	r3, r3, #132
 9755 0018 C254     		strb	r2, [r0, r3]
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 9756              		.loc 1 578 0
 9757 001a FFF7FEFF 		bl	HAL_UART_MspInit
 9758              	.LVL661:
 9759              	.L388:
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9760              		.loc 1 582 0
 9761 001e 2422     		movs	r2, #36
 9762 0020 8823     		movs	r3, #136
 9763 0022 E250     		str	r2, [r4, r3]
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9764              		.loc 1 584 0
 9765 0024 2268     		ldr	r2, [r4]
 9766 0026 1368     		ldr	r3, [r2]
 9767 0028 0121     		movs	r1, #1
 9768 002a 8B43     		bics	r3, r1
 9769 002c 1360     		str	r3, [r2]
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9770              		.loc 1 587 0
 9771 002e 2000     		movs	r0, r4
 9772 0030 FFF7FEFF 		bl	UART_SetConfig
 9773              	.LVL662:
 9774 0034 0128     		cmp	r0, #1
 9775 0036 2AD0     		beq	.L387
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 9776              		.loc 1 592 0
 9777 0038 A36A     		ldr	r3, [r4, #40]
 9778 003a 002B     		cmp	r3, #0
 9779 003c 02D0     		beq	.L389
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 9780              		.loc 1 594 0
 9781 003e 2000     		movs	r0, r4
 9782 0040 FFF7FEFF 		bl	UART_AdvFeatureConfig
 9783              	.LVL663:
 9784              	.L389:
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 9785              		.loc 1 600 0
 9786 0044 2268     		ldr	r2, [r4]
 9787 0046 5168     		ldr	r1, [r2, #4]
 9788 0048 114B     		ldr	r3, .L392
 9789 004a 0B40     		ands	r3, r1
 9790 004c 5360     		str	r3, [r2, #4]
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9791              		.loc 1 601 0
 9792 004e 2268     		ldr	r2, [r4]
 9793 0050 9368     		ldr	r3, [r2, #8]
 9794 0052 2A21     		movs	r1, #42
 9795 0054 8B43     		bics	r3, r1
 9796 0056 9360     		str	r3, [r2, #8]
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
ARM GAS  /tmp/cceLjgLz.s 			page 278


 9797              		.loc 1 603 0
 9798 0058 8023     		movs	r3, #128
 9799 005a 1B01     		lsls	r3, r3, #4
 9800 005c 9E42     		cmp	r6, r3
 9801 005e 06D1     		bne	.L390
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 9802              		.loc 1 606 0
 9803 0060 2268     		ldr	r2, [r4]
 9804 0062 5368     		ldr	r3, [r2, #4]
 9805 0064 1B02     		lsls	r3, r3, #8
 9806 0066 1B0A     		lsrs	r3, r3, #8
 9807 0068 2D06     		lsls	r5, r5, #24
 9808 006a 1D43     		orrs	r5, r3
 9809 006c 5560     		str	r5, [r2, #4]
 9810              	.L390:
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9811              		.loc 1 610 0
 9812 006e 2168     		ldr	r1, [r4]
 9813 0070 0A68     		ldr	r2, [r1]
 9814 0072 084B     		ldr	r3, .L392+4
 9815 0074 1A40     		ands	r2, r3
 9816 0076 3243     		orrs	r2, r6
 9817 0078 0A60     		str	r2, [r1]
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9818              		.loc 1 612 0
 9819 007a 2268     		ldr	r2, [r4]
 9820 007c 1168     		ldr	r1, [r2]
 9821 007e 0123     		movs	r3, #1
 9822 0080 0B43     		orrs	r3, r1
 9823 0082 1360     		str	r3, [r2]
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 9824              		.loc 1 615 0
 9825 0084 2000     		movs	r0, r4
 9826 0086 FFF7FEFF 		bl	UART_CheckIdleState
 9827              	.LVL664:
 9828 008a 00E0     		b	.L387
 9829              	.LVL665:
 9830              	.L391:
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 9831              		.loc 1 555 0
 9832 008c 0120     		movs	r0, #1
 9833              	.LVL666:
 9834              	.L387:
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9835              		.loc 1 616 0
 9836              		@ sp needed
 9837              	.LVL667:
 9838              	.LVL668:
 9839 008e 70BD     		pop	{r4, r5, r6, pc}
 9840              	.L393:
 9841              		.align	2
 9842              	.L392:
 9843 0090 FFB7FFFF 		.word	-18433
 9844 0094 FFF7FFFF 		.word	-2049
 9845              		.cfi_endproc
 9846              	.LFE313:
 9848              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
ARM GAS  /tmp/cceLjgLz.s 			page 279


 9849              		.align	2
 9850              		.global	HAL_MultiProcessor_EnableMuteMode
 9851              		.code	16
 9852              		.thumb_func
 9854              	HAL_MultiProcessor_EnableMuteMode:
 9855              	.LFB345:
2895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 9856              		.loc 1 2895 0
 9857              		.cfi_startproc
 9858              		@ args = 0, pretend = 0, frame = 0
 9859              		@ frame_needed = 0, uses_anonymous_args = 0
 9860              	.LVL669:
 9861 0000 70B5     		push	{r4, r5, r6, lr}
 9862              	.LCFI56:
 9863              		.cfi_def_cfa_offset 16
 9864              		.cfi_offset 4, -16
 9865              		.cfi_offset 5, -12
 9866              		.cfi_offset 6, -8
 9867              		.cfi_offset 14, -4
2896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9868              		.loc 1 2896 0
 9869 0002 8423     		movs	r3, #132
 9870 0004 C35C     		ldrb	r3, [r0, r3]
 9871 0006 012B     		cmp	r3, #1
 9872 0008 17D0     		beq	.L396
2896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9873              		.loc 1 2896 0 is_stmt 0 discriminator 2
 9874 000a 0122     		movs	r2, #1
 9875 000c 8423     		movs	r3, #132
 9876 000e C254     		strb	r2, [r0, r3]
2898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9877              		.loc 1 2898 0 is_stmt 1 discriminator 2
 9878 0010 8732     		adds	r2, r2, #135
 9879 0012 603B     		subs	r3, r3, #96
 9880 0014 8350     		str	r3, [r0, r2]
 9881              	.LBB1336:
 9882              	.LBB1337:
 9883              	.LBB1338:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 9884              		.loc 2 453 0 discriminator 2
 9885              		.syntax divided
 9886              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9887 0016 EFF31084 		MRS r4, primask
 9888              	@ 0 "" 2
 9889              	.LVL670:
 9890              		.thumb
 9891              		.syntax unified
 9892              	.LBE1338:
 9893              	.LBE1337:
 9894              	.LBB1339:
 9895              	.LBB1340:
 9896              		.loc 2 481 0 discriminator 2
 9897 001a 233B     		subs	r3, r3, #35
 9898              		.syntax divided
 9899              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9900 001c 83F31088 		MSR primask, r3
 9901              	@ 0 "" 2
ARM GAS  /tmp/cceLjgLz.s 			page 280


 9902              	.LVL671:
 9903              		.thumb
 9904              		.syntax unified
 9905              	.LBE1340:
 9906              	.LBE1339:
2901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9907              		.loc 1 2901 0 discriminator 2
 9908 0020 0168     		ldr	r1, [r0]
 9909 0022 0B68     		ldr	r3, [r1]
 9910 0024 8025     		movs	r5, #128
 9911 0026 AD01     		lsls	r5, r5, #6
 9912 0028 2B43     		orrs	r3, r5
 9913 002a 0B60     		str	r3, [r1]
 9914              	.LBB1341:
 9915              	.LBB1342:
 9916              		.loc 2 481 0 discriminator 2
 9917              		.syntax divided
 9918              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9919 002c 84F31088 		MSR primask, r4
 9920              	@ 0 "" 2
 9921              		.thumb
 9922              		.syntax unified
 9923              	.LBE1342:
 9924              	.LBE1341:
 9925              	.LBE1336:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9926              		.loc 1 2903 0 discriminator 2
 9927 0030 2023     		movs	r3, #32
 9928 0032 8350     		str	r3, [r0, r2]
2905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 9929              		.loc 1 2905 0 discriminator 2
 9930 0034 FFF7FEFF 		bl	UART_CheckIdleState
 9931              	.LVL672:
 9932 0038 00E0     		b	.L395
 9933              	.LVL673:
 9934              	.L396:
2896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9935              		.loc 1 2896 0
 9936 003a 0220     		movs	r0, #2
 9937              	.LVL674:
 9938              	.L395:
2906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9939              		.loc 1 2906 0
 9940              		@ sp needed
 9941 003c 70BD     		pop	{r4, r5, r6, pc}
 9942              		.cfi_endproc
 9943              	.LFE345:
 9945 003e C046     		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 9946              		.align	2
 9947              		.global	HAL_MultiProcessor_DisableMuteMode
 9948              		.code	16
 9949              		.thumb_func
 9951              	HAL_MultiProcessor_DisableMuteMode:
 9952              	.LFB346:
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   __HAL_LOCK(huart);
 9953              		.loc 1 2915 0
 9954              		.cfi_startproc
ARM GAS  /tmp/cceLjgLz.s 			page 281


 9955              		@ args = 0, pretend = 0, frame = 0
 9956              		@ frame_needed = 0, uses_anonymous_args = 0
 9957              	.LVL675:
 9958 0000 70B5     		push	{r4, r5, r6, lr}
 9959              	.LCFI57:
 9960              		.cfi_def_cfa_offset 16
 9961              		.cfi_offset 4, -16
 9962              		.cfi_offset 5, -12
 9963              		.cfi_offset 6, -8
 9964              		.cfi_offset 14, -4
2916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9965              		.loc 1 2916 0
 9966 0002 8423     		movs	r3, #132
 9967 0004 C35C     		ldrb	r3, [r0, r3]
 9968 0006 012B     		cmp	r3, #1
 9969 0008 16D0     		beq	.L399
2916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9970              		.loc 1 2916 0 is_stmt 0 discriminator 2
 9971 000a 0122     		movs	r2, #1
 9972 000c 8423     		movs	r3, #132
 9973 000e C254     		strb	r2, [r0, r3]
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 9974              		.loc 1 2918 0 is_stmt 1 discriminator 2
 9975 0010 8732     		adds	r2, r2, #135
 9976 0012 603B     		subs	r3, r3, #96
 9977 0014 8350     		str	r3, [r0, r2]
 9978              	.LBB1343:
 9979              	.LBB1344:
 9980              	.LBB1345:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 9981              		.loc 2 453 0 discriminator 2
 9982              		.syntax divided
 9983              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9984 0016 EFF31084 		MRS r4, primask
 9985              	@ 0 "" 2
 9986              	.LVL676:
 9987              		.thumb
 9988              		.syntax unified
 9989              	.LBE1345:
 9990              	.LBE1344:
 9991              	.LBB1346:
 9992              	.LBB1347:
 9993              		.loc 2 481 0 discriminator 2
 9994 001a 233B     		subs	r3, r3, #35
 9995              		.syntax divided
 9996              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9997 001c 83F31088 		MSR primask, r3
 9998              	@ 0 "" 2
 9999              	.LVL677:
 10000              		.thumb
 10001              		.syntax unified
 10002              	.LBE1347:
 10003              	.LBE1346:
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10004              		.loc 1 2921 0 discriminator 2
 10005 0020 0168     		ldr	r1, [r0]
 10006 0022 0D68     		ldr	r5, [r1]
ARM GAS  /tmp/cceLjgLz.s 			page 282


 10007 0024 054B     		ldr	r3, .L400
 10008 0026 2B40     		ands	r3, r5
 10009 0028 0B60     		str	r3, [r1]
 10010              	.LBB1348:
 10011              	.LBB1349:
 10012              		.loc 2 481 0 discriminator 2
 10013              		.syntax divided
 10014              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10015 002a 84F31088 		MSR primask, r4
 10016              	@ 0 "" 2
 10017              		.thumb
 10018              		.syntax unified
 10019              	.LBE1349:
 10020              	.LBE1348:
 10021              	.LBE1343:
2923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10022              		.loc 1 2923 0 discriminator 2
 10023 002e 2023     		movs	r3, #32
 10024 0030 8350     		str	r3, [r0, r2]
2925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 10025              		.loc 1 2925 0 discriminator 2
 10026 0032 FFF7FEFF 		bl	UART_CheckIdleState
 10027              	.LVL678:
 10028 0036 00E0     		b	.L398
 10029              	.LVL679:
 10030              	.L399:
2916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10031              		.loc 1 2916 0
 10032 0038 0220     		movs	r0, #2
 10033              	.LVL680:
 10034              	.L398:
2926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10035              		.loc 1 2926 0
 10036              		@ sp needed
 10037 003a 70BD     		pop	{r4, r5, r6, pc}
 10038              	.L401:
 10039              		.align	2
 10040              	.L400:
 10041 003c FFDFFFFF 		.word	-8193
 10042              		.cfi_endproc
 10043              	.LFE346:
 10045              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 10046              		.align	2
 10047              		.global	UART_Start_Receive_IT
 10048              		.code	16
 10049              		.thumb_func
 10051              	UART_Start_Receive_IT:
 10052              	.LFB357:
3501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
 10053              		.loc 1 3501 0
 10054              		.cfi_startproc
 10055              		@ args = 0, pretend = 0, frame = 0
 10056              		@ frame_needed = 0, uses_anonymous_args = 0
 10057              	.LVL681:
 10058 0000 30B5     		push	{r4, r5, lr}
 10059              	.LCFI58:
 10060              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cceLjgLz.s 			page 283


 10061              		.cfi_offset 4, -12
 10062              		.cfi_offset 5, -8
 10063              		.cfi_offset 14, -4
3502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferSize  = Size;
 10064              		.loc 1 3502 0
 10065 0002 8165     		str	r1, [r0, #88]
3503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferCount = Size;
 10066              		.loc 1 3503 0
 10067 0004 5C23     		movs	r3, #92
 10068 0006 C252     		strh	r2, [r0, r3]
3504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxISR       = NULL;
 10069              		.loc 1 3504 0
 10070 0008 0233     		adds	r3, r3, #2
 10071 000a C252     		strh	r2, [r0, r3]
3505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10072              		.loc 1 3505 0
 10073 000c 0023     		movs	r3, #0
 10074 000e 4367     		str	r3, [r0, #116]
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10075              		.loc 1 3508 0
 10076 0010 8368     		ldr	r3, [r0, #8]
 10077 0012 8021     		movs	r1, #128
 10078              	.LVL682:
 10079 0014 4901     		lsls	r1, r1, #5
 10080 0016 8B42     		cmp	r3, r1
 10081 0018 0AD1     		bne	.L403
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10082              		.loc 1 3508 0 is_stmt 0 discriminator 1
 10083 001a 0369     		ldr	r3, [r0, #16]
 10084 001c 002B     		cmp	r3, #0
 10085 001e 03D1     		bne	.L404
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10086              		.loc 1 3508 0 discriminator 3
 10087 0020 4B49     		ldr	r1, .L418
 10088 0022 6033     		adds	r3, r3, #96
 10089 0024 C152     		strh	r1, [r0, r3]
 10090 0026 22E0     		b	.L405
 10091              	.L404:
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10092              		.loc 1 3508 0 discriminator 4
 10093 0028 FF21     		movs	r1, #255
 10094 002a 6023     		movs	r3, #96
 10095 002c C152     		strh	r1, [r0, r3]
 10096 002e 1EE0     		b	.L405
 10097              	.L403:
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10098              		.loc 1 3508 0 discriminator 2
 10099 0030 002B     		cmp	r3, #0
 10100 0032 0AD1     		bne	.L406
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10101              		.loc 1 3508 0 discriminator 5
 10102 0034 0369     		ldr	r3, [r0, #16]
 10103 0036 002B     		cmp	r3, #0
 10104 0038 03D1     		bne	.L407
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10105              		.loc 1 3508 0 discriminator 7
 10106 003a FF21     		movs	r1, #255
ARM GAS  /tmp/cceLjgLz.s 			page 284


 10107 003c 6033     		adds	r3, r3, #96
 10108 003e C152     		strh	r1, [r0, r3]
 10109 0040 15E0     		b	.L405
 10110              	.L407:
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10111              		.loc 1 3508 0 discriminator 8
 10112 0042 7F21     		movs	r1, #127
 10113 0044 6023     		movs	r3, #96
 10114 0046 C152     		strh	r1, [r0, r3]
 10115 0048 11E0     		b	.L405
 10116              	.L406:
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10117              		.loc 1 3508 0 discriminator 6
 10118 004a 8021     		movs	r1, #128
 10119 004c 4905     		lsls	r1, r1, #21
 10120 004e 8B42     		cmp	r3, r1
 10121 0050 0AD1     		bne	.L408
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10122              		.loc 1 3508 0 discriminator 9
 10123 0052 0369     		ldr	r3, [r0, #16]
 10124 0054 002B     		cmp	r3, #0
 10125 0056 03D1     		bne	.L409
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10126              		.loc 1 3508 0 discriminator 11
 10127 0058 7F21     		movs	r1, #127
 10128 005a 6033     		adds	r3, r3, #96
 10129 005c C152     		strh	r1, [r0, r3]
 10130 005e 06E0     		b	.L405
 10131              	.L409:
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10132              		.loc 1 3508 0 discriminator 12
 10133 0060 3F21     		movs	r1, #63
 10134 0062 6023     		movs	r3, #96
 10135 0064 C152     		strh	r1, [r0, r3]
 10136 0066 02E0     		b	.L405
 10137              	.L408:
3508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10138              		.loc 1 3508 0 discriminator 10
 10139 0068 0021     		movs	r1, #0
 10140 006a 6023     		movs	r3, #96
 10141 006c C152     		strh	r1, [r0, r3]
 10142              	.L405:
3510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 10143              		.loc 1 3510 0 is_stmt 1
 10144 006e 0021     		movs	r1, #0
 10145 0070 9023     		movs	r3, #144
 10146 0072 C150     		str	r1, [r0, r3]
3511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10147              		.loc 1 3511 0
 10148 0074 2231     		adds	r1, r1, #34
 10149 0076 043B     		subs	r3, r3, #4
 10150 0078 C150     		str	r1, [r0, r3]
 10151              	.LBB1350:
 10152              	.LBB1351:
 10153              	.LBB1352:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10154              		.loc 2 453 0
ARM GAS  /tmp/cceLjgLz.s 			page 285


 10155              		.syntax divided
 10156              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10157 007a EFF31084 		MRS r4, primask
 10158              	@ 0 "" 2
 10159              	.LVL683:
 10160              		.thumb
 10161              		.syntax unified
 10162              	.LBE1352:
 10163              	.LBE1351:
 10164              	.LBB1353:
 10165              	.LBB1354:
 10166              		.loc 2 481 0
 10167 007e 8B3B     		subs	r3, r3, #139
 10168              		.syntax divided
 10169              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10170 0080 83F31088 		MSR primask, r3
 10171              	@ 0 "" 2
 10172              	.LVL684:
 10173              		.thumb
 10174              		.syntax unified
 10175              	.LBE1354:
 10176              	.LBE1353:
3514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10177              		.loc 1 3514 0
 10178 0084 0168     		ldr	r1, [r0]
 10179 0086 8D68     		ldr	r5, [r1, #8]
 10180 0088 2B43     		orrs	r3, r5
 10181 008a 8B60     		str	r3, [r1, #8]
 10182              	.LBB1355:
 10183              	.LBB1356:
 10184              		.loc 2 481 0
 10185              		.syntax divided
 10186              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10187 008c 84F31088 		MSR primask, r4
 10188              	@ 0 "" 2
 10189              		.thumb
 10190              		.syntax unified
 10191              	.LBE1356:
 10192              	.LBE1355:
 10193              	.LBE1350:
3517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 10194              		.loc 1 3517 0
 10195 0090 8023     		movs	r3, #128
 10196 0092 9B05     		lsls	r3, r3, #22
 10197 0094 416E     		ldr	r1, [r0, #100]
 10198 0096 9942     		cmp	r1, r3
 10199 0098 2ED1     		bne	.L410
3517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 10200              		.loc 1 3517 0 is_stmt 0 discriminator 1
 10201 009a 6823     		movs	r3, #104
 10202 009c C35A     		ldrh	r3, [r0, r3]
 10203 009e 9A42     		cmp	r2, r3
 10204 00a0 2AD3     		bcc	.L410
3520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10205              		.loc 1 3520 0 is_stmt 1
 10206 00a2 8023     		movs	r3, #128
 10207 00a4 5B01     		lsls	r3, r3, #5
ARM GAS  /tmp/cceLjgLz.s 			page 286


 10208 00a6 8268     		ldr	r2, [r0, #8]
 10209              	.LVL685:
 10210 00a8 9A42     		cmp	r2, r3
 10211 00aa 05D1     		bne	.L411
3520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10212              		.loc 1 3520 0 is_stmt 0 discriminator 1
 10213 00ac 0369     		ldr	r3, [r0, #16]
 10214 00ae 002B     		cmp	r3, #0
 10215 00b0 02D1     		bne	.L411
3522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 10216              		.loc 1 3522 0 is_stmt 1
 10217 00b2 284B     		ldr	r3, .L418+4
 10218 00b4 4367     		str	r3, [r0, #116]
 10219 00b6 01E0     		b	.L412
 10220              	.L411:
3526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 10221              		.loc 1 3526 0
 10222 00b8 274B     		ldr	r3, .L418+8
 10223 00ba 4367     		str	r3, [r0, #116]
 10224              	.L412:
3530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10225              		.loc 1 3530 0
 10226 00bc 0369     		ldr	r3, [r0, #16]
 10227 00be 002B     		cmp	r3, #0
 10228 00c0 0CD0     		beq	.L413
 10229              	.LBB1357:
 10230              	.LBB1358:
 10231              	.LBB1359:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10232              		.loc 2 453 0
 10233              		.syntax divided
 10234              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10235 00c2 EFF31081 		MRS r1, primask
 10236              	@ 0 "" 2
 10237              	.LVL686:
 10238              		.thumb
 10239              		.syntax unified
 10240              	.LBE1359:
 10241              	.LBE1358:
 10242              	.LBB1360:
 10243              	.LBB1361:
 10244              		.loc 2 481 0
 10245 00c6 0123     		movs	r3, #1
 10246              		.syntax divided
 10247              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10248 00c8 83F31088 		MSR primask, r3
 10249              	@ 0 "" 2
 10250              	.LVL687:
 10251              		.thumb
 10252              		.syntax unified
 10253              	.LBE1361:
 10254              	.LBE1360:
3532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 10255              		.loc 1 3532 0
 10256 00cc 0268     		ldr	r2, [r0]
 10257 00ce 1368     		ldr	r3, [r2]
 10258 00d0 8024     		movs	r4, #128
ARM GAS  /tmp/cceLjgLz.s 			page 287


 10259 00d2 6400     		lsls	r4, r4, #1
 10260 00d4 2343     		orrs	r3, r4
 10261 00d6 1360     		str	r3, [r2]
 10262              	.LBB1362:
 10263              	.LBB1363:
 10264              		.loc 2 481 0
 10265              		.syntax divided
 10266              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10267 00d8 81F31088 		MSR primask, r1
 10268              	@ 0 "" 2
 10269              		.thumb
 10270              		.syntax unified
 10271              	.L413:
 10272              	.LBE1363:
 10273              	.LBE1362:
 10274              	.LBE1357:
 10275              	.LBB1364:
 10276              	.LBB1365:
 10277              	.LBB1366:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10278              		.loc 2 453 0
 10279              		.syntax divided
 10280              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10281 00dc EFF31081 		MRS r1, primask
 10282              	@ 0 "" 2
 10283              	.LVL688:
 10284              		.thumb
 10285              		.syntax unified
 10286              	.LBE1366:
 10287              	.LBE1365:
 10288              	.LBB1367:
 10289              	.LBB1368:
 10290              		.loc 2 481 0
 10291 00e0 0123     		movs	r3, #1
 10292              		.syntax divided
 10293              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10294 00e2 83F31088 		MSR primask, r3
 10295              	@ 0 "" 2
 10296              	.LVL689:
 10297              		.thumb
 10298              		.syntax unified
 10299              	.LBE1368:
 10300              	.LBE1367:
3534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 10301              		.loc 1 3534 0
 10302 00e6 0268     		ldr	r2, [r0]
 10303 00e8 9368     		ldr	r3, [r2, #8]
 10304 00ea 8020     		movs	r0, #128
 10305              	.LVL690:
 10306 00ec 4005     		lsls	r0, r0, #21
 10307 00ee 0343     		orrs	r3, r0
 10308 00f0 9360     		str	r3, [r2, #8]
 10309              	.LBB1369:
 10310              	.LBB1370:
 10311              		.loc 2 481 0
 10312              		.syntax divided
 10313              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cceLjgLz.s 			page 288


 10314 00f2 81F31088 		MSR primask, r1
 10315              	@ 0 "" 2
 10316              		.thumb
 10317              		.syntax unified
 10318 00f6 29E0     		b	.L414
 10319              	.LVL691:
 10320              	.L410:
 10321              	.LBE1370:
 10322              	.LBE1369:
 10323              	.LBE1364:
3539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10324              		.loc 1 3539 0
 10325 00f8 8023     		movs	r3, #128
 10326 00fa 5B01     		lsls	r3, r3, #5
 10327 00fc 8268     		ldr	r2, [r0, #8]
 10328              	.LVL692:
 10329 00fe 9A42     		cmp	r2, r3
 10330 0100 05D1     		bne	.L415
3539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10331              		.loc 1 3539 0 is_stmt 0 discriminator 1
 10332 0102 0369     		ldr	r3, [r0, #16]
 10333 0104 002B     		cmp	r3, #0
 10334 0106 02D1     		bne	.L415
3541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 10335              		.loc 1 3541 0 is_stmt 1
 10336 0108 144B     		ldr	r3, .L418+12
 10337 010a 4367     		str	r3, [r0, #116]
 10338 010c 01E0     		b	.L416
 10339              	.L415:
3545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 10340              		.loc 1 3545 0
 10341 010e 144B     		ldr	r3, .L418+16
 10342 0110 4367     		str	r3, [r0, #116]
 10343              	.L416:
3549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10344              		.loc 1 3549 0
 10345 0112 0369     		ldr	r3, [r0, #16]
 10346 0114 002B     		cmp	r3, #0
 10347 0116 0DD0     		beq	.L417
 10348              	.LBB1371:
 10349              	.LBB1372:
 10350              	.LBB1373:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10351              		.loc 2 453 0
 10352              		.syntax divided
 10353              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10354 0118 EFF31081 		MRS r1, primask
 10355              	@ 0 "" 2
 10356              	.LVL693:
 10357              		.thumb
 10358              		.syntax unified
 10359              	.LBE1373:
 10360              	.LBE1372:
 10361              	.LBB1374:
 10362              	.LBB1375:
 10363              		.loc 2 481 0
 10364 011c 0123     		movs	r3, #1
ARM GAS  /tmp/cceLjgLz.s 			page 289


 10365              		.syntax divided
 10366              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10367 011e 83F31088 		MSR primask, r3
 10368              	@ 0 "" 2
 10369              	.LVL694:
 10370              		.thumb
 10371              		.syntax unified
 10372              	.LBE1375:
 10373              	.LBE1374:
3551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 10374              		.loc 1 3551 0
 10375 0122 0268     		ldr	r2, [r0]
 10376 0124 1368     		ldr	r3, [r2]
 10377 0126 9020     		movs	r0, #144
 10378              	.LVL695:
 10379 0128 4000     		lsls	r0, r0, #1
 10380 012a 0343     		orrs	r3, r0
 10381 012c 1360     		str	r3, [r2]
 10382              	.LBB1376:
 10383              	.LBB1377:
 10384              		.loc 2 481 0
 10385              		.syntax divided
 10386              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10387 012e 81F31088 		MSR primask, r1
 10388              	@ 0 "" 2
 10389              		.thumb
 10390              		.syntax unified
 10391 0132 0BE0     		b	.L414
 10392              	.LVL696:
 10393              	.L417:
 10394              	.LBE1377:
 10395              	.LBE1376:
 10396              	.LBE1371:
 10397              	.LBB1378:
 10398              	.LBB1379:
 10399              	.LBB1380:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10400              		.loc 2 453 0
 10401              		.syntax divided
 10402              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10403 0134 EFF31081 		MRS r1, primask
 10404              	@ 0 "" 2
 10405              	.LVL697:
 10406              		.thumb
 10407              		.syntax unified
 10408              	.LBE1380:
 10409              	.LBE1379:
 10410              	.LBB1381:
 10411              	.LBB1382:
 10412              		.loc 2 481 0
 10413 0138 0123     		movs	r3, #1
 10414              		.syntax divided
 10415              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10416 013a 83F31088 		MSR primask, r3
 10417              	@ 0 "" 2
 10418              	.LVL698:
 10419              		.thumb
ARM GAS  /tmp/cceLjgLz.s 			page 290


 10420              		.syntax unified
 10421              	.LBE1382:
 10422              	.LBE1381:
3555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 10423              		.loc 1 3555 0
 10424 013e 0268     		ldr	r2, [r0]
 10425 0140 1068     		ldr	r0, [r2]
 10426              	.LVL699:
 10427 0142 1F33     		adds	r3, r3, #31
 10428 0144 0343     		orrs	r3, r0
 10429 0146 1360     		str	r3, [r2]
 10430              	.LBB1383:
 10431              	.LBB1384:
 10432              		.loc 2 481 0
 10433              		.syntax divided
 10434              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10435 0148 81F31088 		MSR primask, r1
 10436              	@ 0 "" 2
 10437              		.thumb
 10438              		.syntax unified
 10439              	.L414:
 10440              	.LBE1384:
 10441              	.LBE1383:
 10442              	.LBE1378:
3559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10443              		.loc 1 3559 0
 10444 014c 0020     		movs	r0, #0
 10445              		@ sp needed
 10446 014e 30BD     		pop	{r4, r5, pc}
 10447              	.L419:
 10448              		.align	2
 10449              	.L418:
 10450 0150 FF010000 		.word	511
 10451 0154 00000000 		.word	UART_RxISR_16BIT_FIFOEN
 10452 0158 00000000 		.word	UART_RxISR_8BIT_FIFOEN
 10453 015c 00000000 		.word	UART_RxISR_16BIT
 10454 0160 00000000 		.word	UART_RxISR_8BIT
 10455              		.cfi_endproc
 10456              	.LFE357:
 10458              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 10459              		.align	2
 10460              		.global	HAL_UART_Receive_IT
 10461              		.code	16
 10462              		.thumb_func
 10464              	HAL_UART_Receive_IT:
 10465              	.LFB320:
1411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 10466              		.loc 1 1411 0
 10467              		.cfi_startproc
 10468              		@ args = 0, pretend = 0, frame = 0
 10469              		@ frame_needed = 0, uses_anonymous_args = 0
 10470              	.LVL700:
 10471 0000 70B5     		push	{r4, r5, r6, lr}
 10472              	.LCFI59:
 10473              		.cfi_def_cfa_offset 16
 10474              		.cfi_offset 4, -16
 10475              		.cfi_offset 5, -12
ARM GAS  /tmp/cceLjgLz.s 			page 291


 10476              		.cfi_offset 6, -8
 10477              		.cfi_offset 14, -4
1413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 10478              		.loc 1 1413 0
 10479 0002 8C23     		movs	r3, #140
 10480 0004 C358     		ldr	r3, [r0, r3]
 10481 0006 202B     		cmp	r3, #32
 10482 0008 23D1     		bne	.L424
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10483              		.loc 1 1415 0
 10484 000a 0029     		cmp	r1, #0
 10485 000c 23D0     		beq	.L425
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10486              		.loc 1 1415 0 is_stmt 0 discriminator 1
 10487 000e 002A     		cmp	r2, #0
 10488 0010 23D0     		beq	.L426
1423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10489              		.loc 1 1423 0 is_stmt 1
 10490 0012 8023     		movs	r3, #128
 10491 0014 5B01     		lsls	r3, r3, #5
 10492 0016 8468     		ldr	r4, [r0, #8]
 10493 0018 9C42     		cmp	r4, r3
 10494 001a 04D1     		bne	.L422
1423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10495              		.loc 1 1423 0 is_stmt 0 discriminator 1
 10496 001c 0369     		ldr	r3, [r0, #16]
 10497 001e 002B     		cmp	r3, #0
 10498 0020 01D1     		bne	.L422
1425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 10499              		.loc 1 1425 0 is_stmt 1
 10500 0022 CB07     		lsls	r3, r1, #31
 10501 0024 1BD4     		bmi	.L427
 10502              	.L422:
1432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10503              		.loc 1 1432 0
 10504 0026 0023     		movs	r3, #0
 10505 0028 C366     		str	r3, [r0, #108]
1437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 10506              		.loc 1 1437 0
 10507 002a 0368     		ldr	r3, [r0]
 10508 002c 5B68     		ldr	r3, [r3, #4]
 10509 002e 1B02     		lsls	r3, r3, #8
 10510 0030 0CD5     		bpl	.L423
 10511              	.LBB1385:
 10512              	.LBB1386:
 10513              	.LBB1387:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10514              		.loc 2 453 0
 10515              		.syntax divided
 10516              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10517 0032 EFF31085 		MRS r5, primask
 10518              	@ 0 "" 2
 10519              	.LVL701:
 10520              		.thumb
 10521              		.syntax unified
 10522              	.LBE1387:
 10523              	.LBE1386:
ARM GAS  /tmp/cceLjgLz.s 			page 292


 10524              	.LBB1388:
 10525              	.LBB1389:
 10526              		.loc 2 481 0
 10527 0036 0123     		movs	r3, #1
 10528              		.syntax divided
 10529              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10530 0038 83F31088 		MSR primask, r3
 10531              	@ 0 "" 2
 10532              	.LVL702:
 10533              		.thumb
 10534              		.syntax unified
 10535              	.LBE1389:
 10536              	.LBE1388:
1440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 10537              		.loc 1 1440 0
 10538 003c 0468     		ldr	r4, [r0]
 10539 003e 2368     		ldr	r3, [r4]
 10540 0040 8026     		movs	r6, #128
 10541 0042 F604     		lsls	r6, r6, #19
 10542 0044 3343     		orrs	r3, r6
 10543 0046 2360     		str	r3, [r4]
 10544              	.LBB1390:
 10545              	.LBB1391:
 10546              		.loc 2 481 0
 10547              		.syntax divided
 10548              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10549 0048 85F31088 		MSR primask, r5
 10550              	@ 0 "" 2
 10551              		.thumb
 10552              		.syntax unified
 10553              	.L423:
 10554              	.LBE1391:
 10555              	.LBE1390:
 10556              	.LBE1385:
1444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 10557              		.loc 1 1444 0
 10558 004c FFF7FEFF 		bl	UART_Start_Receive_IT
 10559              	.LVL703:
 10560 0050 06E0     		b	.L421
 10561              	.LVL704:
 10562              	.L424:
1448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 10563              		.loc 1 1448 0
 10564 0052 0220     		movs	r0, #2
 10565              	.LVL705:
 10566 0054 04E0     		b	.L421
 10567              	.LVL706:
 10568              	.L425:
1417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 10569              		.loc 1 1417 0
 10570 0056 0120     		movs	r0, #1
 10571              	.LVL707:
 10572 0058 02E0     		b	.L421
 10573              	.LVL708:
 10574              	.L426:
 10575 005a 0120     		movs	r0, #1
 10576              	.LVL709:
ARM GAS  /tmp/cceLjgLz.s 			page 293


 10577 005c 00E0     		b	.L421
 10578              	.LVL710:
 10579              	.L427:
1427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 10580              		.loc 1 1427 0
 10581 005e 0120     		movs	r0, #1
 10582              	.LVL711:
 10583              	.L421:
1450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10584              		.loc 1 1450 0
 10585              		@ sp needed
 10586 0060 70BD     		pop	{r4, r5, r6, pc}
 10587              		.cfi_endproc
 10588              	.LFE320:
 10590 0062 C046     		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 10591              		.align	2
 10592              		.global	UART_Start_Receive_DMA
 10593              		.code	16
 10594              		.thumb_func
 10596              	UART_Start_Receive_DMA:
 10597              	.LFB358:
3573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 10598              		.loc 1 3573 0
 10599              		.cfi_startproc
 10600              		@ args = 0, pretend = 0, frame = 0
 10601              		@ frame_needed = 0, uses_anonymous_args = 0
 10602              	.LVL712:
 10603 0000 10B5     		push	{r4, lr}
 10604              	.LCFI60:
 10605              		.cfi_def_cfa_offset 8
 10606              		.cfi_offset 4, -8
 10607              		.cfi_offset 14, -4
 10608 0002 0400     		movs	r4, r0
3574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxXferSize = Size;
 10609              		.loc 1 3574 0
 10610 0004 8165     		str	r1, [r0, #88]
3575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10611              		.loc 1 3575 0
 10612 0006 5C23     		movs	r3, #92
 10613 0008 C252     		strh	r2, [r0, r3]
3577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 10614              		.loc 1 3577 0
 10615 000a 0021     		movs	r1, #0
 10616              	.LVL713:
 10617 000c 3433     		adds	r3, r3, #52
 10618 000e C150     		str	r1, [r0, r3]
3578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10619              		.loc 1 3578 0
 10620 0010 2231     		adds	r1, r1, #34
 10621 0012 043B     		subs	r3, r3, #4
 10622 0014 C150     		str	r1, [r0, r3]
3580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 10623              		.loc 1 3580 0
 10624 0016 0C3B     		subs	r3, r3, #12
 10625 0018 C358     		ldr	r3, [r0, r3]
 10626 001a 002B     		cmp	r3, #0
 10627 001c 1CD0     		beq	.L429
ARM GAS  /tmp/cceLjgLz.s 			page 294


3583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10628              		.loc 1 3583 0
 10629 001e 2349     		ldr	r1, .L432
 10630 0020 D962     		str	r1, [r3, #44]
3586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10631              		.loc 1 3586 0
 10632 0022 8020     		movs	r0, #128
 10633              	.LVL714:
 10634 0024 2358     		ldr	r3, [r4, r0]
 10635 0026 2249     		ldr	r1, .L432+4
 10636 0028 1963     		str	r1, [r3, #48]
3589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10637              		.loc 1 3589 0
 10638 002a 2358     		ldr	r3, [r4, r0]
 10639 002c 2149     		ldr	r1, .L432+8
 10640 002e 5963     		str	r1, [r3, #52]
3592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10641              		.loc 1 3592 0
 10642 0030 2358     		ldr	r3, [r4, r0]
 10643 0032 0021     		movs	r1, #0
 10644 0034 9963     		str	r1, [r3, #56]
3595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10645              		.loc 1 3595 0
 10646 0036 2168     		ldr	r1, [r4]
 10647 0038 2431     		adds	r1, r1, #36
 10648 003a 2058     		ldr	r0, [r4, r0]
 10649 003c 1300     		movs	r3, r2
 10650 003e A26D     		ldr	r2, [r4, #88]
 10651              	.LVL715:
 10652 0040 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10653              	.LVL716:
 10654 0044 0028     		cmp	r0, #0
 10655 0046 07D0     		beq	.L429
3598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10656              		.loc 1 3598 0
 10657 0048 1022     		movs	r2, #16
 10658 004a 9023     		movs	r3, #144
 10659 004c E250     		str	r2, [r4, r3]
3601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10660              		.loc 1 3601 0
 10661 004e 1032     		adds	r2, r2, #16
 10662 0050 043B     		subs	r3, r3, #4
 10663 0052 E250     		str	r2, [r4, r3]
3603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 10664              		.loc 1 3603 0
 10665 0054 0120     		movs	r0, #1
 10666 0056 27E0     		b	.L430
 10667              	.L429:
3608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 10668              		.loc 1 3608 0
 10669 0058 2369     		ldr	r3, [r4, #16]
 10670 005a 002B     		cmp	r3, #0
 10671 005c 0CD0     		beq	.L431
 10672              	.LBB1392:
 10673              	.LBB1393:
 10674              	.LBB1394:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/cceLjgLz.s 			page 295


 10675              		.loc 2 453 0
 10676              		.syntax divided
 10677              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10678 005e EFF31081 		MRS r1, primask
 10679              	@ 0 "" 2
 10680              	.LVL717:
 10681              		.thumb
 10682              		.syntax unified
 10683              	.LBE1394:
 10684              	.LBE1393:
 10685              	.LBB1395:
 10686              	.LBB1396:
 10687              		.loc 2 481 0
 10688 0062 0123     		movs	r3, #1
 10689              		.syntax divided
 10690              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10691 0064 83F31088 		MSR primask, r3
 10692              	@ 0 "" 2
 10693              	.LVL718:
 10694              		.thumb
 10695              		.syntax unified
 10696              	.LBE1396:
 10697              	.LBE1395:
3610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 10698              		.loc 1 3610 0
 10699 0068 2268     		ldr	r2, [r4]
 10700 006a 1368     		ldr	r3, [r2]
 10701 006c 8020     		movs	r0, #128
 10702 006e 4000     		lsls	r0, r0, #1
 10703 0070 0343     		orrs	r3, r0
 10704 0072 1360     		str	r3, [r2]
 10705              	.LBB1397:
 10706              	.LBB1398:
 10707              		.loc 2 481 0
 10708              		.syntax divided
 10709              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10710 0074 81F31088 		MSR primask, r1
 10711              	@ 0 "" 2
 10712              		.thumb
 10713              		.syntax unified
 10714              	.L431:
 10715              	.LBE1398:
 10716              	.LBE1397:
 10717              	.LBE1392:
 10718              	.LBB1399:
 10719              	.LBB1400:
 10720              	.LBB1401:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10721              		.loc 2 453 0
 10722              		.syntax divided
 10723              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10724 0078 EFF31081 		MRS r1, primask
 10725              	@ 0 "" 2
 10726              	.LVL719:
 10727              		.thumb
 10728              		.syntax unified
 10729              	.LBE1401:
ARM GAS  /tmp/cceLjgLz.s 			page 296


 10730              	.LBE1400:
 10731              	.LBB1402:
 10732              	.LBB1403:
 10733              		.loc 2 481 0
 10734 007c 0123     		movs	r3, #1
 10735              		.syntax divided
 10736              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10737 007e 83F31088 		MSR primask, r3
 10738              	@ 0 "" 2
 10739              	.LVL720:
 10740              		.thumb
 10741              		.syntax unified
 10742              	.LBE1403:
 10743              	.LBE1402:
3614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10744              		.loc 1 3614 0
 10745 0082 2268     		ldr	r2, [r4]
 10746 0084 9068     		ldr	r0, [r2, #8]
 10747 0086 0343     		orrs	r3, r0
 10748 0088 9360     		str	r3, [r2, #8]
 10749              	.LBB1404:
 10750              	.LBB1405:
 10751              		.loc 2 481 0
 10752              		.syntax divided
 10753              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10754 008a 81F31088 		MSR primask, r1
 10755              	@ 0 "" 2
 10756              		.thumb
 10757              		.syntax unified
 10758              	.LBE1405:
 10759              	.LBE1404:
 10760              	.LBE1399:
 10761              	.LBB1406:
 10762              	.LBB1407:
 10763              	.LBB1408:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10764              		.loc 2 453 0
 10765              		.syntax divided
 10766              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10767 008e EFF31081 		MRS r1, primask
 10768              	@ 0 "" 2
 10769              	.LVL721:
 10770              		.thumb
 10771              		.syntax unified
 10772              	.LBE1408:
 10773              	.LBE1407:
 10774              	.LBB1409:
 10775              	.LBB1410:
 10776              		.loc 2 481 0
 10777 0092 0123     		movs	r3, #1
 10778              		.syntax divided
 10779              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10780 0094 83F31088 		MSR primask, r3
 10781              	@ 0 "" 2
 10782              	.LVL722:
 10783              		.thumb
 10784              		.syntax unified
ARM GAS  /tmp/cceLjgLz.s 			page 297


 10785              	.LBE1410:
 10786              	.LBE1409:
3618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10787              		.loc 1 3618 0
 10788 0098 2268     		ldr	r2, [r4]
 10789 009a 9068     		ldr	r0, [r2, #8]
 10790 009c 3F33     		adds	r3, r3, #63
 10791 009e 0343     		orrs	r3, r0
 10792 00a0 9360     		str	r3, [r2, #8]
 10793              	.LBB1411:
 10794              	.LBB1412:
 10795              		.loc 2 481 0
 10796              		.syntax divided
 10797              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10798 00a2 81F31088 		MSR primask, r1
 10799              	@ 0 "" 2
 10800              		.thumb
 10801              		.syntax unified
 10802              	.LBE1412:
 10803              	.LBE1411:
 10804              	.LBE1406:
3620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** }
 10805              		.loc 1 3620 0
 10806 00a6 0020     		movs	r0, #0
 10807              	.L430:
3621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10808              		.loc 1 3621 0
 10809              		@ sp needed
 10810              	.LVL723:
 10811 00a8 10BD     		pop	{r4, pc}
 10812              	.L433:
 10813 00aa C046     		.align	2
 10814              	.L432:
 10815 00ac 00000000 		.word	UART_DMAReceiveCplt
 10816 00b0 00000000 		.word	UART_DMARxHalfCplt
 10817 00b4 00000000 		.word	UART_DMAError
 10818              		.cfi_endproc
 10819              	.LFE358:
 10821              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 10822              		.align	2
 10823              		.global	HAL_UART_Receive_DMA
 10824              		.code	16
 10825              		.thumb_func
 10827              	HAL_UART_Receive_DMA:
 10828              	.LFB322:
1554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 10829              		.loc 1 1554 0
 10830              		.cfi_startproc
 10831              		@ args = 0, pretend = 0, frame = 0
 10832              		@ frame_needed = 0, uses_anonymous_args = 0
 10833              	.LVL724:
 10834 0000 70B5     		push	{r4, r5, r6, lr}
 10835              	.LCFI61:
 10836              		.cfi_def_cfa_offset 16
 10837              		.cfi_offset 4, -16
 10838              		.cfi_offset 5, -12
 10839              		.cfi_offset 6, -8
ARM GAS  /tmp/cceLjgLz.s 			page 298


 10840              		.cfi_offset 14, -4
1556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   {
 10841              		.loc 1 1556 0
 10842 0002 8C23     		movs	r3, #140
 10843 0004 C358     		ldr	r3, [r0, r3]
 10844 0006 202B     		cmp	r3, #32
 10845 0008 23D1     		bne	.L438
1558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10846              		.loc 1 1558 0
 10847 000a 0029     		cmp	r1, #0
 10848 000c 23D0     		beq	.L439
1558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10849              		.loc 1 1558 0 is_stmt 0 discriminator 1
 10850 000e 002A     		cmp	r2, #0
 10851 0010 23D0     		beq	.L440
1566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10852              		.loc 1 1566 0 is_stmt 1
 10853 0012 8023     		movs	r3, #128
 10854 0014 5B01     		lsls	r3, r3, #5
 10855 0016 8468     		ldr	r4, [r0, #8]
 10856 0018 9C42     		cmp	r4, r3
 10857 001a 04D1     		bne	.L436
1566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     {
 10858              		.loc 1 1566 0 is_stmt 0 discriminator 1
 10859 001c 0369     		ldr	r3, [r0, #16]
 10860 001e 002B     		cmp	r3, #0
 10861 0020 01D1     		bne	.L436
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 10862              		.loc 1 1568 0 is_stmt 1
 10863 0022 CB07     		lsls	r3, r1, #31
 10864 0024 1BD4     		bmi	.L441
 10865              	.L436:
1575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10866              		.loc 1 1575 0
 10867 0026 0023     		movs	r3, #0
 10868 0028 C366     		str	r3, [r0, #108]
1580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       {
 10869              		.loc 1 1580 0
 10870 002a 0368     		ldr	r3, [r0]
 10871 002c 5B68     		ldr	r3, [r3, #4]
 10872 002e 1B02     		lsls	r3, r3, #8
 10873 0030 0CD5     		bpl	.L437
 10874              	.LBB1413:
 10875              	.LBB1414:
 10876              	.LBB1415:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10877              		.loc 2 453 0
 10878              		.syntax divided
 10879              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10880 0032 EFF31085 		MRS r5, primask
 10881              	@ 0 "" 2
 10882              	.LVL725:
 10883              		.thumb
 10884              		.syntax unified
 10885              	.LBE1415:
 10886              	.LBE1414:
 10887              	.LBB1416:
ARM GAS  /tmp/cceLjgLz.s 			page 299


 10888              	.LBB1417:
 10889              		.loc 2 481 0
 10890 0036 0123     		movs	r3, #1
 10891              		.syntax divided
 10892              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10893 0038 83F31088 		MSR primask, r3
 10894              	@ 0 "" 2
 10895              	.LVL726:
 10896              		.thumb
 10897              		.syntax unified
 10898              	.LBE1417:
 10899              	.LBE1416:
1583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 10900              		.loc 1 1583 0
 10901 003c 0468     		ldr	r4, [r0]
 10902 003e 2368     		ldr	r3, [r4]
 10903 0040 8026     		movs	r6, #128
 10904 0042 F604     		lsls	r6, r6, #19
 10905 0044 3343     		orrs	r3, r6
 10906 0046 2360     		str	r3, [r4]
 10907              	.LBB1418:
 10908              	.LBB1419:
 10909              		.loc 2 481 0
 10910              		.syntax divided
 10911              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10912 0048 85F31088 		MSR primask, r5
 10913              	@ 0 "" 2
 10914              		.thumb
 10915              		.syntax unified
 10916              	.L437:
 10917              	.LBE1419:
 10918              	.LBE1418:
 10919              	.LBE1413:
1587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 10920              		.loc 1 1587 0
 10921 004c FFF7FEFF 		bl	UART_Start_Receive_DMA
 10922              	.LVL727:
 10923 0050 06E0     		b	.L435
 10924              	.LVL728:
 10925              	.L438:
1591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****   }
 10926              		.loc 1 1591 0
 10927 0052 0220     		movs	r0, #2
 10928              	.LVL729:
 10929 0054 04E0     		b	.L435
 10930              	.LVL730:
 10931              	.L439:
1560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****     }
 10932              		.loc 1 1560 0
 10933 0056 0120     		movs	r0, #1
 10934              	.LVL731:
 10935 0058 02E0     		b	.L435
 10936              	.LVL732:
 10937              	.L440:
 10938 005a 0120     		movs	r0, #1
 10939              	.LVL733:
 10940 005c 00E0     		b	.L435
ARM GAS  /tmp/cceLjgLz.s 			page 300


 10941              	.LVL734:
 10942              	.L441:
1570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c ****       }
 10943              		.loc 1 1570 0
 10944 005e 0120     		movs	r0, #1
 10945              	.LVL735:
 10946              	.L435:
1593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c **** 
 10947              		.loc 1 1593 0
 10948              		@ sp needed
 10949 0060 70BD     		pop	{r4, r5, r6, pc}
 10950              		.cfi_endproc
 10951              	.LFE322:
 10953              		.global	UARTPrescTable
 10954 0062 C046     		.section	.rodata.UARTPrescTable,"a",%progbits
 10955              		.align	2
 10956              		.set	.LANCHOR0,. + 0
 10959              	UARTPrescTable:
 10960 0000 0100     		.short	1
 10961 0002 0200     		.short	2
 10962 0004 0400     		.short	4
 10963 0006 0600     		.short	6
 10964 0008 0800     		.short	8
 10965 000a 0A00     		.short	10
 10966 000c 0C00     		.short	12
 10967 000e 1000     		.short	16
 10968 0010 2000     		.short	32
 10969 0012 4000     		.short	64
 10970 0014 8000     		.short	128
 10971 0016 0001     		.short	256
 10972              		.text
 10973              	.Letext0:
 10974              		.file 3 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 10975              		.file 4 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 10976              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g070xx.h"
 10977              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 10978              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 10979              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 10980              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 10981              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 10982              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h"
 10983              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 10984              		.file 13 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
ARM GAS  /tmp/cceLjgLz.s 			page 301


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal_uart.c
     /tmp/cceLjgLz.s:20     .text.UART_EndTxTransfer:00000000 $t
     /tmp/cceLjgLz.s:24     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
     /tmp/cceLjgLz.s:136    .text.UART_EndTxTransfer:0000003c $d
     /tmp/cceLjgLz.s:141    .text.UART_EndRxTransfer:00000000 $t
     /tmp/cceLjgLz.s:145    .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
     /tmp/cceLjgLz.s:308    .text.UART_EndRxTransfer:0000005c $d
     /tmp/cceLjgLz.s:314    .text.UART_TxISR_8BIT:00000000 $t
     /tmp/cceLjgLz.s:318    .text.UART_TxISR_8BIT:00000000 UART_TxISR_8BIT
     /tmp/cceLjgLz.s:457    .text.UART_TxISR_16BIT:00000000 $t
     /tmp/cceLjgLz.s:461    .text.UART_TxISR_16BIT:00000000 UART_TxISR_16BIT
     /tmp/cceLjgLz.s:603    .text.UART_TxISR_8BIT_FIFOEN:00000000 $t
     /tmp/cceLjgLz.s:607    .text.UART_TxISR_8BIT_FIFOEN:00000000 UART_TxISR_8BIT_FIFOEN
     /tmp/cceLjgLz.s:766    .text.UART_TxISR_8BIT_FIFOEN:00000074 $d
     /tmp/cceLjgLz.s:771    .text.UART_TxISR_16BIT_FIFOEN:00000000 $t
     /tmp/cceLjgLz.s:775    .text.UART_TxISR_16BIT_FIFOEN:00000000 UART_TxISR_16BIT_FIFOEN
     /tmp/cceLjgLz.s:938    .text.UART_TxISR_16BIT_FIFOEN:00000078 $d
     /tmp/cceLjgLz.s:943    .text.HAL_UART_MspInit:00000000 $t
     /tmp/cceLjgLz.s:948    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/cceLjgLz.s:963    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/cceLjgLz.s:968    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/cceLjgLz.s:983    .text.HAL_UART_DeInit:00000000 $t
     /tmp/cceLjgLz.s:988    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
     /tmp/cceLjgLz.s:1060   .text.HAL_UART_Transmit_IT:00000000 $t
     /tmp/cceLjgLz.s:1065   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
     /tmp/cceLjgLz.s:1294   .text.HAL_UART_Transmit_IT:000000c4 $d
     /tmp/cceLjgLz.s:1302   .text.HAL_UART_Transmit_DMA:00000000 $t
     /tmp/cceLjgLz.s:1307   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
     /tmp/cceLjgLz.s:1481   .text.HAL_UART_Transmit_DMA:000000b0 $d
     /tmp/cceLjgLz.s:3036   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
     /tmp/cceLjgLz.s:3266   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
     /tmp/cceLjgLz.s:3355   .text.UART_DMAError:00000000 UART_DMAError
     /tmp/cceLjgLz.s:1488   .text.HAL_UART_DMAPause:00000000 $t
     /tmp/cceLjgLz.s:1493   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
     /tmp/cceLjgLz.s:1717   .text.HAL_UART_DMAPause:00000084 $d
     /tmp/cceLjgLz.s:1722   .text.HAL_UART_DMAResume:00000000 $t
     /tmp/cceLjgLz.s:1727   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
     /tmp/cceLjgLz.s:1945   .text.HAL_UART_DMAStop:00000000 $t
     /tmp/cceLjgLz.s:1950   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
     /tmp/cceLjgLz.s:2154   .text.HAL_UART_Abort:00000000 $t
     /tmp/cceLjgLz.s:2159   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
     /tmp/cceLjgLz.s:2517   .text.HAL_UART_Abort:0000012c $d
     /tmp/cceLjgLz.s:2523   .text.HAL_UART_AbortTransmit:00000000 $t
     /tmp/cceLjgLz.s:2528   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
     /tmp/cceLjgLz.s:2737   .text.HAL_UART_AbortTransmit:000000a0 $d
     /tmp/cceLjgLz.s:2742   .text.HAL_UART_AbortReceive:00000000 $t
     /tmp/cceLjgLz.s:2747   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
     /tmp/cceLjgLz.s:3006   .text.HAL_UART_AbortReceive:000000c0 $d
     /tmp/cceLjgLz.s:3012   .text.HAL_UART_TxCpltCallback:00000000 $t
     /tmp/cceLjgLz.s:3017   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
     /tmp/cceLjgLz.s:3032   .text.UART_DMATransmitCplt:00000000 $t
     /tmp/cceLjgLz.s:3165   .text.UART_EndTransmit_IT:00000000 $t
     /tmp/cceLjgLz.s:3169   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
     /tmp/cceLjgLz.s:3242   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
     /tmp/cceLjgLz.s:3247   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
     /tmp/cceLjgLz.s:3262   .text.UART_DMATxHalfCplt:00000000 $t
ARM GAS  /tmp/cceLjgLz.s 			page 302


     /tmp/cceLjgLz.s:3291   .text.HAL_UART_RxCpltCallback:00000000 $t
     /tmp/cceLjgLz.s:3296   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
     /tmp/cceLjgLz.s:3311   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
     /tmp/cceLjgLz.s:3316   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
     /tmp/cceLjgLz.s:3331   .text.HAL_UART_ErrorCallback:00000000 $t
     /tmp/cceLjgLz.s:3336   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
     /tmp/cceLjgLz.s:3351   .text.UART_DMAError:00000000 $t
     /tmp/cceLjgLz.s:3435   .text.UART_DMAAbortOnError:00000000 $t
     /tmp/cceLjgLz.s:3439   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
     /tmp/cceLjgLz.s:3471   .text.HAL_UART_AbortCpltCallback:00000000 $t
     /tmp/cceLjgLz.s:3476   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
     /tmp/cceLjgLz.s:3491   .text.HAL_UART_Abort_IT:00000000 $t
     /tmp/cceLjgLz.s:3496   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
     /tmp/cceLjgLz.s:3900   .text.HAL_UART_Abort_IT:00000154 $d
     /tmp/cceLjgLz.s:3985   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
     /tmp/cceLjgLz.s:3912   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
     /tmp/cceLjgLz.s:3908   .text.UART_DMARxAbortCallback:00000000 $t
     /tmp/cceLjgLz.s:3981   .text.UART_DMATxAbortCallback:00000000 $t
     /tmp/cceLjgLz.s:4062   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
     /tmp/cceLjgLz.s:4067   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/cceLjgLz.s:4082   .text.HAL_UART_AbortTransmit_IT:00000000 $t
     /tmp/cceLjgLz.s:4087   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
     /tmp/cceLjgLz.s:4309   .text.HAL_UART_AbortTransmit_IT:000000b0 $d
     /tmp/cceLjgLz.s:4319   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
     /tmp/cceLjgLz.s:4315   .text.UART_DMATxOnlyAbortCallback:00000000 $t
     /tmp/cceLjgLz.s:4365   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
     /tmp/cceLjgLz.s:4370   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/cceLjgLz.s:4385   .text.HAL_UART_AbortReceive_IT:00000000 $t
     /tmp/cceLjgLz.s:4390   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
     /tmp/cceLjgLz.s:4668   .text.HAL_UART_AbortReceive_IT:000000d8 $d
     /tmp/cceLjgLz.s:4679   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
     /tmp/cceLjgLz.s:4675   .text.UART_DMARxOnlyAbortCallback:00000000 $t
     /tmp/cceLjgLz.s:4724   .text.HAL_UARTEx_RxEventCallback:00000000 $t
     /tmp/cceLjgLz.s:4729   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
     /tmp/cceLjgLz.s:4744   .text.HAL_UART_IRQHandler:00000000 $t
     /tmp/cceLjgLz.s:4749   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
     /tmp/cceLjgLz.s:5581   .text.HAL_UART_IRQHandler:000002f8 $d
     /tmp/cceLjgLz.s:5592   .text.UART_RxISR_8BIT:00000000 $t
     /tmp/cceLjgLz.s:5596   .text.UART_RxISR_8BIT:00000000 UART_RxISR_8BIT
     /tmp/cceLjgLz.s:5830   .text.UART_RxISR_8BIT:000000b4 $d
     /tmp/cceLjgLz.s:5835   .text.UART_RxISR_16BIT:00000000 $t
     /tmp/cceLjgLz.s:5839   .text.UART_RxISR_16BIT:00000000 UART_RxISR_16BIT
     /tmp/cceLjgLz.s:6073   .text.UART_RxISR_16BIT:000000b4 $d
     /tmp/cceLjgLz.s:6078   .text.UART_RxISR_8BIT_FIFOEN:00000000 $t
     /tmp/cceLjgLz.s:6082   .text.UART_RxISR_8BIT_FIFOEN:00000000 UART_RxISR_8BIT_FIFOEN
     /tmp/cceLjgLz.s:6542   .text.UART_RxISR_8BIT_FIFOEN:00000190 $d
     /tmp/cceLjgLz.s:6550   .text.UART_RxISR_16BIT_FIFOEN:00000000 $t
     /tmp/cceLjgLz.s:6554   .text.UART_RxISR_16BIT_FIFOEN:00000000 UART_RxISR_16BIT_FIFOEN
     /tmp/cceLjgLz.s:7018   .text.UART_RxISR_16BIT_FIFOEN:00000190 $d
     /tmp/cceLjgLz.s:7026   .text.UART_DMARxHalfCplt:00000000 $t
     /tmp/cceLjgLz.s:7030   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
     /tmp/cceLjgLz.s:7072   .text.UART_DMAReceiveCplt:00000000 $t
     /tmp/cceLjgLz.s:7076   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
     /tmp/cceLjgLz.s:7313   .text.UART_DMAReceiveCplt:00000098 $d
     /tmp/cceLjgLz.s:7318   .text.HAL_UART_ReceiverTimeout_Config:00000000 $t
     /tmp/cceLjgLz.s:7323   .text.HAL_UART_ReceiverTimeout_Config:00000000 HAL_UART_ReceiverTimeout_Config
     /tmp/cceLjgLz.s:7345   .text.HAL_UART_EnableReceiverTimeout:00000000 $t
ARM GAS  /tmp/cceLjgLz.s 			page 303


     /tmp/cceLjgLz.s:7350   .text.HAL_UART_EnableReceiverTimeout:00000000 HAL_UART_EnableReceiverTimeout
     /tmp/cceLjgLz.s:7417   .text.HAL_UART_DisableReceiverTimeout:00000000 $t
     /tmp/cceLjgLz.s:7422   .text.HAL_UART_DisableReceiverTimeout:00000000 HAL_UART_DisableReceiverTimeout
     /tmp/cceLjgLz.s:7487   .text.HAL_UART_DisableReceiverTimeout:0000003c $d
     /tmp/cceLjgLz.s:7492   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
     /tmp/cceLjgLz.s:7497   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cceLjgLz.s:7518   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
     /tmp/cceLjgLz.s:7523   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cceLjgLz.s:7661   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
     /tmp/cceLjgLz.s:7666   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cceLjgLz.s:7804   .text.HAL_LIN_SendBreak:00000000 $t
     /tmp/cceLjgLz.s:7809   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
     /tmp/cceLjgLz.s:7864   .text.HAL_UART_GetState:00000000 $t
     /tmp/cceLjgLz.s:7869   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
     /tmp/cceLjgLz.s:7897   .text.HAL_UART_GetError:00000000 $t
     /tmp/cceLjgLz.s:7902   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
     /tmp/cceLjgLz.s:7922   .text.UART_SetConfig:00000000 $t
     /tmp/cceLjgLz.s:7927   .text.UART_SetConfig:00000000 UART_SetConfig
     /tmp/cceLjgLz.s:8312   .text.UART_SetConfig:000001d0 $d
     /tmp/cceLjgLz.s:8327   .text.UART_AdvFeatureConfig:00000000 $t
     /tmp/cceLjgLz.s:8332   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
     /tmp/cceLjgLz.s:8464   .text.UART_AdvFeatureConfig:000000bc $d
     /tmp/cceLjgLz.s:8477   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/cceLjgLz.s:8482   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
     /tmp/cceLjgLz.s:8773   .text.UART_WaitOnFlagUntilTimeout:000000dc $d
     /tmp/cceLjgLz.s:8778   .text.HAL_UART_Transmit:00000000 $t
     /tmp/cceLjgLz.s:8783   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
     /tmp/cceLjgLz.s:8981   .text.HAL_UART_Receive:00000000 $t
     /tmp/cceLjgLz.s:8986   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
     /tmp/cceLjgLz.s:9264   .text.HAL_UART_Receive:00000148 $d
     /tmp/cceLjgLz.s:9269   .text.UART_CheckIdleState:00000000 $t
     /tmp/cceLjgLz.s:9274   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
     /tmp/cceLjgLz.s:9372   .text.UART_CheckIdleState:00000070 $d
     /tmp/cceLjgLz.s:9377   .text.HAL_UART_Init:00000000 $t
     /tmp/cceLjgLz.s:9382   .text.HAL_UART_Init:00000000 HAL_UART_Init
     /tmp/cceLjgLz.s:9471   .text.HAL_UART_Init:00000068 $d
     /tmp/cceLjgLz.s:9476   .text.HAL_HalfDuplex_Init:00000000 $t
     /tmp/cceLjgLz.s:9481   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
     /tmp/cceLjgLz.s:9576   .text.HAL_HalfDuplex_Init:00000074 $d
     /tmp/cceLjgLz.s:9581   .text.HAL_LIN_Init:00000000 $t
     /tmp/cceLjgLz.s:9586   .text.HAL_LIN_Init:00000000 HAL_LIN_Init
     /tmp/cceLjgLz.s:9716   .text.HAL_LIN_Init:0000009c $d
     /tmp/cceLjgLz.s:9721   .text.HAL_MultiProcessor_Init:00000000 $t
     /tmp/cceLjgLz.s:9726   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
     /tmp/cceLjgLz.s:9843   .text.HAL_MultiProcessor_Init:00000090 $d
     /tmp/cceLjgLz.s:9849   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
     /tmp/cceLjgLz.s:9854   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/cceLjgLz.s:9946   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
     /tmp/cceLjgLz.s:9951   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/cceLjgLz.s:10041  .text.HAL_MultiProcessor_DisableMuteMode:0000003c $d
     /tmp/cceLjgLz.s:10046  .text.UART_Start_Receive_IT:00000000 $t
     /tmp/cceLjgLz.s:10051  .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
     /tmp/cceLjgLz.s:10450  .text.UART_Start_Receive_IT:00000150 $d
     /tmp/cceLjgLz.s:10459  .text.HAL_UART_Receive_IT:00000000 $t
     /tmp/cceLjgLz.s:10464  .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
     /tmp/cceLjgLz.s:10591  .text.UART_Start_Receive_DMA:00000000 $t
     /tmp/cceLjgLz.s:10596  .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
ARM GAS  /tmp/cceLjgLz.s 			page 304


     /tmp/cceLjgLz.s:10815  .text.UART_Start_Receive_DMA:000000ac $d
     /tmp/cceLjgLz.s:10822  .text.HAL_UART_Receive_DMA:00000000 $t
     /tmp/cceLjgLz.s:10827  .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
     /tmp/cceLjgLz.s:10959  .rodata.UARTPrescTable:00000000 UARTPrescTable
     /tmp/cceLjgLz.s:10955  .rodata.UARTPrescTable:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_UARTEx_TxFifoEmptyCallback
HAL_UARTEx_RxFifoFullCallback
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
