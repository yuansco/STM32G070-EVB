ARM GAS  /tmp/ccrMl3yW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32g0xx_hal_dma_ex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_DMAEx_ConfigMuxSync,"ax",%progbits
  20              		.align	2
  21              		.global	HAL_DMAEx_ConfigMuxSync
  22              		.code	16
  23              		.thumb_func
  25              	HAL_DMAEx_ConfigMuxSync:
  26              	.LFB310:
  27              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @file    stm32g0xx_hal_dma_ex.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief   DMA Extension HAL module driver
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *         This file provides firmware functions to manage the following
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *         functionalities of the DMA Extension peripheral:
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *           + Extended features functions
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   @verbatim
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ==============================================================================
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                         ##### How to use this driver #####
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ==============================================================================
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   [..]
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   The DMA Extension HAL driver can be used as follows:
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****    (+) Configure the DMAMUX Synchronization Block using HAL_DMAEx_ConfigMuxSync function.
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****    (+) Configure the DMAMUX Request Generator Block using HAL_DMAEx_ConfigMuxRequestGenerator funct
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        Functions HAL_DMAEx_EnableMuxRequestGenerator and HAL_DMAEx_DisableMuxRequestGenerator can t
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        to respectively enable/disable the request generator.
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****    (+) To handle the DMAMUX Interrupts, the function  HAL_DMAEx_MUX_IRQHandler should be called fro
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        the DMAMUX IRQ handler i.e DMAMUX1_OVR_IRQHandler.
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        As only one interrupt line is available for all DMAMUX channels and request generators , HAL
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        called with, as parameter, the appropriate DMA handle as many as used DMAs in the user proje
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       (exception done if a given DMA is not using the DMAMUX SYNC block neither a request generator
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   @endverbatim
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ******************************************************************************
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @attention
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * Copyright (c) 2018 STMicroelectronics.
ARM GAS  /tmp/ccrMl3yW.s 			page 2


  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * All rights reserved.
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * in the root directory of this software component.
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ******************************************************************************
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Includes ------------------------------------------------------------------*/
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** #include "stm32g0xx_hal.h"
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /** @addtogroup STM32G0xx_HAL_Driver
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @{
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /** @defgroup DMAEx DMAEx
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief DMA Extended HAL module driver
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @{
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** #ifdef HAL_DMA_MODULE_ENABLED
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private typedef -----------------------------------------------------------*/
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private define ------------------------------------------------------------*/
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private macro -------------------------------------------------------------*/
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private Constants ---------------------------------------------------------*/
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private function prototypes -----------------------------------------------*/
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Exported functions --------------------------------------------------------*/
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /** @defgroup DMAEx_Exported_Functions DMAEx Exported Functions
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @{
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /** @defgroup DMAEx_Exported_Functions_Group1 DMAEx Extended features functions
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *  @brief   Extended features functions
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** @verbatim
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****  ===============================================================================
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                 #####  Extended features functions  #####
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****  ===============================================================================
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     [..]  This section provides functions allowing to:
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     (+) Configure the DMAMUX Synchronization Block using HAL_DMAEx_ConfigMuxSync function.
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     (+) Configure the DMAMUX Request Generator Block using HAL_DMAEx_ConfigMuxRequestGenerator func
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        Functions HAL_DMAEx_EnableMuxRequestGenerator and HAL_DMAEx_DisableMuxRequestGenerator can t
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        to respectively enable/disable the request generator.
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     (+) Handle DMAMUX interrupts using HAL_DMAEx_MUX_IRQHandler : should be called from
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****         the DMAMUX IRQ handler
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** @endverbatim
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @{
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
ARM GAS  /tmp/ccrMl3yW.s 			page 3


  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief Configure the DMAMUX synchronization parameters for a given DMA channel (instance).
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *             the configuration information for the specified DMA channel.
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param pSyncConfig Pointer to HAL_DMA_MuxSyncConfigTypeDef contains the DMAMUX synchronization 
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval HAL status
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** HAL_StatusTypeDef HAL_DMAEx_ConfigMuxSync(DMA_HandleTypeDef *hdma, HAL_DMA_MuxSyncConfigTypeDef *pS
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
  28              		.loc 1 96 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check the parameters */
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_SIGNAL_ID(pSyncConfig->SyncSignalID));
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_POLARITY(pSyncConfig-> SyncPolarity));
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_STATE(pSyncConfig->SyncEnable));
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_EVENT(pSyncConfig->EventEnable));
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_REQUEST_NUMBER(pSyncConfig->RequestNumber));
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /*Check if the DMA state is ready */
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if (hdma->State == HAL_DMA_STATE_READY)
  41              		.loc 1 108 0
  42 0002 2523     		movs	r3, #37
  43 0004 C35C     		ldrb	r3, [r0, r3]
  44 0006 012B     		cmp	r3, #1
  45 0008 1DD1     		bne	.L2
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process Locked */
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     __HAL_LOCK(hdma);
  46              		.loc 1 111 0
  47 000a 2333     		adds	r3, r3, #35
  48 000c C35C     		ldrb	r3, [r0, r3]
  49 000e 012B     		cmp	r3, #1
  50 0010 1DD0     		beq	.L4
  51              		.loc 1 111 0 is_stmt 0 discriminator 2
  52 0012 2425     		movs	r5, #36
  53 0014 0123     		movs	r3, #1
  54 0016 4355     		strb	r3, [r0, r5]
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Set the new synchronization parameters (and keep the request ID filled during the Init)*/
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     MODIFY_REG(hdma->DMAmuxChannel->CCR, \
  55              		.loc 1 114 0 is_stmt 1 discriminator 2
  56 0018 466C     		ldr	r6, [r0, #68]
  57 001a 3368     		ldr	r3, [r6]
  58 001c 3F27     		movs	r7, #63
ARM GAS  /tmp/ccrMl3yW.s 			page 4


  59 001e 1F40     		ands	r7, r3
  60 0020 CB68     		ldr	r3, [r1, #12]
  61 0022 5A1E     		subs	r2, r3, #1
  62 0024 D204     		lsls	r2, r2, #19
  63 0026 0B68     		ldr	r3, [r1]
  64 0028 1A43     		orrs	r2, r3
  65 002a 4B68     		ldr	r3, [r1, #4]
  66 002c 1343     		orrs	r3, r2
  67 002e 0C7A     		ldrb	r4, [r1, #8]
  68 0030 2404     		lsls	r4, r4, #16
  69 0032 2343     		orrs	r3, r4
  70 0034 4A7A     		ldrb	r2, [r1, #9]
  71 0036 5202     		lsls	r2, r2, #9
  72 0038 1343     		orrs	r3, r2
  73 003a 3B43     		orrs	r3, r7
  74 003c 3360     		str	r3, [r6]
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                (~DMAMUX_CxCR_DMAREQ_ID), \
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                (pSyncConfig->SyncSignalID | ((pSyncConfig->RequestNumber - 1U) << DMAMUX_CxCR_NBREQ
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                 pSyncConfig->SyncPolarity | ((uint32_t)pSyncConfig->SyncEnable << DMAMUX_CxCR_SE_Po
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                 ((uint32_t)pSyncConfig->EventEnable << DMAMUX_CxCR_EGE_Pos)));
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process UnLocked */
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     __HAL_UNLOCK(hdma);
  75              		.loc 1 121 0 discriminator 2
  76 003e 0023     		movs	r3, #0
  77 0040 4355     		strb	r3, [r0, r5]
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_OK;
  78              		.loc 1 123 0 discriminator 2
  79 0042 0020     		movs	r0, #0
  80              	.LVL1:
  81 0044 04E0     		b	.L3
  82              	.LVL2:
  83              	.L2:
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Set the error code to busy */
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
  84              		.loc 1 128 0
  85 0046 8023     		movs	r3, #128
  86 0048 C363     		str	r3, [r0, #60]
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Return error status */
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_ERROR;
  87              		.loc 1 131 0
  88 004a 0120     		movs	r0, #1
  89              	.LVL3:
  90 004c 00E0     		b	.L3
  91              	.LVL4:
  92              	.L4:
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  93              		.loc 1 111 0
  94 004e 0220     		movs	r0, #2
  95              	.LVL5:
  96              	.L3:
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
ARM GAS  /tmp/ccrMl3yW.s 			page 5


 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
  97              		.loc 1 133 0
  98              		@ sp needed
  99 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 100              		.cfi_endproc
 101              	.LFE310:
 103 0052 C046     		.section	.text.HAL_DMAEx_ConfigMuxRequestGenerator,"ax",%progbits
 104              		.align	2
 105              		.global	HAL_DMAEx_ConfigMuxRequestGenerator
 106              		.code	16
 107              		.thumb_func
 109              	HAL_DMAEx_ConfigMuxRequestGenerator:
 110              	.LFB311:
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief Configure the DMAMUX request generator block used by the given DMA channel (instance).
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *             the configuration information for the specified DMA channel.
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param pRequestGeneratorConfig Pointer to HAL_DMA_MuxRequestGeneratorConfigTypeDef
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *                                contains the request generator parameters.
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval HAL status
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** HAL_StatusTypeDef HAL_DMAEx_ConfigMuxRequestGenerator(DMA_HandleTypeDef *hdma,
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                                       HAL_DMA_MuxRequestGeneratorConfigTypeDef *pRe
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
 111              		.loc 1 146 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              	.LVL6:
 116 0000 30B5     		push	{r4, r5, lr}
 117              	.LCFI1:
 118              		.cfi_def_cfa_offset 12
 119              		.cfi_offset 4, -12
 120              		.cfi_offset 5, -8
 121              		.cfi_offset 14, -4
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   HAL_StatusTypeDef status;
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   HAL_DMA_StateTypeDef temp_state = hdma->State;
 122              		.loc 1 148 0
 123 0002 2523     		movs	r3, #37
 124 0004 C35C     		ldrb	r3, [r0, r3]
 125 0006 DBB2     		uxtb	r3, r3
 126              	.LVL7:
 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check the parameters */
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_REQUEST_GEN_SIGNAL_ID(pRequestGeneratorConfig->SignalID));
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_REQUEST_GEN_POLARITY(pRequestGeneratorConfig->Polarity));
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_REQUEST_GEN_REQUEST_NUMBER(pRequestGeneratorConfig->RequestNumber));
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* check if the DMA state is ready
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****      and DMA is using a DMAMUX request generator block
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if (hdma->DMAmuxRequestGen == 0U)
ARM GAS  /tmp/ccrMl3yW.s 			page 6


 127              		.loc 1 161 0
 128 0008 026D     		ldr	r2, [r0, #80]
 129 000a 002A     		cmp	r2, #0
 130 000c 03D1     		bne	.L6
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Set the error code to busy */
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 131              		.loc 1 164 0
 132 000e 4023     		movs	r3, #64
 133              	.LVL8:
 134 0010 C363     		str	r3, [r0, #60]
 135              	.LVL9:
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* error status */
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     status = HAL_ERROR;
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else if (((hdma->DMAmuxRequestGen->RGCR & DMAMUX_RGxCR_GE) == 0U) && (temp_state == HAL_DMA_STATE
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* RequestGenerator must be disable prior to the configuration i.e GE bit is 0 */
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process Locked */
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     __HAL_LOCK(hdma);
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Set the request generator new parameters*/
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxRequestGen->RGCR = pRequestGeneratorConfig->SignalID | \
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    ((pRequestGeneratorConfig->RequestNumber - 1U) << DMAMUX_RGxCR_G
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    pRequestGeneratorConfig->Polarity;
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process UnLocked */
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     __HAL_UNLOCK(hdma);
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_OK;
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Set the error code to busy */
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* error status */
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     status = HAL_ERROR;
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   return status;
 136              		.loc 1 194 0
 137 0012 0120     		movs	r0, #1
 138              	.LVL10:
 139 0014 1CE0     		b	.L7
 140              	.LVL11:
 141              	.L6:
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 142              		.loc 1 169 0
 143 0016 1468     		ldr	r4, [r2]
 144 0018 E403     		lsls	r4, r4, #15
 145 001a 14D4     		bmi	.L8
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 146              		.loc 1 169 0 is_stmt 0 discriminator 1
 147 001c 012B     		cmp	r3, #1
 148 001e 12D1     		bne	.L8
ARM GAS  /tmp/ccrMl3yW.s 			page 7


 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 149              		.loc 1 174 0 is_stmt 1
 150 0020 2333     		adds	r3, r3, #35
 151              	.LVL12:
 152 0022 C35C     		ldrb	r3, [r0, r3]
 153              	.LVL13:
 154 0024 012B     		cmp	r3, #1
 155 0026 12D0     		beq	.L9
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 156              		.loc 1 174 0 is_stmt 0 discriminator 2
 157 0028 2424     		movs	r4, #36
 158 002a 0123     		movs	r3, #1
 159 002c 0355     		strb	r3, [r0, r4]
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    pRequestGeneratorConfig->Polarity;
 160              		.loc 1 178 0 is_stmt 1 discriminator 2
 161 002e 8B68     		ldr	r3, [r1, #8]
 162 0030 013B     		subs	r3, r3, #1
 163 0032 DB04     		lsls	r3, r3, #19
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    ((pRequestGeneratorConfig->RequestNumber - 1U) << DMAMUX_RGxCR_G
 164              		.loc 1 177 0 discriminator 2
 165 0034 0D68     		ldr	r5, [r1]
 166 0036 2B43     		orrs	r3, r5
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process UnLocked */
 167              		.loc 1 179 0 discriminator 2
 168 0038 4968     		ldr	r1, [r1, #4]
 169              	.LVL14:
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    pRequestGeneratorConfig->Polarity;
 170              		.loc 1 178 0 discriminator 2
 171 003a 0B43     		orrs	r3, r1
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    ((pRequestGeneratorConfig->RequestNumber - 1U) << DMAMUX_RGxCR_G
 172              		.loc 1 177 0 discriminator 2
 173 003c 1360     		str	r3, [r2]
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 174              		.loc 1 181 0 discriminator 2
 175 003e 0023     		movs	r3, #0
 176 0040 0355     		strb	r3, [r0, r4]
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 177              		.loc 1 183 0 discriminator 2
 178 0042 0020     		movs	r0, #0
 179              	.LVL15:
 180 0044 04E0     		b	.L7
 181              	.LVL16:
 182              	.L8:
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 183              		.loc 1 188 0
 184 0046 8023     		movs	r3, #128
 185              	.LVL17:
 186 0048 C363     		str	r3, [r0, #60]
 187              	.LVL18:
 188              		.loc 1 194 0
 189 004a 0120     		movs	r0, #1
 190              	.LVL19:
 191 004c 00E0     		b	.L7
 192              	.LVL20:
 193              	.L9:
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 194              		.loc 1 174 0
ARM GAS  /tmp/ccrMl3yW.s 			page 8


 195 004e 0220     		movs	r0, #2
 196              	.LVL21:
 197              	.L7:
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
 198              		.loc 1 195 0
 199              		@ sp needed
 200 0050 30BD     		pop	{r4, r5, pc}
 201              		.cfi_endproc
 202              	.LFE311:
 204 0052 C046     		.section	.text.HAL_DMAEx_EnableMuxRequestGenerator,"ax",%progbits
 205              		.align	2
 206              		.global	HAL_DMAEx_EnableMuxRequestGenerator
 207              		.code	16
 208              		.thumb_func
 210              	HAL_DMAEx_EnableMuxRequestGenerator:
 211              	.LFB312:
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief Enable the DMAMUX request generator block used by the given DMA channel (instance).
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *             the configuration information for the specified DMA channel.
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval HAL status
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** HAL_StatusTypeDef HAL_DMAEx_EnableMuxRequestGenerator(DMA_HandleTypeDef *hdma)
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
 212              		.loc 1 204 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL22:
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check the parameters */
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* check if the DMA state is ready
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****      and DMA is using a DMAMUX request generator block
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if ((hdma->State != HAL_DMA_STATE_RESET) && (hdma->DMAmuxRequestGen != 0))
 218              		.loc 1 211 0
 219 0000 2523     		movs	r3, #37
 220 0002 C35C     		ldrb	r3, [r0, r3]
 221 0004 002B     		cmp	r3, #0
 222 0006 09D0     		beq	.L12
 223              		.loc 1 211 0 is_stmt 0 discriminator 1
 224 0008 036D     		ldr	r3, [r0, #80]
 225 000a 002B     		cmp	r3, #0
 226 000c 08D0     		beq	.L13
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Enable the request generator*/
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxRequestGen->RGCR |= DMAMUX_RGxCR_GE;
 227              		.loc 1 215 0 is_stmt 1
 228 000e 1A68     		ldr	r2, [r3]
 229 0010 8021     		movs	r1, #128
 230 0012 4902     		lsls	r1, r1, #9
 231 0014 0A43     		orrs	r2, r1
 232 0016 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccrMl3yW.s 			page 9


 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_OK;
 233              		.loc 1 217 0
 234 0018 0020     		movs	r0, #0
 235              	.LVL23:
 236 001a 02E0     		b	.L11
 237              	.LVL24:
 238              	.L12:
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_ERROR;
 239              		.loc 1 221 0
 240 001c 0120     		movs	r0, #1
 241              	.LVL25:
 242 001e 00E0     		b	.L11
 243              	.LVL26:
 244              	.L13:
 245 0020 0120     		movs	r0, #1
 246              	.LVL27:
 247              	.L11:
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
 248              		.loc 1 223 0
 249              		@ sp needed
 250 0022 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE312:
 254              		.section	.text.HAL_DMAEx_DisableMuxRequestGenerator,"ax",%progbits
 255              		.align	2
 256              		.global	HAL_DMAEx_DisableMuxRequestGenerator
 257              		.code	16
 258              		.thumb_func
 260              	HAL_DMAEx_DisableMuxRequestGenerator:
 261              	.LFB313:
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief Disable the DMAMUX request generator block used by the given DMA channel (instance).
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *             the configuration information for the specified DMA channel.
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval HAL status
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** HAL_StatusTypeDef HAL_DMAEx_DisableMuxRequestGenerator(DMA_HandleTypeDef *hdma)
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
 262              		.loc 1 232 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267              	.LVL28:
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check the parameters */
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* check if the DMA state is ready
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****      and DMA is using a DMAMUX request generator block
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if ((hdma->State != HAL_DMA_STATE_RESET) && (hdma->DMAmuxRequestGen != 0))
ARM GAS  /tmp/ccrMl3yW.s 			page 10


 268              		.loc 1 239 0
 269 0000 2523     		movs	r3, #37
 270 0002 C35C     		ldrb	r3, [r0, r3]
 271 0004 002B     		cmp	r3, #0
 272 0006 08D0     		beq	.L16
 273              		.loc 1 239 0 is_stmt 0 discriminator 1
 274 0008 036D     		ldr	r3, [r0, #80]
 275 000a 002B     		cmp	r3, #0
 276 000c 07D0     		beq	.L17
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Disable the request generator*/
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_GE;
 277              		.loc 1 243 0 is_stmt 1
 278 000e 1968     		ldr	r1, [r3]
 279 0010 044A     		ldr	r2, .L18
 280 0012 0A40     		ands	r2, r1
 281 0014 1A60     		str	r2, [r3]
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_OK;
 282              		.loc 1 245 0
 283 0016 0020     		movs	r0, #0
 284              	.LVL29:
 285 0018 02E0     		b	.L15
 286              	.LVL30:
 287              	.L16:
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_ERROR;
 288              		.loc 1 249 0
 289 001a 0120     		movs	r0, #1
 290              	.LVL31:
 291 001c 00E0     		b	.L15
 292              	.LVL32:
 293              	.L17:
 294 001e 0120     		movs	r0, #1
 295              	.LVL33:
 296              	.L15:
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
 297              		.loc 1 251 0
 298              		@ sp needed
 299 0020 7047     		bx	lr
 300              	.L19:
 301 0022 C046     		.align	2
 302              	.L18:
 303 0024 FFFFFEFF 		.word	-65537
 304              		.cfi_endproc
 305              	.LFE313:
 307              		.section	.text.HAL_DMAEx_MUX_IRQHandler,"ax",%progbits
 308              		.align	2
 309              		.global	HAL_DMAEx_MUX_IRQHandler
 310              		.code	16
 311              		.thumb_func
 313              	HAL_DMAEx_MUX_IRQHandler:
 314              	.LFB314:
ARM GAS  /tmp/ccrMl3yW.s 			page 11


 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief Handles DMAMUX interrupt request.
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *             the configuration information for the specified DMA channel.
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval None
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** void HAL_DMAEx_MUX_IRQHandler(DMA_HandleTypeDef *hdma)
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
 315              		.loc 1 260 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              	.LVL34:
 320 0000 10B5     		push	{r4, lr}
 321              	.LCFI2:
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 4, -8
 324              		.cfi_offset 14, -4
 325 0002 0400     		movs	r4, r0
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check for DMAMUX Synchronization overrun */
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if ((hdma->DMAmuxChannelStatus->CSR & hdma->DMAmuxChannelStatusMask) != 0U)
 326              		.loc 1 262 0
 327 0004 836C     		ldr	r3, [r0, #72]
 328 0006 1B68     		ldr	r3, [r3]
 329 0008 C26C     		ldr	r2, [r0, #76]
 330 000a 1A42     		tst	r2, r3
 331 000c 10D0     		beq	.L21
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Disable the synchro overrun interrupt */
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 332              		.loc 1 265 0
 333 000e 426C     		ldr	r2, [r0, #68]
 334 0010 1168     		ldr	r1, [r2]
 335 0012 144B     		ldr	r3, .L23
 336 0014 0B40     		ands	r3, r1
 337 0016 1360     		str	r3, [r2]
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Clear the DMAMUX synchro overrun flag */
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 338              		.loc 1 268 0
 339 0018 836C     		ldr	r3, [r0, #72]
 340 001a C26C     		ldr	r2, [r0, #76]
 341 001c 5A60     		str	r2, [r3, #4]
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Update error code */
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->ErrorCode |= HAL_DMA_ERROR_SYNC;
 342              		.loc 1 271 0
 343 001e C36B     		ldr	r3, [r0, #60]
 344 0020 8022     		movs	r2, #128
 345 0022 9200     		lsls	r2, r2, #2
 346 0024 1343     		orrs	r3, r2
 347 0026 C363     		str	r3, [r0, #60]
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     if (hdma->XferErrorCallback != NULL)
 348              		.loc 1 273 0
 349 0028 436B     		ldr	r3, [r0, #52]
ARM GAS  /tmp/ccrMl3yW.s 			page 12


 350 002a 002B     		cmp	r3, #0
 351 002c 00D0     		beq	.L21
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     {
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       /* Transfer error callback */
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       hdma->XferErrorCallback(hdma);
 352              		.loc 1 276 0
 353 002e 9847     		blx	r3
 354              	.LVL35:
 355              	.L21:
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     }
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if (hdma->DMAmuxRequestGen != 0)
 356              		.loc 1 280 0
 357 0030 236D     		ldr	r3, [r4, #80]
 358 0032 002B     		cmp	r3, #0
 359 0034 15D0     		beq	.L20
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* if using a DMAMUX request generator block Check for DMAMUX request generator overrun */
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     if ((hdma->DMAmuxRequestGenStatus->RGSR & hdma->DMAmuxRequestGenStatusMask) != 0U)
 360              		.loc 1 283 0
 361 0036 626D     		ldr	r2, [r4, #84]
 362 0038 1268     		ldr	r2, [r2]
 363 003a A16D     		ldr	r1, [r4, #88]
 364 003c 1142     		tst	r1, r2
 365 003e 10D0     		beq	.L20
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     {
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       /* Disable the request gen overrun interrupt */
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 366              		.loc 1 286 0
 367 0040 1968     		ldr	r1, [r3]
 368 0042 084A     		ldr	r2, .L23
 369 0044 0A40     		ands	r2, r1
 370 0046 1A60     		str	r2, [r3]
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       /* Clear the DMAMUX request generator overrun flag */
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 371              		.loc 1 289 0
 372 0048 636D     		ldr	r3, [r4, #84]
 373 004a A26D     		ldr	r2, [r4, #88]
 374 004c 5A60     		str	r2, [r3, #4]
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       /* Update error code */
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_REQGEN;
 375              		.loc 1 292 0
 376 004e E36B     		ldr	r3, [r4, #60]
 377 0050 8022     		movs	r2, #128
 378 0052 D200     		lsls	r2, r2, #3
 379 0054 1343     		orrs	r3, r2
 380 0056 E363     		str	r3, [r4, #60]
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       if (hdma->XferErrorCallback != NULL)
 381              		.loc 1 294 0
 382 0058 636B     		ldr	r3, [r4, #52]
 383 005a 002B     		cmp	r3, #0
 384 005c 01D0     		beq	.L20
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       {
ARM GAS  /tmp/ccrMl3yW.s 			page 13


 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****         /* Transfer error callback */
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****         hdma->XferErrorCallback(hdma);
 385              		.loc 1 297 0
 386 005e 2000     		movs	r0, r4
 387 0060 9847     		blx	r3
 388              	.LVL36:
 389              	.L20:
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       }
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     }
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
 390              		.loc 1 301 0
 391              		@ sp needed
 392              	.LVL37:
 393 0062 10BD     		pop	{r4, pc}
 394              	.L24:
 395              		.align	2
 396              	.L23:
 397 0064 FFFEFFFF 		.word	-257
 398              		.cfi_endproc
 399              	.LFE314:
 401              		.text
 402              	.Letext0:
 403              		.file 2 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 404              		.file 3 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 405              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g070xx.h"
 406              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 407              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 408              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 409              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma_ex.h"
 410              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 411              		.file 10 "Drivers/CMSIS/Include/cmsis_gcc.h"
ARM GAS  /tmp/ccrMl3yW.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal_dma_ex.c
     /tmp/ccrMl3yW.s:20     .text.HAL_DMAEx_ConfigMuxSync:00000000 $t
     /tmp/ccrMl3yW.s:25     .text.HAL_DMAEx_ConfigMuxSync:00000000 HAL_DMAEx_ConfigMuxSync
     /tmp/ccrMl3yW.s:104    .text.HAL_DMAEx_ConfigMuxRequestGenerator:00000000 $t
     /tmp/ccrMl3yW.s:109    .text.HAL_DMAEx_ConfigMuxRequestGenerator:00000000 HAL_DMAEx_ConfigMuxRequestGenerator
     /tmp/ccrMl3yW.s:205    .text.HAL_DMAEx_EnableMuxRequestGenerator:00000000 $t
     /tmp/ccrMl3yW.s:210    .text.HAL_DMAEx_EnableMuxRequestGenerator:00000000 HAL_DMAEx_EnableMuxRequestGenerator
     /tmp/ccrMl3yW.s:255    .text.HAL_DMAEx_DisableMuxRequestGenerator:00000000 $t
     /tmp/ccrMl3yW.s:260    .text.HAL_DMAEx_DisableMuxRequestGenerator:00000000 HAL_DMAEx_DisableMuxRequestGenerator
     /tmp/ccrMl3yW.s:303    .text.HAL_DMAEx_DisableMuxRequestGenerator:00000024 $d
     /tmp/ccrMl3yW.s:308    .text.HAL_DMAEx_MUX_IRQHandler:00000000 $t
     /tmp/ccrMl3yW.s:313    .text.HAL_DMAEx_MUX_IRQHandler:00000000 HAL_DMAEx_MUX_IRQHandler
     /tmp/ccrMl3yW.s:397    .text.HAL_DMAEx_MUX_IRQHandler:00000064 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
