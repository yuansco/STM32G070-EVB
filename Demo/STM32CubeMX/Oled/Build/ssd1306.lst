ARM GAS  /tmp/cczv7fP8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ssd1306.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_f2d
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_ddiv
  22              		.global	__aeabi_d2f
  23              		.section	.text.ssd1306_DegToRad,"ax",%progbits
  24              		.align	2
  25              		.code	16
  26              		.thumb_func
  28              	ssd1306_DegToRad:
  29              	.LFB325:
  30              		.file 1 "Core/Driver/oled/ssd1306.c"
   1:Core/Driver/oled/ssd1306.c **** #include "ssd1306.h"
   2:Core/Driver/oled/ssd1306.c **** #include <math.h>
   3:Core/Driver/oled/ssd1306.c **** #include <stdlib.h>
   4:Core/Driver/oled/ssd1306.c **** #include <string.h>  // For memcpy
   5:Core/Driver/oled/ssd1306.c **** 
   6:Core/Driver/oled/ssd1306.c **** #ifdef SSD1306_DEBUG
   7:Core/Driver/oled/ssd1306.c **** #define CPRINTF(format, args...) PRINTF("SSD1306: " format, ##args)
   8:Core/Driver/oled/ssd1306.c **** #else
   9:Core/Driver/oled/ssd1306.c **** #define CPRINTF(format, args...) 
  10:Core/Driver/oled/ssd1306.c **** #endif
  11:Core/Driver/oled/ssd1306.c **** 
  12:Core/Driver/oled/ssd1306.c **** 
  13:Core/Driver/oled/ssd1306.c **** #if defined(SSD1306_USE_I2C)
  14:Core/Driver/oled/ssd1306.c **** 
  15:Core/Driver/oled/ssd1306.c **** void ssd1306_Reset(void) {
  16:Core/Driver/oled/ssd1306.c ****     /* for I2C - do nothing */
  17:Core/Driver/oled/ssd1306.c **** }
  18:Core/Driver/oled/ssd1306.c **** 
  19:Core/Driver/oled/ssd1306.c **** // Send a byte to the command register
  20:Core/Driver/oled/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
  21:Core/Driver/oled/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
  22:Core/Driver/oled/ssd1306.c **** }
  23:Core/Driver/oled/ssd1306.c **** 
  24:Core/Driver/oled/ssd1306.c **** // Send data
  25:Core/Driver/oled/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
  26:Core/Driver/oled/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELA
  27:Core/Driver/oled/ssd1306.c **** }
  28:Core/Driver/oled/ssd1306.c **** 
ARM GAS  /tmp/cczv7fP8.s 			page 2


  29:Core/Driver/oled/ssd1306.c **** #elif defined(SSD1306_USE_SPI)
  30:Core/Driver/oled/ssd1306.c **** 
  31:Core/Driver/oled/ssd1306.c **** void ssd1306_Reset(void) {
  32:Core/Driver/oled/ssd1306.c ****     // CS = High (not selected)
  33:Core/Driver/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET);
  34:Core/Driver/oled/ssd1306.c **** 
  35:Core/Driver/oled/ssd1306.c ****     // Reset the OLED
  36:Core/Driver/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_Reset_Port, SSD1306_Reset_Pin, GPIO_PIN_RESET);
  37:Core/Driver/oled/ssd1306.c ****     HAL_Delay(10);
  38:Core/Driver/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_Reset_Port, SSD1306_Reset_Pin, GPIO_PIN_SET);
  39:Core/Driver/oled/ssd1306.c ****     HAL_Delay(10);
  40:Core/Driver/oled/ssd1306.c **** }
  41:Core/Driver/oled/ssd1306.c **** 
  42:Core/Driver/oled/ssd1306.c **** // Send a byte to the command register
  43:Core/Driver/oled/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
  44:Core/Driver/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
  45:Core/Driver/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_RESET); // command
  46:Core/Driver/oled/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, (uint8_t *) &byte, 1, HAL_MAX_DELAY);
  47:Core/Driver/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
  48:Core/Driver/oled/ssd1306.c **** }
  49:Core/Driver/oled/ssd1306.c **** 
  50:Core/Driver/oled/ssd1306.c **** // Send data
  51:Core/Driver/oled/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
  52:Core/Driver/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
  53:Core/Driver/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_SET); // data
  54:Core/Driver/oled/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, buffer, buff_size, HAL_MAX_DELAY);
  55:Core/Driver/oled/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
  56:Core/Driver/oled/ssd1306.c **** }
  57:Core/Driver/oled/ssd1306.c **** 
  58:Core/Driver/oled/ssd1306.c **** #else
  59:Core/Driver/oled/ssd1306.c **** #error "You should define SSD1306_USE_SPI or SSD1306_USE_I2C macro"
  60:Core/Driver/oled/ssd1306.c **** #endif
  61:Core/Driver/oled/ssd1306.c **** 
  62:Core/Driver/oled/ssd1306.c **** 
  63:Core/Driver/oled/ssd1306.c **** // Screenbuffer
  64:Core/Driver/oled/ssd1306.c **** static uint8_t SSD1306_Buffer[SSD1306_BUFFER_SIZE];
  65:Core/Driver/oled/ssd1306.c **** 
  66:Core/Driver/oled/ssd1306.c **** // Screen object
  67:Core/Driver/oled/ssd1306.c **** static SSD1306_t SSD1306;
  68:Core/Driver/oled/ssd1306.c **** 
  69:Core/Driver/oled/ssd1306.c **** /* Fills the Screenbuffer with values from a given buffer of a fixed length */
  70:Core/Driver/oled/ssd1306.c **** SSD1306_Error_t ssd1306_FillBuffer(uint8_t* buf, uint32_t len) {
  71:Core/Driver/oled/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
  72:Core/Driver/oled/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
  73:Core/Driver/oled/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
  74:Core/Driver/oled/ssd1306.c ****         ret = SSD1306_OK;
  75:Core/Driver/oled/ssd1306.c ****     }
  76:Core/Driver/oled/ssd1306.c ****     return ret;
  77:Core/Driver/oled/ssd1306.c **** }
  78:Core/Driver/oled/ssd1306.c **** 
  79:Core/Driver/oled/ssd1306.c **** int is_ssd1306_ready(void)
  80:Core/Driver/oled/ssd1306.c **** {
  81:Core/Driver/oled/ssd1306.c **** 	return !(HAL_I2C_IsDeviceReady(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 3, 10));
  82:Core/Driver/oled/ssd1306.c **** }
  83:Core/Driver/oled/ssd1306.c **** 
  84:Core/Driver/oled/ssd1306.c **** // Initialize the oled screen
  85:Core/Driver/oled/ssd1306.c **** int ssd1306_Init(void) {
ARM GAS  /tmp/cczv7fP8.s 			page 3


  86:Core/Driver/oled/ssd1306.c ****     // Reset OLED
  87:Core/Driver/oled/ssd1306.c ****     ssd1306_Reset();
  88:Core/Driver/oled/ssd1306.c **** 
  89:Core/Driver/oled/ssd1306.c ****     // Wait for the screen to boot
  90:Core/Driver/oled/ssd1306.c ****     HAL_Delay(100);
  91:Core/Driver/oled/ssd1306.c **** 
  92:Core/Driver/oled/ssd1306.c **** 	CPRINTF("init\r\n");
  93:Core/Driver/oled/ssd1306.c **** 
  94:Core/Driver/oled/ssd1306.c **** 	if (!is_ssd1306_ready()) {
  95:Core/Driver/oled/ssd1306.c **** 		CPRINTF("Can not found ssd1306!\r\n");
  96:Core/Driver/oled/ssd1306.c **** 		return 1;
  97:Core/Driver/oled/ssd1306.c **** 	}
  98:Core/Driver/oled/ssd1306.c **** 
  99:Core/Driver/oled/ssd1306.c ****     // Init OLED
 100:Core/Driver/oled/ssd1306.c ****     ssd1306_SetDisplayOn(0); //display off
 101:Core/Driver/oled/ssd1306.c **** 
 102:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode
 103:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
 104:Core/Driver/oled/ssd1306.c ****                                 // 10b,Page Addressing Mode (RESET); 11b,Invalid
 105:Core/Driver/oled/ssd1306.c **** 
 106:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 107:Core/Driver/oled/ssd1306.c **** 
 108:Core/Driver/oled/ssd1306.c **** #ifdef SSD1306_MIRROR_VERT
 109:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xC0); // Mirror vertically
 110:Core/Driver/oled/ssd1306.c **** #else
 111:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 112:Core/Driver/oled/ssd1306.c **** #endif
 113:Core/Driver/oled/ssd1306.c **** 
 114:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x00); //---set low column address
 115:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x10); //---set high column address
 116:Core/Driver/oled/ssd1306.c **** 
 117:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x40); //--set start line address - CHECK
 118:Core/Driver/oled/ssd1306.c **** 
 119:Core/Driver/oled/ssd1306.c ****     ssd1306_SetContrast(0xFF);
 120:Core/Driver/oled/ssd1306.c **** 
 121:Core/Driver/oled/ssd1306.c **** #ifdef SSD1306_MIRROR_HORIZ
 122:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xA0); // Mirror horizontally
 123:Core/Driver/oled/ssd1306.c **** #else
 124:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 125:Core/Driver/oled/ssd1306.c **** #endif
 126:Core/Driver/oled/ssd1306.c **** 
 127:Core/Driver/oled/ssd1306.c **** #ifdef SSD1306_INVERSE_COLOR
 128:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xA7); //--set inverse color
 129:Core/Driver/oled/ssd1306.c **** #else
 130:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xA6); //--set normal color
 131:Core/Driver/oled/ssd1306.c **** #endif
 132:Core/Driver/oled/ssd1306.c **** 
 133:Core/Driver/oled/ssd1306.c **** // Set multiplex ratio.
 134:Core/Driver/oled/ssd1306.c **** #if (SSD1306_HEIGHT == 128)
 135:Core/Driver/oled/ssd1306.c ****     // Found in the Luma Python lib for SH1106.
 136:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xFF);
 137:Core/Driver/oled/ssd1306.c **** #else
 138:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 139:Core/Driver/oled/ssd1306.c **** #endif
 140:Core/Driver/oled/ssd1306.c **** 
 141:Core/Driver/oled/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 142:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x1F); //
ARM GAS  /tmp/cczv7fP8.s 			page 4


 143:Core/Driver/oled/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 144:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x3F); //
 145:Core/Driver/oled/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 146:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x3F); // Seems to work for 128px high displays too.
 147:Core/Driver/oled/ssd1306.c **** #else
 148:Core/Driver/oled/ssd1306.c **** #error "Only 32, 64, or 128 lines of height are supported!"
 149:Core/Driver/oled/ssd1306.c **** #endif
 150:Core/Driver/oled/ssd1306.c **** 
 151:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 152:Core/Driver/oled/ssd1306.c **** 
 153:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 154:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x00); //-not offset
 155:Core/Driver/oled/ssd1306.c **** 
 156:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 157:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xF0); //--set divide ratio
 158:Core/Driver/oled/ssd1306.c **** 
 159:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xD9); //--set pre-charge period
 160:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x22); //
 161:Core/Driver/oled/ssd1306.c **** 
 162:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 163:Core/Driver/oled/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 164:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x02);
 165:Core/Driver/oled/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 166:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 167:Core/Driver/oled/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 168:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 169:Core/Driver/oled/ssd1306.c **** #else
 170:Core/Driver/oled/ssd1306.c **** #error "Only 32, 64, or 128 lines of height are supported!"
 171:Core/Driver/oled/ssd1306.c **** #endif
 172:Core/Driver/oled/ssd1306.c **** 
 173:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xDB); //--set vcomh
 174:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 175:Core/Driver/oled/ssd1306.c **** 
 176:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 177:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x14); //
 178:Core/Driver/oled/ssd1306.c ****     ssd1306_SetDisplayOn(1); //--turn on SSD1306 panel
 179:Core/Driver/oled/ssd1306.c **** 
 180:Core/Driver/oled/ssd1306.c ****     // Clear screen
 181:Core/Driver/oled/ssd1306.c ****     ssd1306_Fill(Black);
 182:Core/Driver/oled/ssd1306.c ****     
 183:Core/Driver/oled/ssd1306.c ****     // Flush buffer to screen
 184:Core/Driver/oled/ssd1306.c ****     ssd1306_UpdateScreen();
 185:Core/Driver/oled/ssd1306.c ****     
 186:Core/Driver/oled/ssd1306.c ****     // Set default values for screen object
 187:Core/Driver/oled/ssd1306.c ****     SSD1306.CurrentX = 0;
 188:Core/Driver/oled/ssd1306.c ****     SSD1306.CurrentY = 0;
 189:Core/Driver/oled/ssd1306.c ****     
 190:Core/Driver/oled/ssd1306.c ****     SSD1306.Initialized = 1;
 191:Core/Driver/oled/ssd1306.c **** 
 192:Core/Driver/oled/ssd1306.c ****     return 0;
 193:Core/Driver/oled/ssd1306.c **** }
 194:Core/Driver/oled/ssd1306.c **** 
 195:Core/Driver/oled/ssd1306.c **** // Fill the whole screen with the given color
 196:Core/Driver/oled/ssd1306.c **** void ssd1306_Fill(SSD1306_COLOR color) {
 197:Core/Driver/oled/ssd1306.c ****     /* Set memory */
 198:Core/Driver/oled/ssd1306.c ****     uint32_t i;
 199:Core/Driver/oled/ssd1306.c **** 
ARM GAS  /tmp/cczv7fP8.s 			page 5


 200:Core/Driver/oled/ssd1306.c ****     for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 201:Core/Driver/oled/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 202:Core/Driver/oled/ssd1306.c ****     }
 203:Core/Driver/oled/ssd1306.c **** }
 204:Core/Driver/oled/ssd1306.c **** 
 205:Core/Driver/oled/ssd1306.c **** // Write the screenbuffer with changed to the screen
 206:Core/Driver/oled/ssd1306.c **** void ssd1306_UpdateScreen(void) {
 207:Core/Driver/oled/ssd1306.c ****     // Write data to each page of RAM. Number of pages
 208:Core/Driver/oled/ssd1306.c ****     // depends on the screen height:
 209:Core/Driver/oled/ssd1306.c ****     //
 210:Core/Driver/oled/ssd1306.c ****     //  * 32px   ==  4 pages
 211:Core/Driver/oled/ssd1306.c ****     //  * 64px   ==  8 pages
 212:Core/Driver/oled/ssd1306.c ****     //  * 128px  ==  16 pages
 213:Core/Driver/oled/ssd1306.c ****     for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 214:Core/Driver/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 215:Core/Driver/oled/ssd1306.c ****         ssd1306_WriteCommand(0x00 + SSD1306_X_OFFSET_LOWER);
 216:Core/Driver/oled/ssd1306.c ****         ssd1306_WriteCommand(0x10 + SSD1306_X_OFFSET_UPPER);
 217:Core/Driver/oled/ssd1306.c ****         ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
 218:Core/Driver/oled/ssd1306.c ****     }
 219:Core/Driver/oled/ssd1306.c **** }
 220:Core/Driver/oled/ssd1306.c **** 
 221:Core/Driver/oled/ssd1306.c **** //    Draw one pixel in the screenbuffer
 222:Core/Driver/oled/ssd1306.c **** //    X => X Coordinate
 223:Core/Driver/oled/ssd1306.c **** //    Y => Y Coordinate
 224:Core/Driver/oled/ssd1306.c **** //    color => Pixel color
 225:Core/Driver/oled/ssd1306.c **** void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color) {
 226:Core/Driver/oled/ssd1306.c ****     if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 227:Core/Driver/oled/ssd1306.c ****         // Don't write outside the buffer
 228:Core/Driver/oled/ssd1306.c ****         return;
 229:Core/Driver/oled/ssd1306.c ****     }
 230:Core/Driver/oled/ssd1306.c ****    
 231:Core/Driver/oled/ssd1306.c ****     // Draw in the right color
 232:Core/Driver/oled/ssd1306.c ****     if(color == White) {
 233:Core/Driver/oled/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 234:Core/Driver/oled/ssd1306.c ****     } else { 
 235:Core/Driver/oled/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 236:Core/Driver/oled/ssd1306.c ****     }
 237:Core/Driver/oled/ssd1306.c **** }
 238:Core/Driver/oled/ssd1306.c **** 
 239:Core/Driver/oled/ssd1306.c **** // Draw 1 char to the screen buffer
 240:Core/Driver/oled/ssd1306.c **** // ch       => char om weg te schrijven
 241:Core/Driver/oled/ssd1306.c **** // Font     => Font waarmee we gaan schrijven
 242:Core/Driver/oled/ssd1306.c **** // color    => Black or White
 243:Core/Driver/oled/ssd1306.c **** char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 244:Core/Driver/oled/ssd1306.c ****     uint32_t i, b, j;
 245:Core/Driver/oled/ssd1306.c ****     
 246:Core/Driver/oled/ssd1306.c ****     // Check if character is valid
 247:Core/Driver/oled/ssd1306.c ****     if (ch < 32 || ch > 126)
 248:Core/Driver/oled/ssd1306.c ****         return 0;
 249:Core/Driver/oled/ssd1306.c ****     
 250:Core/Driver/oled/ssd1306.c ****     // Check remaining space on current line
 251:Core/Driver/oled/ssd1306.c ****     if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 252:Core/Driver/oled/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 253:Core/Driver/oled/ssd1306.c ****     {
 254:Core/Driver/oled/ssd1306.c ****         // Not enough space on current line
 255:Core/Driver/oled/ssd1306.c ****         return 0;
 256:Core/Driver/oled/ssd1306.c ****     }
ARM GAS  /tmp/cczv7fP8.s 			page 6


 257:Core/Driver/oled/ssd1306.c ****     
 258:Core/Driver/oled/ssd1306.c ****     // Use the font to write
 259:Core/Driver/oled/ssd1306.c ****     for(i = 0; i < Font.FontHeight; i++) {
 260:Core/Driver/oled/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 261:Core/Driver/oled/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 262:Core/Driver/oled/ssd1306.c ****             if((b << j) & 0x8000)  {
 263:Core/Driver/oled/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 264:Core/Driver/oled/ssd1306.c ****             } else {
 265:Core/Driver/oled/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!col
 266:Core/Driver/oled/ssd1306.c ****             }
 267:Core/Driver/oled/ssd1306.c ****         }
 268:Core/Driver/oled/ssd1306.c ****     }
 269:Core/Driver/oled/ssd1306.c ****     
 270:Core/Driver/oled/ssd1306.c ****     // The current space is now taken
 271:Core/Driver/oled/ssd1306.c ****     SSD1306.CurrentX += Font.FontWidth;
 272:Core/Driver/oled/ssd1306.c ****     
 273:Core/Driver/oled/ssd1306.c ****     // Return written char for validation
 274:Core/Driver/oled/ssd1306.c ****     return ch;
 275:Core/Driver/oled/ssd1306.c **** }
 276:Core/Driver/oled/ssd1306.c **** 
 277:Core/Driver/oled/ssd1306.c **** // Write full string to screenbuffer
 278:Core/Driver/oled/ssd1306.c **** char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 279:Core/Driver/oled/ssd1306.c ****     // Write until null-byte
 280:Core/Driver/oled/ssd1306.c ****     while (*str) {
 281:Core/Driver/oled/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 282:Core/Driver/oled/ssd1306.c ****             // Char could not be written
 283:Core/Driver/oled/ssd1306.c ****             return *str;
 284:Core/Driver/oled/ssd1306.c ****         }
 285:Core/Driver/oled/ssd1306.c ****         
 286:Core/Driver/oled/ssd1306.c ****         // Next char
 287:Core/Driver/oled/ssd1306.c ****         str++;
 288:Core/Driver/oled/ssd1306.c ****     }
 289:Core/Driver/oled/ssd1306.c ****     
 290:Core/Driver/oled/ssd1306.c ****     // Everything ok
 291:Core/Driver/oled/ssd1306.c ****     return *str;
 292:Core/Driver/oled/ssd1306.c **** }
 293:Core/Driver/oled/ssd1306.c **** 
 294:Core/Driver/oled/ssd1306.c **** // Position the cursor
 295:Core/Driver/oled/ssd1306.c **** void ssd1306_SetCursor(uint8_t x, uint8_t y) {
 296:Core/Driver/oled/ssd1306.c ****     SSD1306.CurrentX = x;
 297:Core/Driver/oled/ssd1306.c ****     SSD1306.CurrentY = y;
 298:Core/Driver/oled/ssd1306.c **** }
 299:Core/Driver/oled/ssd1306.c **** 
 300:Core/Driver/oled/ssd1306.c **** // Draw line by Bresenhem's algorithm
 301:Core/Driver/oled/ssd1306.c **** void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 302:Core/Driver/oled/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 303:Core/Driver/oled/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 304:Core/Driver/oled/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 305:Core/Driver/oled/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 306:Core/Driver/oled/ssd1306.c ****   int32_t error = deltaX - deltaY;
 307:Core/Driver/oled/ssd1306.c ****   int32_t error2;
 308:Core/Driver/oled/ssd1306.c ****     
 309:Core/Driver/oled/ssd1306.c ****   ssd1306_DrawPixel(x2, y2, color);
 310:Core/Driver/oled/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 311:Core/Driver/oled/ssd1306.c ****     {
 312:Core/Driver/oled/ssd1306.c ****     ssd1306_DrawPixel(x1, y1, color);
 313:Core/Driver/oled/ssd1306.c ****     error2 = error * 2;
ARM GAS  /tmp/cczv7fP8.s 			page 7


 314:Core/Driver/oled/ssd1306.c ****     if(error2 > -deltaY)
 315:Core/Driver/oled/ssd1306.c ****     {
 316:Core/Driver/oled/ssd1306.c ****       error -= deltaY;
 317:Core/Driver/oled/ssd1306.c ****       x1 += signX;
 318:Core/Driver/oled/ssd1306.c ****     }
 319:Core/Driver/oled/ssd1306.c ****     else
 320:Core/Driver/oled/ssd1306.c ****     {
 321:Core/Driver/oled/ssd1306.c ****     /*nothing to do*/
 322:Core/Driver/oled/ssd1306.c ****     }
 323:Core/Driver/oled/ssd1306.c ****         
 324:Core/Driver/oled/ssd1306.c ****     if(error2 < deltaX)
 325:Core/Driver/oled/ssd1306.c ****     {
 326:Core/Driver/oled/ssd1306.c ****       error += deltaX;
 327:Core/Driver/oled/ssd1306.c ****       y1 += signY;
 328:Core/Driver/oled/ssd1306.c ****     }
 329:Core/Driver/oled/ssd1306.c ****     else
 330:Core/Driver/oled/ssd1306.c ****     {
 331:Core/Driver/oled/ssd1306.c ****     /*nothing to do*/
 332:Core/Driver/oled/ssd1306.c ****     }
 333:Core/Driver/oled/ssd1306.c ****   }
 334:Core/Driver/oled/ssd1306.c ****   return;
 335:Core/Driver/oled/ssd1306.c **** }
 336:Core/Driver/oled/ssd1306.c **** //Draw polyline
 337:Core/Driver/oled/ssd1306.c **** void ssd1306_Polyline(const SSD1306_VERTEX *par_vertex, uint16_t par_size, SSD1306_COLOR color) {
 338:Core/Driver/oled/ssd1306.c ****   uint16_t i;
 339:Core/Driver/oled/ssd1306.c ****   if(par_vertex != 0){
 340:Core/Driver/oled/ssd1306.c ****     for(i = 1; i < par_size; i++){
 341:Core/Driver/oled/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 342:Core/Driver/oled/ssd1306.c ****     }
 343:Core/Driver/oled/ssd1306.c ****   }
 344:Core/Driver/oled/ssd1306.c ****   else
 345:Core/Driver/oled/ssd1306.c ****   {
 346:Core/Driver/oled/ssd1306.c ****     /*nothing to do*/
 347:Core/Driver/oled/ssd1306.c ****   }
 348:Core/Driver/oled/ssd1306.c ****   return;
 349:Core/Driver/oled/ssd1306.c **** }
 350:Core/Driver/oled/ssd1306.c **** /*Convert Degrees to Radians*/
 351:Core/Driver/oled/ssd1306.c **** static float ssd1306_DegToRad(float par_deg) {
  31              		.loc 1 351 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              	.LVL0:
  36 0000 10B5     		push	{r4, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 4, -8
  40              		.cfi_offset 14, -4
 352:Core/Driver/oled/ssd1306.c ****     return par_deg * 3.14 / 180.0;
  41              		.loc 1 352 0
  42 0002 FFF7FEFF 		bl	__aeabi_f2d
  43              	.LVL1:
  44 0006 054A     		ldr	r2, .L2
  45 0008 054B     		ldr	r3, .L2+4
  46 000a FFF7FEFF 		bl	__aeabi_dmul
  47              	.LVL2:
  48 000e 0022     		movs	r2, #0
ARM GAS  /tmp/cczv7fP8.s 			page 8


  49 0010 044B     		ldr	r3, .L2+8
  50 0012 FFF7FEFF 		bl	__aeabi_ddiv
  51              	.LVL3:
  52 0016 FFF7FEFF 		bl	__aeabi_d2f
  53              	.LVL4:
 353:Core/Driver/oled/ssd1306.c **** }
  54              		.loc 1 353 0
  55              		@ sp needed
  56 001a 10BD     		pop	{r4, pc}
  57              	.L3:
  58              		.align	2
  59              	.L2:
  60 001c 1F85EB51 		.word	1374389535
  61 0020 B81E0940 		.word	1074339512
  62 0024 00806640 		.word	1080459264
  63              		.cfi_endproc
  64              	.LFE325:
  66              		.section	.text.ssd1306_NormalizeTo0_360,"ax",%progbits
  67              		.align	2
  68              		.code	16
  69              		.thumb_func
  71              	ssd1306_NormalizeTo0_360:
  72              	.LFB326:
 354:Core/Driver/oled/ssd1306.c **** /*Normalize degree to [0;360]*/
 355:Core/Driver/oled/ssd1306.c **** static uint16_t ssd1306_NormalizeTo0_360(uint16_t par_deg) {
  73              		.loc 1 355 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.LVL5:
 356:Core/Driver/oled/ssd1306.c ****   uint16_t loc_angle;
 357:Core/Driver/oled/ssd1306.c ****   if(par_deg <= 360)
  79              		.loc 1 357 0
  80 0000 B423     		movs	r3, #180
  81 0002 5B00     		lsls	r3, r3, #1
  82 0004 9842     		cmp	r0, r3
  83 0006 02D9     		bls	.L5
  84              	.LVL6:
 358:Core/Driver/oled/ssd1306.c ****   {
 359:Core/Driver/oled/ssd1306.c ****     loc_angle = par_deg;
 360:Core/Driver/oled/ssd1306.c ****   }
 361:Core/Driver/oled/ssd1306.c ****   else
 362:Core/Driver/oled/ssd1306.c ****   {
 363:Core/Driver/oled/ssd1306.c ****     loc_angle = par_deg % 360;
 364:Core/Driver/oled/ssd1306.c ****     loc_angle = ((par_deg != 0)?par_deg:360);
  85              		.loc 1 364 0
  86 0008 0028     		cmp	r0, #0
  87 000a 00D1     		bne	.L5
  88 000c 1800     		movs	r0, r3
  89              	.LVL7:
  90              	.L5:
 365:Core/Driver/oled/ssd1306.c ****   }
 366:Core/Driver/oled/ssd1306.c ****   return loc_angle;
 367:Core/Driver/oled/ssd1306.c **** }
  91              		.loc 1 367 0
  92              		@ sp needed
ARM GAS  /tmp/cczv7fP8.s 			page 9


  93 000e 7047     		bx	lr
  94              		.cfi_endproc
  95              	.LFE326:
  97              		.section	.text.ssd1306_Reset,"ax",%progbits
  98              		.align	2
  99              		.global	ssd1306_Reset
 100              		.code	16
 101              		.thumb_func
 103              	ssd1306_Reset:
 104              	.LFB311:
  15:Core/Driver/oled/ssd1306.c ****     /* for I2C - do nothing */
 105              		.loc 1 15 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
  17:Core/Driver/oled/ssd1306.c **** 
 110              		.loc 1 17 0
 111              		@ sp needed
 112 0000 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE311:
 116 0002 C046     		.section	.text.ssd1306_WriteCommand,"ax",%progbits
 117              		.align	2
 118              		.global	ssd1306_WriteCommand
 119              		.code	16
 120              		.thumb_func
 122              	ssd1306_WriteCommand:
 123              	.LFB312:
  20:Core/Driver/oled/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 124              		.loc 1 20 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              	.LVL8:
 129 0000 00B5     		push	{lr}
 130              	.LCFI1:
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 14, -4
 133 0002 87B0     		sub	sp, sp, #28
 134              	.LCFI2:
 135              		.cfi_def_cfa_offset 32
 136 0004 1723     		movs	r3, #23
 137 0006 6B44     		add	r3, r3, sp
 138 0008 1870     		strb	r0, [r3]
  21:Core/Driver/oled/ssd1306.c **** }
 139              		.loc 1 21 0
 140 000a 0122     		movs	r2, #1
 141 000c 5242     		rsbs	r2, r2, #0
 142 000e 0292     		str	r2, [sp, #8]
 143 0010 0232     		adds	r2, r2, #2
 144 0012 0192     		str	r2, [sp, #4]
 145 0014 0093     		str	r3, [sp]
 146 0016 0123     		movs	r3, #1
 147 0018 0022     		movs	r2, #0
 148 001a 7821     		movs	r1, #120
 149 001c 0248     		ldr	r0, .L8
ARM GAS  /tmp/cczv7fP8.s 			page 10


 150              	.LVL9:
 151 001e FFF7FEFF 		bl	HAL_I2C_Mem_Write
 152              	.LVL10:
  22:Core/Driver/oled/ssd1306.c **** 
 153              		.loc 1 22 0
 154 0022 07B0     		add	sp, sp, #28
 155              		@ sp needed
 156 0024 00BD     		pop	{pc}
 157              	.L9:
 158 0026 C046     		.align	2
 159              	.L8:
 160 0028 00000000 		.word	hi2c1
 161              		.cfi_endproc
 162              	.LFE312:
 164              		.section	.text.ssd1306_WriteData,"ax",%progbits
 165              		.align	2
 166              		.global	ssd1306_WriteData
 167              		.code	16
 168              		.thumb_func
 170              	ssd1306_WriteData:
 171              	.LFB313:
  25:Core/Driver/oled/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELA
 172              		.loc 1 25 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              	.LVL11:
 177 0000 00B5     		push	{lr}
 178              	.LCFI3:
 179              		.cfi_def_cfa_offset 4
 180              		.cfi_offset 14, -4
 181 0002 85B0     		sub	sp, sp, #20
 182              	.LCFI4:
 183              		.cfi_def_cfa_offset 24
  26:Core/Driver/oled/ssd1306.c **** }
 184              		.loc 1 26 0
 185 0004 0123     		movs	r3, #1
 186 0006 5B42     		rsbs	r3, r3, #0
 187 0008 0293     		str	r3, [sp, #8]
 188 000a 89B2     		uxth	r1, r1
 189              	.LVL12:
 190 000c 0191     		str	r1, [sp, #4]
 191 000e 0090     		str	r0, [sp]
 192 0010 0233     		adds	r3, r3, #2
 193 0012 4022     		movs	r2, #64
 194 0014 7821     		movs	r1, #120
 195 0016 0248     		ldr	r0, .L11
 196              	.LVL13:
 197 0018 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 198              	.LVL14:
  27:Core/Driver/oled/ssd1306.c **** 
 199              		.loc 1 27 0
 200 001c 05B0     		add	sp, sp, #20
 201              		@ sp needed
 202 001e 00BD     		pop	{pc}
 203              	.L12:
 204              		.align	2
ARM GAS  /tmp/cczv7fP8.s 			page 11


 205              	.L11:
 206 0020 00000000 		.word	hi2c1
 207              		.cfi_endproc
 208              	.LFE313:
 210              		.section	.text.ssd1306_FillBuffer,"ax",%progbits
 211              		.align	2
 212              		.global	ssd1306_FillBuffer
 213              		.code	16
 214              		.thumb_func
 216              	ssd1306_FillBuffer:
 217              	.LFB314:
  70:Core/Driver/oled/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
 218              		.loc 1 70 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              	.LVL15:
 223 0000 10B5     		push	{r4, lr}
 224              	.LCFI5:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
 228              	.LVL16:
  72:Core/Driver/oled/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
 229              		.loc 1 72 0
 230 0002 8023     		movs	r3, #128
 231 0004 DB00     		lsls	r3, r3, #3
 232 0006 9942     		cmp	r1, r3
 233 0008 06D8     		bhi	.L15
  73:Core/Driver/oled/ssd1306.c ****         ret = SSD1306_OK;
 234              		.loc 1 73 0
 235 000a 0A00     		movs	r2, r1
 236 000c 0100     		movs	r1, r0
 237              	.LVL17:
 238 000e 0348     		ldr	r0, .L16
 239              	.LVL18:
 240 0010 FFF7FEFF 		bl	memcpy
 241              	.LVL19:
  74:Core/Driver/oled/ssd1306.c ****     }
 242              		.loc 1 74 0
 243 0014 0020     		movs	r0, #0
 244 0016 00E0     		b	.L14
 245              	.LVL20:
 246              	.L15:
  71:Core/Driver/oled/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
 247              		.loc 1 71 0
 248 0018 0120     		movs	r0, #1
 249              	.LVL21:
 250              	.L14:
  77:Core/Driver/oled/ssd1306.c **** 
 251              		.loc 1 77 0
 252              		@ sp needed
 253 001a 10BD     		pop	{r4, pc}
 254              	.L17:
 255              		.align	2
 256              	.L16:
 257 001c 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cczv7fP8.s 			page 12


 258              		.cfi_endproc
 259              	.LFE314:
 261              		.section	.text.is_ssd1306_ready,"ax",%progbits
 262              		.align	2
 263              		.global	is_ssd1306_ready
 264              		.code	16
 265              		.thumb_func
 267              	is_ssd1306_ready:
 268              	.LFB315:
  80:Core/Driver/oled/ssd1306.c **** 	return !(HAL_I2C_IsDeviceReady(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 3, 10));
 269              		.loc 1 80 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273 0000 10B5     		push	{r4, lr}
 274              	.LCFI6:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 4, -8
 277              		.cfi_offset 14, -4
  81:Core/Driver/oled/ssd1306.c **** }
 278              		.loc 1 81 0
 279 0002 0A23     		movs	r3, #10
 280 0004 0322     		movs	r2, #3
 281 0006 7821     		movs	r1, #120
 282 0008 0248     		ldr	r0, .L19
 283 000a FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 284              	.LVL22:
 285 000e 4342     		rsbs	r3, r0, #0
 286 0010 5841     		adcs	r0, r0, r3
  82:Core/Driver/oled/ssd1306.c **** 
 287              		.loc 1 82 0
 288              		@ sp needed
 289 0012 10BD     		pop	{r4, pc}
 290              	.L20:
 291              		.align	2
 292              	.L19:
 293 0014 00000000 		.word	hi2c1
 294              		.cfi_endproc
 295              	.LFE315:
 297              		.section	.text.ssd1306_Fill,"ax",%progbits
 298              		.align	2
 299              		.global	ssd1306_Fill
 300              		.code	16
 301              		.thumb_func
 303              	ssd1306_Fill:
 304              	.LFB317:
 196:Core/Driver/oled/ssd1306.c ****     /* Set memory */
 305              		.loc 1 196 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310              	.LVL23:
 200:Core/Driver/oled/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 311              		.loc 1 200 0
 312 0000 0023     		movs	r3, #0
 313 0002 07E0     		b	.L22
ARM GAS  /tmp/cczv7fP8.s 			page 13


 314              	.LVL24:
 315              	.L24:
 201:Core/Driver/oled/ssd1306.c ****     }
 316              		.loc 1 201 0
 317 0004 0028     		cmp	r0, #0
 318 0006 01D1     		bne	.L25
 319 0008 0021     		movs	r1, #0
 320 000a 00E0     		b	.L23
 321              	.L25:
 322 000c FF21     		movs	r1, #255
 323              	.L23:
 201:Core/Driver/oled/ssd1306.c ****     }
 324              		.loc 1 201 0 is_stmt 0 discriminator 4
 325 000e 034A     		ldr	r2, .L26
 326 0010 D154     		strb	r1, [r2, r3]
 200:Core/Driver/oled/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 327              		.loc 1 200 0 is_stmt 1 discriminator 4
 328 0012 0133     		adds	r3, r3, #1
 329              	.LVL25:
 330              	.L22:
 200:Core/Driver/oled/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 331              		.loc 1 200 0 is_stmt 0 discriminator 2
 332 0014 024A     		ldr	r2, .L26+4
 333 0016 9342     		cmp	r3, r2
 334 0018 F4D9     		bls	.L24
 203:Core/Driver/oled/ssd1306.c **** 
 335              		.loc 1 203 0 is_stmt 1
 336              		@ sp needed
 337 001a 7047     		bx	lr
 338              	.L27:
 339              		.align	2
 340              	.L26:
 341 001c 00000000 		.word	.LANCHOR0
 342 0020 FF030000 		.word	1023
 343              		.cfi_endproc
 344              	.LFE317:
 346              		.section	.text.ssd1306_UpdateScreen,"ax",%progbits
 347              		.align	2
 348              		.global	ssd1306_UpdateScreen
 349              		.code	16
 350              		.thumb_func
 352              	ssd1306_UpdateScreen:
 353              	.LFB318:
 206:Core/Driver/oled/ssd1306.c ****     // Write data to each page of RAM. Number of pages
 354              		.loc 1 206 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 10B5     		push	{r4, lr}
 359              	.LCFI7:
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 4, -8
 362              		.cfi_offset 14, -4
 363              	.LVL26:
 364              	.LBB2:
 213:Core/Driver/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 365              		.loc 1 213 0
ARM GAS  /tmp/cczv7fP8.s 			page 14


 366 0002 0024     		movs	r4, #0
 367 0004 12E0     		b	.L29
 368              	.LVL27:
 369              	.L30:
 214:Core/Driver/oled/ssd1306.c ****         ssd1306_WriteCommand(0x00 + SSD1306_X_OFFSET_LOWER);
 370              		.loc 1 214 0 discriminator 3
 371 0006 2000     		movs	r0, r4
 372 0008 5038     		subs	r0, r0, #80
 373 000a C0B2     		uxtb	r0, r0
 374 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 375              	.LVL28:
 215:Core/Driver/oled/ssd1306.c ****         ssd1306_WriteCommand(0x10 + SSD1306_X_OFFSET_UPPER);
 376              		.loc 1 215 0 discriminator 3
 377 0010 0020     		movs	r0, #0
 378 0012 FFF7FEFF 		bl	ssd1306_WriteCommand
 379              	.LVL29:
 216:Core/Driver/oled/ssd1306.c ****         ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
 380              		.loc 1 216 0 discriminator 3
 381 0016 1020     		movs	r0, #16
 382 0018 FFF7FEFF 		bl	ssd1306_WriteCommand
 383              	.LVL30:
 217:Core/Driver/oled/ssd1306.c ****     }
 384              		.loc 1 217 0 discriminator 3
 385 001c E301     		lsls	r3, r4, #7
 386 001e 0548     		ldr	r0, .L31
 387 0020 C018     		adds	r0, r0, r3
 388 0022 8021     		movs	r1, #128
 389 0024 FFF7FEFF 		bl	ssd1306_WriteData
 390              	.LVL31:
 213:Core/Driver/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 391              		.loc 1 213 0 discriminator 3
 392 0028 0134     		adds	r4, r4, #1
 393              	.LVL32:
 394 002a E4B2     		uxtb	r4, r4
 395              	.LVL33:
 396              	.L29:
 213:Core/Driver/oled/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 397              		.loc 1 213 0 is_stmt 0 discriminator 1
 398 002c 072C     		cmp	r4, #7
 399 002e EAD9     		bls	.L30
 400              	.LBE2:
 219:Core/Driver/oled/ssd1306.c **** 
 401              		.loc 1 219 0 is_stmt 1
 402              		@ sp needed
 403              	.LVL34:
 404 0030 10BD     		pop	{r4, pc}
 405              	.L32:
 406 0032 C046     		.align	2
 407              	.L31:
 408 0034 00000000 		.word	.LANCHOR0
 409              		.cfi_endproc
 410              	.LFE318:
 412              		.section	.text.ssd1306_DrawPixel,"ax",%progbits
 413              		.align	2
 414              		.global	ssd1306_DrawPixel
 415              		.code	16
 416              		.thumb_func
ARM GAS  /tmp/cczv7fP8.s 			page 15


 418              	ssd1306_DrawPixel:
 419              	.LFB319:
 225:Core/Driver/oled/ssd1306.c ****     if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 420              		.loc 1 225 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 425              	.LVL35:
 226:Core/Driver/oled/ssd1306.c ****         // Don't write outside the buffer
 426              		.loc 1 226 0
 427 0000 43B2     		sxtb	r3, r0
 428 0002 002B     		cmp	r3, #0
 429 0004 1ADB     		blt	.L33
 226:Core/Driver/oled/ssd1306.c ****         // Don't write outside the buffer
 430              		.loc 1 226 0 is_stmt 0 discriminator 1
 431 0006 3F29     		cmp	r1, #63
 432 0008 18D8     		bhi	.L33
 232:Core/Driver/oled/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 433              		.loc 1 232 0 is_stmt 1
 434 000a 012A     		cmp	r2, #1
 435 000c 0BD1     		bne	.L35
 233:Core/Driver/oled/ssd1306.c ****     } else { 
 436              		.loc 1 233 0
 437 000e CB08     		lsrs	r3, r1, #3
 438 0010 DB01     		lsls	r3, r3, #7
 439 0012 1818     		adds	r0, r3, r0
 440              	.LVL36:
 441 0014 0723     		movs	r3, #7
 442 0016 1940     		ands	r1, r3
 443              	.LVL37:
 444 0018 063B     		subs	r3, r3, #6
 445 001a 8B40     		lsls	r3, r3, r1
 446 001c 084A     		ldr	r2, .L36
 447              	.LVL38:
 448 001e 115C     		ldrb	r1, [r2, r0]
 449 0020 0B43     		orrs	r3, r1
 450 0022 1354     		strb	r3, [r2, r0]
 451 0024 0AE0     		b	.L33
 452              	.LVL39:
 453              	.L35:
 235:Core/Driver/oled/ssd1306.c ****     }
 454              		.loc 1 235 0
 455 0026 CB08     		lsrs	r3, r1, #3
 456 0028 DB01     		lsls	r3, r3, #7
 457 002a 1818     		adds	r0, r3, r0
 458              	.LVL40:
 459 002c 0723     		movs	r3, #7
 460 002e 1940     		ands	r1, r3
 461              	.LVL41:
 462 0030 0122     		movs	r2, #1
 463              	.LVL42:
 464 0032 8A40     		lsls	r2, r2, r1
 465 0034 0249     		ldr	r1, .L36
 466 0036 0B5C     		ldrb	r3, [r1, r0]
 467 0038 9343     		bics	r3, r2
 468 003a 0B54     		strb	r3, [r1, r0]
ARM GAS  /tmp/cczv7fP8.s 			page 16


 469              	.L33:
 237:Core/Driver/oled/ssd1306.c **** 
 470              		.loc 1 237 0
 471              		@ sp needed
 472 003c 7047     		bx	lr
 473              	.L37:
 474 003e C046     		.align	2
 475              	.L36:
 476 0040 00000000 		.word	.LANCHOR0
 477              		.cfi_endproc
 478              	.LFE319:
 480              		.section	.text.ssd1306_WriteChar,"ax",%progbits
 481              		.align	2
 482              		.global	ssd1306_WriteChar
 483              		.code	16
 484              		.thumb_func
 486              	ssd1306_WriteChar:
 487              	.LFB320:
 243:Core/Driver/oled/ssd1306.c ****     uint32_t i, b, j;
 488              		.loc 1 243 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 8
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              	.LVL43:
 493 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 494              	.LCFI8:
 495              		.cfi_def_cfa_offset 20
 496              		.cfi_offset 4, -20
 497              		.cfi_offset 5, -16
 498              		.cfi_offset 6, -12
 499              		.cfi_offset 7, -8
 500              		.cfi_offset 14, -4
 501 0002 5F46     		mov	r7, fp
 502 0004 5646     		mov	r6, r10
 503 0006 4D46     		mov	r5, r9
 504 0008 4446     		mov	r4, r8
 505 000a F0B4     		push	{r4, r5, r6, r7}
 506              	.LCFI9:
 507              		.cfi_def_cfa_offset 36
 508              		.cfi_offset 8, -36
 509              		.cfi_offset 9, -32
 510              		.cfi_offset 10, -28
 511              		.cfi_offset 11, -24
 512 000c 83B0     		sub	sp, sp, #12
 513              	.LCFI10:
 514              		.cfi_def_cfa_offset 48
 515 000e 8146     		mov	r9, r0
 516 0010 0091     		str	r1, [sp]
 517 0012 0192     		str	r2, [sp, #4]
 518 0014 9846     		mov	r8, r3
 247:Core/Driver/oled/ssd1306.c ****         return 0;
 519              		.loc 1 247 0
 520 0016 0300     		movs	r3, r0
 521              	.LVL44:
 522 0018 203B     		subs	r3, r3, #32
 523 001a DBB2     		uxtb	r3, r3
 524 001c 5E2B     		cmp	r3, #94
ARM GAS  /tmp/cczv7fP8.s 			page 17


 525 001e 42D8     		bhi	.L46
 251:Core/Driver/oled/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 526              		.loc 1 251 0
 527 0020 274B     		ldr	r3, .L49
 528 0022 1B88     		ldrh	r3, [r3]
 529 0024 6A46     		mov	r2, sp
 530 0026 1678     		ldrb	r6, [r2]
 531 0028 9B19     		adds	r3, r3, r6
 532 002a 802B     		cmp	r3, #128
 533 002c 3DDC     		bgt	.L47
 252:Core/Driver/oled/ssd1306.c ****     {
 534              		.loc 1 252 0 discriminator 1
 535 002e 244B     		ldr	r3, .L49
 536 0030 5B88     		ldrh	r3, [r3, #2]
 537 0032 5278     		ldrb	r2, [r2, #1]
 538 0034 9246     		mov	r10, r2
 539 0036 9346     		mov	fp, r2
 540 0038 5344     		add	r3, r3, r10
 251:Core/Driver/oled/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 541              		.loc 1 251 0 discriminator 1
 542 003a 402B     		cmp	r3, #64
 543 003c 37DC     		bgt	.L48
 544 003e 0025     		movs	r5, #0
 545 0040 29E0     		b	.L40
 546              	.LVL45:
 547              	.L45:
 260:Core/Driver/oled/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 548              		.loc 1 260 0
 549 0042 4B46     		mov	r3, r9
 550 0044 203B     		subs	r3, r3, #32
 551 0046 5A46     		mov	r2, fp
 552 0048 5343     		muls	r3, r2
 553 004a 5B19     		adds	r3, r3, r5
 554 004c 5B00     		lsls	r3, r3, #1
 555 004e 019A     		ldr	r2, [sp, #4]
 556 0050 9F5A     		ldrh	r7, [r3, r2]
 557              	.LVL46:
 261:Core/Driver/oled/ssd1306.c ****             if((b << j) & 0x8000)  {
 558              		.loc 1 261 0
 559 0052 0024     		movs	r4, #0
 560 0054 1CE0     		b	.L41
 561              	.LVL47:
 562              	.L44:
 262:Core/Driver/oled/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 563              		.loc 1 262 0
 564 0056 3B00     		movs	r3, r7
 565 0058 A340     		lsls	r3, r3, r4
 566 005a 1B04     		lsls	r3, r3, #16
 567 005c 0AD5     		bpl	.L42
 263:Core/Driver/oled/ssd1306.c ****             } else {
 568              		.loc 1 263 0
 569 005e 184B     		ldr	r3, .L49
 570 0060 1888     		ldrh	r0, [r3]
 571 0062 5988     		ldrh	r1, [r3, #2]
 572 0064 4919     		adds	r1, r1, r5
 573 0066 C9B2     		uxtb	r1, r1
 574 0068 0019     		adds	r0, r0, r4
ARM GAS  /tmp/cczv7fP8.s 			page 18


 575 006a C0B2     		uxtb	r0, r0
 576 006c 4246     		mov	r2, r8
 577 006e FFF7FEFF 		bl	ssd1306_DrawPixel
 578              	.LVL48:
 579 0072 0CE0     		b	.L43
 580              	.L42:
 265:Core/Driver/oled/ssd1306.c ****             }
 581              		.loc 1 265 0
 582 0074 124B     		ldr	r3, .L49
 583 0076 1888     		ldrh	r0, [r3]
 584 0078 5988     		ldrh	r1, [r3, #2]
 585 007a 4246     		mov	r2, r8
 586 007c 5342     		rsbs	r3, r2, #0
 587 007e 5A41     		adcs	r2, r2, r3
 588 0080 D2B2     		uxtb	r2, r2
 589 0082 4919     		adds	r1, r1, r5
 590 0084 C9B2     		uxtb	r1, r1
 591 0086 0019     		adds	r0, r0, r4
 592 0088 C0B2     		uxtb	r0, r0
 593 008a FFF7FEFF 		bl	ssd1306_DrawPixel
 594              	.LVL49:
 595              	.L43:
 261:Core/Driver/oled/ssd1306.c ****             if((b << j) & 0x8000)  {
 596              		.loc 1 261 0 discriminator 2
 597 008e 0134     		adds	r4, r4, #1
 598              	.LVL50:
 599              	.L41:
 261:Core/Driver/oled/ssd1306.c ****             if((b << j) & 0x8000)  {
 600              		.loc 1 261 0 is_stmt 0 discriminator 1
 601 0090 B442     		cmp	r4, r6
 602 0092 E0D3     		bcc	.L44
 259:Core/Driver/oled/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 603              		.loc 1 259 0 is_stmt 1 discriminator 2
 604 0094 0135     		adds	r5, r5, #1
 605              	.LVL51:
 606              	.L40:
 259:Core/Driver/oled/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 607              		.loc 1 259 0 is_stmt 0 discriminator 1
 608 0096 5545     		cmp	r5, r10
 609 0098 D3D3     		bcc	.L45
 271:Core/Driver/oled/ssd1306.c ****     
 610              		.loc 1 271 0 is_stmt 1
 611 009a 094B     		ldr	r3, .L49
 612 009c 1A88     		ldrh	r2, [r3]
 613 009e 9619     		adds	r6, r2, r6
 614 00a0 1E80     		strh	r6, [r3]
 274:Core/Driver/oled/ssd1306.c **** }
 615              		.loc 1 274 0
 616 00a2 4846     		mov	r0, r9
 617 00a4 04E0     		b	.L39
 618              	.LVL52:
 619              	.L46:
 248:Core/Driver/oled/ssd1306.c ****     
 620              		.loc 1 248 0
 621 00a6 0020     		movs	r0, #0
 622              	.LVL53:
 623 00a8 02E0     		b	.L39
ARM GAS  /tmp/cczv7fP8.s 			page 19


 624              	.LVL54:
 625              	.L47:
 255:Core/Driver/oled/ssd1306.c ****     }
 626              		.loc 1 255 0
 627 00aa 0020     		movs	r0, #0
 628              	.LVL55:
 629 00ac 00E0     		b	.L39
 630              	.LVL56:
 631              	.L48:
 632 00ae 0020     		movs	r0, #0
 633              	.LVL57:
 634              	.L39:
 275:Core/Driver/oled/ssd1306.c **** 
 635              		.loc 1 275 0
 636 00b0 03B0     		add	sp, sp, #12
 637              		@ sp needed
 638 00b2 3CBC     		pop	{r2, r3, r4, r5}
 639 00b4 9046     		mov	r8, r2
 640 00b6 9946     		mov	r9, r3
 641 00b8 A246     		mov	r10, r4
 642 00ba AB46     		mov	fp, r5
 643 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 644              	.L50:
 645 00be C046     		.align	2
 646              	.L49:
 647 00c0 00000000 		.word	.LANCHOR1
 648              		.cfi_endproc
 649              	.LFE320:
 651              		.section	.text.ssd1306_WriteString,"ax",%progbits
 652              		.align	2
 653              		.global	ssd1306_WriteString
 654              		.code	16
 655              		.thumb_func
 657              	ssd1306_WriteString:
 658              	.LFB321:
 278:Core/Driver/oled/ssd1306.c ****     // Write until null-byte
 659              		.loc 1 278 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 8
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              	.LVL58:
 664 0000 30B5     		push	{r4, r5, lr}
 665              	.LCFI11:
 666              		.cfi_def_cfa_offset 12
 667              		.cfi_offset 4, -12
 668              		.cfi_offset 5, -8
 669              		.cfi_offset 14, -4
 670 0002 83B0     		sub	sp, sp, #12
 671              	.LCFI12:
 672              		.cfi_def_cfa_offset 24
 673 0004 0400     		movs	r4, r0
 674 0006 0091     		str	r1, [sp]
 675 0008 0192     		str	r2, [sp, #4]
 676 000a 1D00     		movs	r5, r3
 280:Core/Driver/oled/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 677              		.loc 1 280 0
 678 000c 09E0     		b	.L52
ARM GAS  /tmp/cczv7fP8.s 			page 20


 679              	.LVL59:
 680              	.L54:
 281:Core/Driver/oled/ssd1306.c ****             // Char could not be written
 681              		.loc 1 281 0
 682 000e 2B00     		movs	r3, r5
 683 0010 0099     		ldr	r1, [sp]
 684 0012 019A     		ldr	r2, [sp, #4]
 685 0014 FFF7FEFF 		bl	ssd1306_WriteChar
 686              	.LVL60:
 687 0018 0300     		movs	r3, r0
 688 001a 2078     		ldrb	r0, [r4]
 689 001c 8342     		cmp	r3, r0
 690 001e 03D1     		bne	.L53
 287:Core/Driver/oled/ssd1306.c ****     }
 691              		.loc 1 287 0
 692 0020 0134     		adds	r4, r4, #1
 693              	.LVL61:
 694              	.L52:
 280:Core/Driver/oled/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 695              		.loc 1 280 0
 696 0022 2078     		ldrb	r0, [r4]
 697 0024 0028     		cmp	r0, #0
 698 0026 F2D1     		bne	.L54
 699              	.L53:
 292:Core/Driver/oled/ssd1306.c **** 
 700              		.loc 1 292 0
 701 0028 03B0     		add	sp, sp, #12
 702              		@ sp needed
 703              	.LVL62:
 704 002a 30BD     		pop	{r4, r5, pc}
 705              		.cfi_endproc
 706              	.LFE321:
 708              		.section	.text.ssd1306_SetCursor,"ax",%progbits
 709              		.align	2
 710              		.global	ssd1306_SetCursor
 711              		.code	16
 712              		.thumb_func
 714              	ssd1306_SetCursor:
 715              	.LFB322:
 295:Core/Driver/oled/ssd1306.c ****     SSD1306.CurrentX = x;
 716              		.loc 1 295 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721              	.LVL63:
 296:Core/Driver/oled/ssd1306.c ****     SSD1306.CurrentY = y;
 722              		.loc 1 296 0
 723 0000 014B     		ldr	r3, .L56
 724 0002 1880     		strh	r0, [r3]
 297:Core/Driver/oled/ssd1306.c **** }
 725              		.loc 1 297 0
 726 0004 5980     		strh	r1, [r3, #2]
 298:Core/Driver/oled/ssd1306.c **** 
 727              		.loc 1 298 0
 728              		@ sp needed
 729 0006 7047     		bx	lr
ARM GAS  /tmp/cczv7fP8.s 			page 21


 730              	.L57:
 731              		.align	2
 732              	.L56:
 733 0008 00000000 		.word	.LANCHOR1
 734              		.cfi_endproc
 735              	.LFE322:
 737              		.section	.text.ssd1306_Line,"ax",%progbits
 738              		.align	2
 739              		.global	ssd1306_Line
 740              		.code	16
 741              		.thumb_func
 743              	ssd1306_Line:
 744              	.LFB323:
 301:Core/Driver/oled/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 745              		.loc 1 301 0
 746              		.cfi_startproc
 747              		@ args = 4, pretend = 0, frame = 8
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749              	.LVL64:
 750 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 751              	.LCFI13:
 752              		.cfi_def_cfa_offset 20
 753              		.cfi_offset 4, -20
 754              		.cfi_offset 5, -16
 755              		.cfi_offset 6, -12
 756              		.cfi_offset 7, -8
 757              		.cfi_offset 14, -4
 758 0002 5F46     		mov	r7, fp
 759 0004 5646     		mov	r6, r10
 760 0006 4D46     		mov	r5, r9
 761 0008 4446     		mov	r4, r8
 762 000a F0B4     		push	{r4, r5, r6, r7}
 763              	.LCFI14:
 764              		.cfi_def_cfa_offset 36
 765              		.cfi_offset 8, -36
 766              		.cfi_offset 9, -32
 767              		.cfi_offset 10, -28
 768              		.cfi_offset 11, -24
 769 000c 83B0     		sub	sp, sp, #12
 770              	.LCFI15:
 771              		.cfi_def_cfa_offset 48
 772 000e 0400     		movs	r4, r0
 773 0010 0D00     		movs	r5, r1
 774 0012 9146     		mov	r9, r2
 775 0014 9A46     		mov	r10, r3
 776 0016 0CAB     		add	r3, sp, #48
 777              	.LVL65:
 778 0018 1B78     		ldrb	r3, [r3]
 779              	.LVL66:
 780 001a 0093     		str	r3, [sp]
 302:Core/Driver/oled/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 781              		.loc 1 302 0
 782 001c 131A     		subs	r3, r2, r0
 783 001e DA17     		asrs	r2, r3, #31
 784              	.LVL67:
 785 0020 9B18     		adds	r3, r3, r2
 786 0022 5340     		eors	r3, r2
ARM GAS  /tmp/cczv7fP8.s 			page 22


 787 0024 9846     		mov	r8, r3
 788              	.LVL68:
 303:Core/Driver/oled/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 789              		.loc 1 303 0
 790 0026 5346     		mov	r3, r10
 791              	.LVL69:
 792 0028 5F1A     		subs	r7, r3, r1
 793 002a FB17     		asrs	r3, r7, #31
 794 002c FF18     		adds	r7, r7, r3
 795 002e 5F40     		eors	r7, r3
 796              	.LVL70:
 304:Core/Driver/oled/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 797              		.loc 1 304 0
 798 0030 8145     		cmp	r9, r0
 799 0032 02D9     		bls	.L65
 800 0034 0123     		movs	r3, #1
 801 0036 0193     		str	r3, [sp, #4]
 802 0038 02E0     		b	.L59
 803              	.L65:
 804 003a 0123     		movs	r3, #1
 805 003c 5B42     		rsbs	r3, r3, #0
 806 003e 0193     		str	r3, [sp, #4]
 807              	.L59:
 808              	.LVL71:
 305:Core/Driver/oled/ssd1306.c ****   int32_t error = deltaX - deltaY;
 809              		.loc 1 305 0 discriminator 4
 810 0040 AA45     		cmp	r10, r5
 811 0042 02D9     		bls	.L66
 305:Core/Driver/oled/ssd1306.c ****   int32_t error = deltaX - deltaY;
 812              		.loc 1 305 0 is_stmt 0
 813 0044 0123     		movs	r3, #1
 814 0046 9B46     		mov	fp, r3
 815 0048 02E0     		b	.L60
 816              	.L66:
 817 004a 0123     		movs	r3, #1
 818 004c 5B42     		rsbs	r3, r3, #0
 819 004e 9B46     		mov	fp, r3
 820              	.L60:
 821              	.LVL72:
 306:Core/Driver/oled/ssd1306.c ****   int32_t error2;
 822              		.loc 1 306 0 is_stmt 1 discriminator 4
 823 0050 4346     		mov	r3, r8
 824 0052 DE1B     		subs	r6, r3, r7
 825              	.LVL73:
 309:Core/Driver/oled/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 826              		.loc 1 309 0 discriminator 4
 827 0054 009A     		ldr	r2, [sp]
 828 0056 5146     		mov	r1, r10
 829              	.LVL74:
 830 0058 4846     		mov	r0, r9
 831              	.LVL75:
 832 005a FFF7FEFF 		bl	ssd1306_DrawPixel
 833              	.LVL76:
 310:Core/Driver/oled/ssd1306.c ****     {
 834              		.loc 1 310 0 discriminator 4
 835 005e 12E0     		b	.L61
 836              	.LVL77:
ARM GAS  /tmp/cczv7fP8.s 			page 23


 837              	.L64:
 312:Core/Driver/oled/ssd1306.c ****     error2 = error * 2;
 838              		.loc 1 312 0
 839 0060 009A     		ldr	r2, [sp]
 840 0062 2900     		movs	r1, r5
 841 0064 2000     		movs	r0, r4
 842 0066 FFF7FEFF 		bl	ssd1306_DrawPixel
 843              	.LVL78:
 313:Core/Driver/oled/ssd1306.c ****     if(error2 > -deltaY)
 844              		.loc 1 313 0
 845 006a 7300     		lsls	r3, r6, #1
 846              	.LVL79:
 314:Core/Driver/oled/ssd1306.c ****     {
 847              		.loc 1 314 0
 848 006c 7A42     		rsbs	r2, r7, #0
 849 006e 9342     		cmp	r3, r2
 850 0070 04DD     		ble	.L62
 316:Core/Driver/oled/ssd1306.c ****       x1 += signX;
 851              		.loc 1 316 0
 852 0072 F61B     		subs	r6, r6, r7
 853              	.LVL80:
 317:Core/Driver/oled/ssd1306.c ****     }
 854              		.loc 1 317 0
 855 0074 019A     		ldr	r2, [sp, #4]
 856 0076 9446     		mov	ip, r2
 857 0078 6444     		add	r4, r4, ip
 858              	.LVL81:
 859 007a E4B2     		uxtb	r4, r4
 860              	.LVL82:
 861              	.L62:
 324:Core/Driver/oled/ssd1306.c ****     {
 862              		.loc 1 324 0
 863 007c 9845     		cmp	r8, r3
 864 007e 02DD     		ble	.L61
 326:Core/Driver/oled/ssd1306.c ****       y1 += signY;
 865              		.loc 1 326 0
 866 0080 4644     		add	r6, r6, r8
 867              	.LVL83:
 327:Core/Driver/oled/ssd1306.c ****     }
 868              		.loc 1 327 0
 869 0082 5D44     		add	r5, r5, fp
 870              	.LVL84:
 871 0084 EDB2     		uxtb	r5, r5
 872              	.LVL85:
 873              	.L61:
 310:Core/Driver/oled/ssd1306.c ****     {
 874              		.loc 1 310 0
 875 0086 4C45     		cmp	r4, r9
 876 0088 EAD1     		bne	.L64
 310:Core/Driver/oled/ssd1306.c ****     {
 877              		.loc 1 310 0 is_stmt 0 discriminator 1
 878 008a 5545     		cmp	r5, r10
 879 008c E8D1     		bne	.L64
 335:Core/Driver/oled/ssd1306.c **** //Draw polyline
 880              		.loc 1 335 0 is_stmt 1
 881 008e 03B0     		add	sp, sp, #12
 882              		@ sp needed
ARM GAS  /tmp/cczv7fP8.s 			page 24


 883              	.LVL86:
 884              	.LVL87:
 885              	.LVL88:
 886              	.LVL89:
 887              	.LVL90:
 888              	.LVL91:
 889 0090 3CBC     		pop	{r2, r3, r4, r5}
 890 0092 9046     		mov	r8, r2
 891 0094 9946     		mov	r9, r3
 892 0096 A246     		mov	r10, r4
 893 0098 AB46     		mov	fp, r5
 894 009a F0BD     		pop	{r4, r5, r6, r7, pc}
 895              		.cfi_endproc
 896              	.LFE323:
 898              		.section	.text.ssd1306_Polyline,"ax",%progbits
 899              		.align	2
 900              		.global	ssd1306_Polyline
 901              		.code	16
 902              		.thumb_func
 904              	ssd1306_Polyline:
 905              	.LFB324:
 337:Core/Driver/oled/ssd1306.c ****   uint16_t i;
 906              		.loc 1 337 0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 0
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910              	.LVL92:
 911 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 912              	.LCFI16:
 913              		.cfi_def_cfa_offset 20
 914              		.cfi_offset 4, -20
 915              		.cfi_offset 5, -16
 916              		.cfi_offset 6, -12
 917              		.cfi_offset 7, -8
 918              		.cfi_offset 14, -4
 919 0002 83B0     		sub	sp, sp, #12
 920              	.LCFI17:
 921              		.cfi_def_cfa_offset 32
 922 0004 0500     		movs	r5, r0
 923 0006 0E00     		movs	r6, r1
 924 0008 1700     		movs	r7, r2
 339:Core/Driver/oled/ssd1306.c ****     for(i = 1; i < par_size; i++){
 925              		.loc 1 339 0
 926 000a 0028     		cmp	r0, #0
 927 000c 10D1     		bne	.L71
 928 000e 12E0     		b	.L67
 929              	.LVL93:
 930              	.L70:
 341:Core/Driver/oled/ssd1306.c ****     }
 931              		.loc 1 341 0 discriminator 3
 932 0010 0A4B     		ldr	r3, .L72
 933 0012 E018     		adds	r0, r4, r3
 934 0014 4000     		lsls	r0, r0, #1
 935 0016 2818     		adds	r0, r5, r0
 936 0018 6200     		lsls	r2, r4, #1
 937 001a AA18     		adds	r2, r5, r2
 938 001c 5378     		ldrb	r3, [r2, #1]
ARM GAS  /tmp/cczv7fP8.s 			page 25


 939 001e 1278     		ldrb	r2, [r2]
 940 0020 4178     		ldrb	r1, [r0, #1]
 941 0022 0078     		ldrb	r0, [r0]
 942 0024 0097     		str	r7, [sp]
 943 0026 FFF7FEFF 		bl	ssd1306_Line
 944              	.LVL94:
 340:Core/Driver/oled/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 945              		.loc 1 340 0 discriminator 3
 946 002a 0134     		adds	r4, r4, #1
 947              	.LVL95:
 948 002c A4B2     		uxth	r4, r4
 949              	.LVL96:
 950 002e 00E0     		b	.L68
 951              	.LVL97:
 952              	.L71:
 953 0030 0124     		movs	r4, #1
 954              	.LVL98:
 955              	.L68:
 340:Core/Driver/oled/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 956              		.loc 1 340 0 is_stmt 0 discriminator 1
 957 0032 B442     		cmp	r4, r6
 958 0034 ECD3     		bcc	.L70
 959              	.LVL99:
 960              	.L67:
 349:Core/Driver/oled/ssd1306.c **** /*Convert Degrees to Radians*/
 961              		.loc 1 349 0 is_stmt 1
 962 0036 03B0     		add	sp, sp, #12
 963              		@ sp needed
 964              	.LVL100:
 965 0038 F0BD     		pop	{r4, r5, r6, r7, pc}
 966              	.L73:
 967 003a C046     		.align	2
 968              	.L72:
 969 003c FFFFFF7F 		.word	2147483647
 970              		.cfi_endproc
 971              	.LFE324:
 973              		.global	__aeabi_idiv
 974              		.global	__aeabi_uidiv
 975              		.global	__aeabi_ui2f
 976              		.global	__aeabi_fdiv
 977              		.global	__aeabi_fmul
 978              		.global	__aeabi_i2d
 979              		.global	__aeabi_d2iz
 980              		.section	.text.ssd1306_DrawArc,"ax",%progbits
 981              		.align	2
 982              		.global	ssd1306_DrawArc
 983              		.code	16
 984              		.thumb_func
 986              	ssd1306_DrawArc:
 987              	.LFB327:
 368:Core/Driver/oled/ssd1306.c **** /*DrawArc. Draw angle is beginning from 4 quart of trigonometric circle (3pi/2)
 369:Core/Driver/oled/ssd1306.c ****  * start_angle in degree
 370:Core/Driver/oled/ssd1306.c ****  * sweep in degree
 371:Core/Driver/oled/ssd1306.c ****  */
 372:Core/Driver/oled/ssd1306.c **** void ssd1306_DrawArc(uint8_t x, uint8_t y, uint8_t radius, uint16_t start_angle, uint16_t sweep, SS
 988              		.loc 1 372 0
 989              		.cfi_startproc
ARM GAS  /tmp/cczv7fP8.s 			page 26


 990              		@ args = 8, pretend = 0, frame = 32
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 992              	.LVL101:
 993 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 994              	.LCFI18:
 995              		.cfi_def_cfa_offset 20
 996              		.cfi_offset 4, -20
 997              		.cfi_offset 5, -16
 998              		.cfi_offset 6, -12
 999              		.cfi_offset 7, -8
 1000              		.cfi_offset 14, -4
 1001 0002 5F46     		mov	r7, fp
 1002 0004 5646     		mov	r6, r10
 1003 0006 4D46     		mov	r5, r9
 1004 0008 4446     		mov	r4, r8
 1005 000a F0B4     		push	{r4, r5, r6, r7}
 1006              	.LCFI19:
 1007              		.cfi_def_cfa_offset 36
 1008              		.cfi_offset 8, -36
 1009              		.cfi_offset 9, -32
 1010              		.cfi_offset 10, -28
 1011              		.cfi_offset 11, -24
 1012 000c 8BB0     		sub	sp, sp, #44
 1013              	.LCFI20:
 1014              		.cfi_def_cfa_offset 80
 1015 000e 0700     		movs	r7, r0
 1016 0010 0E00     		movs	r6, r1
 1017 0012 0892     		str	r2, [sp, #32]
 1018 0014 1C00     		movs	r4, r3
 1019 0016 14AB     		add	r3, sp, #80
 1020              	.LVL102:
 1021 0018 1888     		ldrh	r0, [r3]
 1022              	.LVL103:
 1023 001a 15AB     		add	r3, sp, #84
 1024              	.LVL104:
 1025 001c 1B78     		ldrb	r3, [r3]
 1026              	.LVL105:
 1027 001e 9B46     		mov	fp, r3
 1028              	.LVL106:
 373:Core/Driver/oled/ssd1306.c ****     #define CIRCLE_APPROXIMATION_SEGMENTS 36
 374:Core/Driver/oled/ssd1306.c ****     float approx_degree;
 375:Core/Driver/oled/ssd1306.c ****     uint32_t approx_segments;
 376:Core/Driver/oled/ssd1306.c ****     uint8_t xp1,xp2;
 377:Core/Driver/oled/ssd1306.c ****     uint8_t yp1,yp2;
 378:Core/Driver/oled/ssd1306.c ****     uint32_t count = 0;
 379:Core/Driver/oled/ssd1306.c ****     uint32_t loc_sweep = 0;
 380:Core/Driver/oled/ssd1306.c ****     float rad;
 381:Core/Driver/oled/ssd1306.c ****     
 382:Core/Driver/oled/ssd1306.c ****     loc_sweep = ssd1306_NormalizeTo0_360(sweep);
 1029              		.loc 1 382 0
 1030 0020 FFF7FEFF 		bl	ssd1306_NormalizeTo0_360
 1031              	.LVL107:
 1032 0024 8046     		mov	r8, r0
 1033              	.LVL108:
 383:Core/Driver/oled/ssd1306.c ****     
 384:Core/Driver/oled/ssd1306.c ****     count = (ssd1306_NormalizeTo0_360(start_angle) * CIRCLE_APPROXIMATION_SEGMENTS) / 360;
 1034              		.loc 1 384 0
ARM GAS  /tmp/cczv7fP8.s 			page 27


 1035 0026 2000     		movs	r0, r4
 1036              	.LVL109:
 1037 0028 FFF7FEFF 		bl	ssd1306_NormalizeTo0_360
 1038              	.LVL110:
 1039 002c C300     		lsls	r3, r0, #3
 1040 002e 1B18     		adds	r3, r3, r0
 1041 0030 9800     		lsls	r0, r3, #2
 1042 0032 B421     		movs	r1, #180
 1043 0034 4900     		lsls	r1, r1, #1
 1044 0036 FFF7FEFF 		bl	__aeabi_idiv
 1045              	.LVL111:
 1046 003a 0500     		movs	r5, r0
 1047              	.LVL112:
 385:Core/Driver/oled/ssd1306.c ****     approx_segments = (loc_sweep * CIRCLE_APPROXIMATION_SEGMENTS) / 360;
 1048              		.loc 1 385 0
 1049 003c 4346     		mov	r3, r8
 1050 003e DB00     		lsls	r3, r3, #3
 1051 0040 4344     		add	r3, r3, r8
 1052 0042 9800     		lsls	r0, r3, #2
 1053              	.LVL113:
 1054 0044 B421     		movs	r1, #180
 1055 0046 4900     		lsls	r1, r1, #1
 1056 0048 FFF7FEFF 		bl	__aeabi_uidiv
 1057              	.LVL114:
 1058 004c 0400     		movs	r4, r0
 1059              	.LVL115:
 386:Core/Driver/oled/ssd1306.c ****     approx_degree = loc_sweep / (float)approx_segments;
 1060              		.loc 1 386 0
 1061 004e 4046     		mov	r0, r8
 1062              	.LVL116:
 1063 0050 FFF7FEFF 		bl	__aeabi_ui2f
 1064              	.LVL117:
 1065 0054 0990     		str	r0, [sp, #36]
 1066 0056 2000     		movs	r0, r4
 1067 0058 FFF7FEFF 		bl	__aeabi_ui2f
 1068              	.LVL118:
 1069 005c 011C     		adds	r1, r0, #0
 1070 005e 0998     		ldr	r0, [sp, #36]
 1071 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1072              	.LVL119:
 1073 0064 0790     		str	r0, [sp, #28]
 1074              	.LVL120:
 1075 0066 A146     		mov	r9, r4
 1076 0068 BA46     		mov	r10, r7
 1077 006a 2F00     		movs	r7, r5
 1078 006c D846     		mov	r8, fp
 1079              	.LVL121:
 1080 006e B346     		mov	fp, r6
 387:Core/Driver/oled/ssd1306.c ****     while(count < approx_segments)
 1081              		.loc 1 387 0
 1082 0070 65E0     		b	.L75
 1083              	.LVL122:
 1084              	.L78:
 388:Core/Driver/oled/ssd1306.c ****     {
 389:Core/Driver/oled/ssd1306.c ****         rad = ssd1306_DegToRad(count*approx_degree);
 1085              		.loc 1 389 0
 1086 0072 3800     		movs	r0, r7
ARM GAS  /tmp/cczv7fP8.s 			page 28


 1087 0074 FFF7FEFF 		bl	__aeabi_ui2f
 1088              	.LVL123:
 1089 0078 079E     		ldr	r6, [sp, #28]
 1090 007a 311C     		adds	r1, r6, #0
 1091 007c FFF7FEFF 		bl	__aeabi_fmul
 1092              	.LVL124:
 1093 0080 FFF7FEFF 		bl	ssd1306_DegToRad
 1094              	.LVL125:
 390:Core/Driver/oled/ssd1306.c ****         xp1 = x + (int8_t)(sin(rad)*radius);
 1095              		.loc 1 390 0
 1096 0084 FFF7FEFF 		bl	__aeabi_f2d
 1097              	.LVL126:
 1098 0088 0490     		str	r0, [sp, #16]
 1099 008a 0591     		str	r1, [sp, #20]
 1100 008c FFF7FEFF 		bl	sin
 1101              	.LVL127:
 1102 0090 0400     		movs	r4, r0
 1103 0092 0D00     		movs	r5, r1
 1104 0094 0898     		ldr	r0, [sp, #32]
 1105 0096 FFF7FEFF 		bl	__aeabi_i2d
 1106              	.LVL128:
 1107 009a 0200     		movs	r2, r0
 1108 009c 0B00     		movs	r3, r1
 1109 009e 0292     		str	r2, [sp, #8]
 1110 00a0 0393     		str	r3, [sp, #12]
 1111 00a2 2000     		movs	r0, r4
 1112 00a4 2900     		movs	r1, r5
 1113 00a6 FFF7FEFF 		bl	__aeabi_dmul
 1114              	.LVL129:
 1115 00aa FFF7FEFF 		bl	__aeabi_d2iz
 1116              	.LVL130:
 1117 00ae 40B2     		sxtb	r0, r0
 1118 00b0 5044     		add	r0, r0, r10
 1119 00b2 C4B2     		uxtb	r4, r0
 1120              	.LVL131:
 391:Core/Driver/oled/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1121              		.loc 1 391 0
 1122 00b4 0498     		ldr	r0, [sp, #16]
 1123 00b6 0599     		ldr	r1, [sp, #20]
 1124 00b8 FFF7FEFF 		bl	cos
 1125              	.LVL132:
 1126 00bc 0200     		movs	r2, r0
 1127 00be 0B00     		movs	r3, r1
 1128 00c0 0298     		ldr	r0, [sp, #8]
 1129 00c2 0399     		ldr	r1, [sp, #12]
 1130 00c4 FFF7FEFF 		bl	__aeabi_dmul
 1131              	.LVL133:
 1132 00c8 FFF7FEFF 		bl	__aeabi_d2iz
 1133              	.LVL134:
 1134 00cc 40B2     		sxtb	r0, r0
 1135 00ce 5844     		add	r0, r0, fp
 1136 00d0 C5B2     		uxtb	r5, r0
 1137              	.LVL135:
 392:Core/Driver/oled/ssd1306.c ****         count++;
 1138              		.loc 1 392 0
 1139 00d2 0137     		adds	r7, r7, #1
 1140              	.LVL136:
ARM GAS  /tmp/cczv7fP8.s 			page 29


 393:Core/Driver/oled/ssd1306.c ****         if(count != approx_segments)
 1141              		.loc 1 393 0
 1142 00d4 B945     		cmp	r9, r7
 1143 00d6 08D0     		beq	.L76
 394:Core/Driver/oled/ssd1306.c ****         {
 395:Core/Driver/oled/ssd1306.c ****             rad = ssd1306_DegToRad(count*approx_degree);
 1144              		.loc 1 395 0
 1145 00d8 3800     		movs	r0, r7
 1146 00da FFF7FEFF 		bl	__aeabi_ui2f
 1147              	.LVL137:
 1148 00de 311C     		adds	r1, r6, #0
 1149 00e0 FFF7FEFF 		bl	__aeabi_fmul
 1150              	.LVL138:
 1151 00e4 FFF7FEFF 		bl	ssd1306_DegToRad
 1152              	.LVL139:
 1153 00e8 02E0     		b	.L77
 1154              	.LVL140:
 1155              	.L76:
 396:Core/Driver/oled/ssd1306.c ****         }
 397:Core/Driver/oled/ssd1306.c ****         else
 398:Core/Driver/oled/ssd1306.c ****         {            
 399:Core/Driver/oled/ssd1306.c ****             rad = ssd1306_DegToRad(loc_sweep);
 1156              		.loc 1 399 0
 1157 00ea 0998     		ldr	r0, [sp, #36]
 1158 00ec FFF7FEFF 		bl	ssd1306_DegToRad
 1159              	.LVL141:
 1160              	.L77:
 400:Core/Driver/oled/ssd1306.c ****         }
 401:Core/Driver/oled/ssd1306.c ****         xp2 = x + (int8_t)(sin(rad)*radius);
 1161              		.loc 1 401 0
 1162 00f0 FFF7FEFF 		bl	__aeabi_f2d
 1163              	.LVL142:
 1164 00f4 0490     		str	r0, [sp, #16]
 1165 00f6 0591     		str	r1, [sp, #20]
 1166 00f8 FFF7FEFF 		bl	sin
 1167              	.LVL143:
 1168 00fc 0200     		movs	r2, r0
 1169 00fe 0B00     		movs	r3, r1
 1170 0100 0298     		ldr	r0, [sp, #8]
 1171 0102 0399     		ldr	r1, [sp, #12]
 1172 0104 FFF7FEFF 		bl	__aeabi_dmul
 1173              	.LVL144:
 1174 0108 FFF7FEFF 		bl	__aeabi_d2iz
 1175              	.LVL145:
 1176 010c 40B2     		sxtb	r0, r0
 1177 010e 5044     		add	r0, r0, r10
 1178 0110 C6B2     		uxtb	r6, r0
 1179              	.LVL146:
 402:Core/Driver/oled/ssd1306.c ****         yp2 = y + (int8_t)(cos(rad)*radius);    
 1180              		.loc 1 402 0
 1181 0112 0498     		ldr	r0, [sp, #16]
 1182 0114 0599     		ldr	r1, [sp, #20]
 1183 0116 FFF7FEFF 		bl	cos
 1184              	.LVL147:
 1185 011a 0200     		movs	r2, r0
 1186 011c 0B00     		movs	r3, r1
 1187 011e 0298     		ldr	r0, [sp, #8]
ARM GAS  /tmp/cczv7fP8.s 			page 30


 1188 0120 0399     		ldr	r1, [sp, #12]
 1189 0122 FFF7FEFF 		bl	__aeabi_dmul
 1190              	.LVL148:
 1191 0126 FFF7FEFF 		bl	__aeabi_d2iz
 1192              	.LVL149:
 1193 012a 43B2     		sxtb	r3, r0
 1194 012c 5B44     		add	r3, r3, fp
 1195 012e DBB2     		uxtb	r3, r3
 1196              	.LVL150:
 403:Core/Driver/oled/ssd1306.c ****         ssd1306_Line(xp1,yp1,xp2,yp2,color);
 1197              		.loc 1 403 0
 1198 0130 4246     		mov	r2, r8
 1199 0132 0092     		str	r2, [sp]
 1200 0134 3200     		movs	r2, r6
 1201 0136 2900     		movs	r1, r5
 1202 0138 2000     		movs	r0, r4
 1203 013a FFF7FEFF 		bl	ssd1306_Line
 1204              	.LVL151:
 1205              	.L75:
 387:Core/Driver/oled/ssd1306.c ****     {
 1206              		.loc 1 387 0
 1207 013e 4F45     		cmp	r7, r9
 1208 0140 97D3     		bcc	.L78
 404:Core/Driver/oled/ssd1306.c ****     }
 405:Core/Driver/oled/ssd1306.c ****     
 406:Core/Driver/oled/ssd1306.c ****     return;
 407:Core/Driver/oled/ssd1306.c **** }
 1209              		.loc 1 407 0
 1210 0142 0BB0     		add	sp, sp, #44
 1211              		@ sp needed
 1212              	.LVL152:
 1213              	.LVL153:
 1214 0144 3CBC     		pop	{r2, r3, r4, r5}
 1215 0146 9046     		mov	r8, r2
 1216 0148 9946     		mov	r9, r3
 1217 014a A246     		mov	r10, r4
 1218 014c AB46     		mov	fp, r5
 1219 014e F0BD     		pop	{r4, r5, r6, r7, pc}
 1220              		.cfi_endproc
 1221              	.LFE327:
 1223              		.section	.text.ssd1306_DrawCircle,"ax",%progbits
 1224              		.align	2
 1225              		.global	ssd1306_DrawCircle
 1226              		.code	16
 1227              		.thumb_func
 1229              	ssd1306_DrawCircle:
 1230              	.LFB328:
 408:Core/Driver/oled/ssd1306.c **** //Draw circle by Bresenhem's algorithm
 409:Core/Driver/oled/ssd1306.c **** void ssd1306_DrawCircle(uint8_t par_x,uint8_t par_y,uint8_t par_r,SSD1306_COLOR par_color) {
 1231              		.loc 1 409 0
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 8
 1234              		@ frame_needed = 0, uses_anonymous_args = 0
 1235              	.LVL154:
 1236 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1237              	.LCFI21:
 1238              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/cczv7fP8.s 			page 31


 1239              		.cfi_offset 4, -20
 1240              		.cfi_offset 5, -16
 1241              		.cfi_offset 6, -12
 1242              		.cfi_offset 7, -8
 1243              		.cfi_offset 14, -4
 1244 0002 5F46     		mov	r7, fp
 1245 0004 5646     		mov	r6, r10
 1246 0006 4D46     		mov	r5, r9
 1247 0008 4446     		mov	r4, r8
 1248 000a F0B4     		push	{r4, r5, r6, r7}
 1249              	.LCFI22:
 1250              		.cfi_def_cfa_offset 36
 1251              		.cfi_offset 8, -36
 1252              		.cfi_offset 9, -32
 1253              		.cfi_offset 10, -28
 1254              		.cfi_offset 11, -24
 1255 000c 83B0     		sub	sp, sp, #12
 1256              	.LCFI23:
 1257              		.cfi_def_cfa_offset 48
 1258 000e 8046     		mov	r8, r0
 1259 0010 8A46     		mov	r10, r1
 1260 0012 0093     		str	r3, [sp]
 410:Core/Driver/oled/ssd1306.c ****   int32_t x = -par_r;
 1261              		.loc 1 410 0
 1262 0014 5742     		rsbs	r7, r2, #0
 1263              	.LVL155:
 411:Core/Driver/oled/ssd1306.c ****   int32_t y = 0;
 412:Core/Driver/oled/ssd1306.c ****   int32_t err = 2 - 2 * par_r;
 1264              		.loc 1 412 0
 1265 0016 0123     		movs	r3, #1
 1266              	.LVL156:
 1267 0018 9E1A     		subs	r6, r3, r2
 1268 001a 7600     		lsls	r6, r6, #1
 1269              	.LVL157:
 413:Core/Driver/oled/ssd1306.c ****   int32_t e2;
 414:Core/Driver/oled/ssd1306.c **** 
 415:Core/Driver/oled/ssd1306.c ****   if (par_x >= SSD1306_WIDTH || par_y >= SSD1306_HEIGHT) {
 1270              		.loc 1 415 0
 1271 001c 6A46     		mov	r2, sp
 1272              	.LVL158:
 1273 001e 1071     		strb	r0, [r2, #4]
 1274 0020 1379     		ldrb	r3, [r2, #4]
 1275 0022 5BB2     		sxtb	r3, r3
 1276 0024 002B     		cmp	r3, #0
 1277 0026 46DB     		blt	.L79
 1278              		.loc 1 415 0 is_stmt 0 discriminator 1
 1279 0028 3F29     		cmp	r1, #63
 1280 002a 44D8     		bhi	.L79
 1281 002c 0023     		movs	r3, #0
 1282 002e 9946     		mov	r9, r3
 1283              	.LVL159:
 1284              	.L83:
 416:Core/Driver/oled/ssd1306.c ****     return;
 417:Core/Driver/oled/ssd1306.c ****   }
 418:Core/Driver/oled/ssd1306.c **** 
 419:Core/Driver/oled/ssd1306.c ****     do {
 420:Core/Driver/oled/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y + y, par_color);
ARM GAS  /tmp/cczv7fP8.s 			page 32


 1285              		.loc 1 420 0 is_stmt 1
 1286 0030 FDB2     		uxtb	r5, r7
 1287 0032 4346     		mov	r3, r8
 1288 0034 5B1B     		subs	r3, r3, r5
 1289 0036 DBB2     		uxtb	r3, r3
 1290 0038 4A46     		mov	r2, r9
 1291 003a 6946     		mov	r1, sp
 1292 003c 0A71     		strb	r2, [r1, #4]
 1293 003e 0A79     		ldrb	r2, [r1, #4]
 1294 0040 9346     		mov	fp, r2
 1295 0042 5446     		mov	r4, r10
 1296 0044 5C44     		add	r4, r4, fp
 1297 0046 E4B2     		uxtb	r4, r4
 1298 0048 009A     		ldr	r2, [sp]
 1299 004a 2100     		movs	r1, r4
 1300 004c 0193     		str	r3, [sp, #4]
 1301 004e 1800     		movs	r0, r3
 1302 0050 FFF7FEFF 		bl	ssd1306_DrawPixel
 1303              	.LVL160:
 421:Core/Driver/oled/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y + y, par_color);
 1304              		.loc 1 421 0
 1305 0054 4544     		add	r5, r5, r8
 1306 0056 EDB2     		uxtb	r5, r5
 1307 0058 009A     		ldr	r2, [sp]
 1308 005a 2100     		movs	r1, r4
 1309 005c 2800     		movs	r0, r5
 1310 005e FFF7FEFF 		bl	ssd1306_DrawPixel
 1311              	.LVL161:
 422:Core/Driver/oled/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y - y, par_color);
 1312              		.loc 1 422 0
 1313 0062 5246     		mov	r2, r10
 1314 0064 5946     		mov	r1, fp
 1315 0066 541A     		subs	r4, r2, r1
 1316 0068 E4B2     		uxtb	r4, r4
 1317 006a 009A     		ldr	r2, [sp]
 1318 006c 2100     		movs	r1, r4
 1319 006e 2800     		movs	r0, r5
 1320 0070 FFF7FEFF 		bl	ssd1306_DrawPixel
 1321              	.LVL162:
 423:Core/Driver/oled/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y - y, par_color);
 1322              		.loc 1 423 0
 1323 0074 009A     		ldr	r2, [sp]
 1324 0076 2100     		movs	r1, r4
 1325 0078 0198     		ldr	r0, [sp, #4]
 1326 007a FFF7FEFF 		bl	ssd1306_DrawPixel
 1327              	.LVL163:
 424:Core/Driver/oled/ssd1306.c ****         e2 = err;
 425:Core/Driver/oled/ssd1306.c ****         if (e2 <= y) {
 1328              		.loc 1 425 0
 1329 007e B145     		cmp	r9, r6
 1330 0080 0CDB     		blt	.L84
 426:Core/Driver/oled/ssd1306.c ****             y++;
 1331              		.loc 1 426 0
 1332 0082 0123     		movs	r3, #1
 1333 0084 9C46     		mov	ip, r3
 1334 0086 E144     		add	r9, r9, ip
 1335              	.LVL164:
ARM GAS  /tmp/cczv7fP8.s 			page 33


 427:Core/Driver/oled/ssd1306.c ****             err = err + (y * 2 + 1);
 1336              		.loc 1 427 0
 1337 0088 4B46     		mov	r3, r9
 1338 008a 5B00     		lsls	r3, r3, #1
 1339 008c 0133     		adds	r3, r3, #1
 1340 008e F318     		adds	r3, r6, r3
 1341              	.LVL165:
 428:Core/Driver/oled/ssd1306.c ****             if(-x == y && e2 <= x) {
 1342              		.loc 1 428 0
 1343 0090 7A42     		rsbs	r2, r7, #0
 1344 0092 9145     		cmp	r9, r2
 1345 0094 05D1     		bne	.L81
 1346              		.loc 1 428 0 is_stmt 0 discriminator 1
 1347 0096 B742     		cmp	r7, r6
 1348 0098 02DA     		bge	.L85
 1349 009a 02E0     		b	.L81
 1350              	.LVL166:
 1351              	.L84:
 1352 009c 3300     		movs	r3, r6
 1353 009e 00E0     		b	.L81
 1354              	.LVL167:
 1355              	.L85:
 429:Core/Driver/oled/ssd1306.c ****               e2 = 0;
 1356              		.loc 1 429 0 is_stmt 1
 1357 00a0 0026     		movs	r6, #0
 1358              	.LVL168:
 1359              	.L81:
 430:Core/Driver/oled/ssd1306.c ****             }
 431:Core/Driver/oled/ssd1306.c ****             else
 432:Core/Driver/oled/ssd1306.c ****             {
 433:Core/Driver/oled/ssd1306.c ****               /*nothing to do*/
 434:Core/Driver/oled/ssd1306.c ****             }
 435:Core/Driver/oled/ssd1306.c ****         }
 436:Core/Driver/oled/ssd1306.c ****         else
 437:Core/Driver/oled/ssd1306.c ****         {
 438:Core/Driver/oled/ssd1306.c ****           /*nothing to do*/
 439:Core/Driver/oled/ssd1306.c ****         }
 440:Core/Driver/oled/ssd1306.c ****         if(e2 > x) {
 1360              		.loc 1 440 0
 1361 00a2 B742     		cmp	r7, r6
 1362 00a4 04DA     		bge	.L86
 441:Core/Driver/oled/ssd1306.c ****           x++;
 1363              		.loc 1 441 0
 1364 00a6 0137     		adds	r7, r7, #1
 1365              	.LVL169:
 442:Core/Driver/oled/ssd1306.c ****           err = err + (x * 2 + 1);
 1366              		.loc 1 442 0
 1367 00a8 7E00     		lsls	r6, r7, #1
 1368              	.LVL170:
 1369 00aa 0136     		adds	r6, r6, #1
 1370 00ac 9E19     		adds	r6, r3, r6
 1371              	.LVL171:
 1372 00ae 00E0     		b	.L82
 1373              	.LVL172:
 1374              	.L86:
 1375 00b0 1E00     		movs	r6, r3
 1376              	.LVL173:
ARM GAS  /tmp/cczv7fP8.s 			page 34


 1377              	.L82:
 443:Core/Driver/oled/ssd1306.c ****         }
 444:Core/Driver/oled/ssd1306.c ****         else
 445:Core/Driver/oled/ssd1306.c ****         {
 446:Core/Driver/oled/ssd1306.c ****           /*nothing to do*/
 447:Core/Driver/oled/ssd1306.c ****         }
 448:Core/Driver/oled/ssd1306.c ****     } while(x <= 0);
 1378              		.loc 1 448 0
 1379 00b2 002F     		cmp	r7, #0
 1380 00b4 BCDD     		ble	.L83
 1381              	.LVL174:
 1382              	.L79:
 449:Core/Driver/oled/ssd1306.c **** 
 450:Core/Driver/oled/ssd1306.c ****     return;
 451:Core/Driver/oled/ssd1306.c **** }
 1383              		.loc 1 451 0
 1384 00b6 03B0     		add	sp, sp, #12
 1385              		@ sp needed
 1386              	.LVL175:
 1387              	.LVL176:
 1388 00b8 3CBC     		pop	{r2, r3, r4, r5}
 1389 00ba 9046     		mov	r8, r2
 1390 00bc 9946     		mov	r9, r3
 1391 00be A246     		mov	r10, r4
 1392 00c0 AB46     		mov	fp, r5
 1393 00c2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1394              		.cfi_endproc
 1395              	.LFE328:
 1397              		.section	.text.ssd1306_DrawRectangle,"ax",%progbits
 1398              		.align	2
 1399              		.global	ssd1306_DrawRectangle
 1400              		.code	16
 1401              		.thumb_func
 1403              	ssd1306_DrawRectangle:
 1404              	.LFB329:
 452:Core/Driver/oled/ssd1306.c **** 
 453:Core/Driver/oled/ssd1306.c **** //Draw rectangle
 454:Core/Driver/oled/ssd1306.c **** void ssd1306_DrawRectangle(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 1405              		.loc 1 454 0
 1406              		.cfi_startproc
 1407              		@ args = 4, pretend = 0, frame = 8
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409              	.LVL177:
 1410 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1411              	.LCFI24:
 1412              		.cfi_def_cfa_offset 20
 1413              		.cfi_offset 4, -20
 1414              		.cfi_offset 5, -16
 1415              		.cfi_offset 6, -12
 1416              		.cfi_offset 7, -8
 1417              		.cfi_offset 14, -4
 1418 0002 85B0     		sub	sp, sp, #20
 1419              	.LCFI25:
 1420              		.cfi_def_cfa_offset 40
 1421 0004 0390     		str	r0, [sp, #12]
 1422 0006 0E00     		movs	r6, r1
 1423 0008 1700     		movs	r7, r2
ARM GAS  /tmp/cczv7fP8.s 			page 35


 1424 000a 1D00     		movs	r5, r3
 1425 000c 0AAB     		add	r3, sp, #40
 1426              	.LVL178:
 1427 000e 1C78     		ldrb	r4, [r3]
 455:Core/Driver/oled/ssd1306.c ****   ssd1306_Line(x1,y1,x2,y1,color);
 1428              		.loc 1 455 0
 1429 0010 0094     		str	r4, [sp]
 1430 0012 0B00     		movs	r3, r1
 1431              	.LVL179:
 1432 0014 FFF7FEFF 		bl	ssd1306_Line
 1433              	.LVL180:
 456:Core/Driver/oled/ssd1306.c ****   ssd1306_Line(x2,y1,x2,y2,color);
 1434              		.loc 1 456 0
 1435 0018 0094     		str	r4, [sp]
 1436 001a 2B00     		movs	r3, r5
 1437 001c 3A00     		movs	r2, r7
 1438 001e 3100     		movs	r1, r6
 1439 0020 3800     		movs	r0, r7
 1440 0022 FFF7FEFF 		bl	ssd1306_Line
 1441              	.LVL181:
 457:Core/Driver/oled/ssd1306.c ****   ssd1306_Line(x2,y2,x1,y2,color);
 1442              		.loc 1 457 0
 1443 0026 0094     		str	r4, [sp]
 1444 0028 2B00     		movs	r3, r5
 1445 002a 039A     		ldr	r2, [sp, #12]
 1446 002c 2900     		movs	r1, r5
 1447 002e 3800     		movs	r0, r7
 1448 0030 FFF7FEFF 		bl	ssd1306_Line
 1449              	.LVL182:
 458:Core/Driver/oled/ssd1306.c ****   ssd1306_Line(x1,y2,x1,y1,color);
 1450              		.loc 1 458 0
 1451 0034 0094     		str	r4, [sp]
 1452 0036 3300     		movs	r3, r6
 1453 0038 039A     		ldr	r2, [sp, #12]
 1454 003a 2900     		movs	r1, r5
 1455 003c 1000     		movs	r0, r2
 1456 003e FFF7FEFF 		bl	ssd1306_Line
 1457              	.LVL183:
 459:Core/Driver/oled/ssd1306.c **** 
 460:Core/Driver/oled/ssd1306.c ****   return;
 461:Core/Driver/oled/ssd1306.c **** }
 1458              		.loc 1 461 0
 1459 0042 05B0     		add	sp, sp, #20
 1460              		@ sp needed
 1461 0044 F0BD     		pop	{r4, r5, r6, r7, pc}
 1462              		.cfi_endproc
 1463              	.LFE329:
 1465 0046 C046     		.section	.text.ssd1306_DrawBitmap,"ax",%progbits
 1466              		.align	2
 1467              		.global	ssd1306_DrawBitmap
 1468              		.code	16
 1469              		.thumb_func
 1471              	ssd1306_DrawBitmap:
 1472              	.LFB330:
 462:Core/Driver/oled/ssd1306.c **** 
 463:Core/Driver/oled/ssd1306.c **** //Draw bitmap - ported from the ADAFruit GFX library
 464:Core/Driver/oled/ssd1306.c **** 
ARM GAS  /tmp/cczv7fP8.s 			page 36


 465:Core/Driver/oled/ssd1306.c **** void ssd1306_DrawBitmap(uint8_t x, uint8_t y, const unsigned char* bitmap, uint8_t w, uint8_t h, SS
 466:Core/Driver/oled/ssd1306.c **** {
 1473              		.loc 1 466 0
 1474              		.cfi_startproc
 1475              		@ args = 8, pretend = 0, frame = 16
 1476              		@ frame_needed = 0, uses_anonymous_args = 0
 1477              	.LVL184:
 1478 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1479              	.LCFI26:
 1480              		.cfi_def_cfa_offset 20
 1481              		.cfi_offset 4, -20
 1482              		.cfi_offset 5, -16
 1483              		.cfi_offset 6, -12
 1484              		.cfi_offset 7, -8
 1485              		.cfi_offset 14, -4
 1486 0002 5F46     		mov	r7, fp
 1487 0004 5646     		mov	r6, r10
 1488 0006 4D46     		mov	r5, r9
 1489 0008 4446     		mov	r4, r8
 1490 000a F0B4     		push	{r4, r5, r6, r7}
 1491              	.LCFI27:
 1492              		.cfi_def_cfa_offset 36
 1493              		.cfi_offset 8, -36
 1494              		.cfi_offset 9, -32
 1495              		.cfi_offset 10, -28
 1496              		.cfi_offset 11, -24
 1497 000c 85B0     		sub	sp, sp, #20
 1498              	.LCFI28:
 1499              		.cfi_def_cfa_offset 56
 1500 000e 8346     		mov	fp, r0
 1501 0010 0800     		movs	r0, r1
 1502              	.LVL185:
 1503 0012 0191     		str	r1, [sp, #4]
 1504 0014 9246     		mov	r10, r2
 1505 0016 1E00     		movs	r6, r3
 1506 0018 0EAB     		add	r3, sp, #56
 1507              	.LVL186:
 1508 001a 1B78     		ldrb	r3, [r3]
 1509              	.LVL187:
 1510 001c 9946     		mov	r9, r3
 1511 001e 0FAB     		add	r3, sp, #60
 1512              	.LVL188:
 1513 0020 1B78     		ldrb	r3, [r3]
 1514              	.LVL189:
 1515 0022 0293     		str	r3, [sp, #8]
 467:Core/Driver/oled/ssd1306.c ****     int16_t byteWidth = (w + 7) / 8; // Bitmap scanline pad = whole byte
 1516              		.loc 1 467 0
 1517 0024 F31D     		adds	r3, r6, #7
 1518 0026 DA17     		asrs	r2, r3, #31
 1519              	.LVL190:
 1520 0028 0721     		movs	r1, #7
 1521              	.LVL191:
 1522 002a 0A40     		ands	r2, r1
 1523 002c D318     		adds	r3, r2, r3
 1524 002e DB10     		asrs	r3, r3, #3
 1525 0030 9846     		mov	r8, r3
 1526              	.LVL192:
ARM GAS  /tmp/cczv7fP8.s 			page 37


 468:Core/Driver/oled/ssd1306.c ****     uint8_t byte = 0;
 469:Core/Driver/oled/ssd1306.c **** 
 470:Core/Driver/oled/ssd1306.c ****     if (x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 1527              		.loc 1 470 0
 1528 0032 5B46     		mov	r3, fp
 1529 0034 6A46     		mov	r2, sp
 1530 0036 D373     		strb	r3, [r2, #15]
 1531 0038 D37B     		ldrb	r3, [r2, #15]
 1532 003a 5BB2     		sxtb	r3, r3
 1533 003c 002B     		cmp	r3, #0
 1534 003e 27DB     		blt	.L88
 1535              		.loc 1 470 0 is_stmt 0 discriminator 1
 1536 0040 3F28     		cmp	r0, #63
 1537 0042 25D8     		bhi	.L88
 1538 0044 0027     		movs	r7, #0
 1539 0046 0025     		movs	r5, #0
 1540 0048 20E0     		b	.L90
 1541              	.LVL193:
 1542              	.L94:
 1543              	.LBB3:
 1544              	.LBB4:
 471:Core/Driver/oled/ssd1306.c ****         return;
 472:Core/Driver/oled/ssd1306.c ****     }
 473:Core/Driver/oled/ssd1306.c **** 
 474:Core/Driver/oled/ssd1306.c ****     for (uint8_t j = 0; j < h; j++, y++) {
 475:Core/Driver/oled/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 476:Core/Driver/oled/ssd1306.c ****             if (i & 7)
 1545              		.loc 1 476 0 is_stmt 1
 1546 004a 6307     		lsls	r3, r4, #29
 1547 004c 02D0     		beq	.L91
 477:Core/Driver/oled/ssd1306.c ****                 byte <<= 1;
 1548              		.loc 1 477 0
 1549 004e 6D00     		lsls	r5, r5, #1
 1550              	.LVL194:
 1551 0050 EDB2     		uxtb	r5, r5
 1552              	.LVL195:
 1553 0052 05E0     		b	.L92
 1554              	.L91:
 478:Core/Driver/oled/ssd1306.c ****             else
 479:Core/Driver/oled/ssd1306.c ****                 byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 1555              		.loc 1 479 0
 1556 0054 E308     		lsrs	r3, r4, #3
 1557 0056 4246     		mov	r2, r8
 1558 0058 7A43     		muls	r2, r7
 1559 005a D318     		adds	r3, r2, r3
 1560 005c 5246     		mov	r2, r10
 1561 005e D55C     		ldrb	r5, [r2, r3]
 1562              	.LVL196:
 1563              	.L92:
 480:Core/Driver/oled/ssd1306.c ****             if (byte & 0x80)
 1564              		.loc 1 480 0
 1565 0060 6BB2     		sxtb	r3, r5
 1566 0062 002B     		cmp	r3, #0
 1567 0064 06DA     		bge	.L93
 481:Core/Driver/oled/ssd1306.c ****                 ssd1306_DrawPixel(x + i, y, color);
 1568              		.loc 1 481 0
 1569 0066 5B46     		mov	r3, fp
ARM GAS  /tmp/cczv7fP8.s 			page 38


 1570 0068 E018     		adds	r0, r4, r3
 1571 006a C0B2     		uxtb	r0, r0
 1572 006c 029A     		ldr	r2, [sp, #8]
 1573 006e 0199     		ldr	r1, [sp, #4]
 1574 0070 FFF7FEFF 		bl	ssd1306_DrawPixel
 1575              	.LVL197:
 1576              	.L93:
 475:Core/Driver/oled/ssd1306.c ****             if (i & 7)
 1577              		.loc 1 475 0 discriminator 2
 1578 0074 0134     		adds	r4, r4, #1
 1579              	.LVL198:
 1580 0076 E4B2     		uxtb	r4, r4
 1581              	.LVL199:
 1582 0078 00E0     		b	.L95
 1583              	.LVL200:
 1584              	.L96:
 1585              	.LBE4:
 1586 007a 0024     		movs	r4, #0
 1587              	.L95:
 1588              	.LVL201:
 1589              	.LBB5:
 475:Core/Driver/oled/ssd1306.c ****             if (i & 7)
 1590              		.loc 1 475 0 is_stmt 0 discriminator 1
 1591 007c B442     		cmp	r4, r6
 1592 007e E4D3     		bcc	.L94
 1593              	.LBE5:
 474:Core/Driver/oled/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1594              		.loc 1 474 0 is_stmt 1 discriminator 2
 1595 0080 0137     		adds	r7, r7, #1
 1596              	.LVL202:
 1597 0082 FFB2     		uxtb	r7, r7
 1598              	.LVL203:
 1599 0084 019B     		ldr	r3, [sp, #4]
 1600 0086 0133     		adds	r3, r3, #1
 1601 0088 DBB2     		uxtb	r3, r3
 1602 008a 0193     		str	r3, [sp, #4]
 1603              	.LVL204:
 1604              	.L90:
 474:Core/Driver/oled/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1605              		.loc 1 474 0 is_stmt 0 discriminator 1
 1606 008c 4F45     		cmp	r7, r9
 1607 008e F4D3     		bcc	.L96
 1608              	.LVL205:
 1609              	.L88:
 1610              	.LBE3:
 482:Core/Driver/oled/ssd1306.c ****         }
 483:Core/Driver/oled/ssd1306.c ****     }
 484:Core/Driver/oled/ssd1306.c ****     return;
 485:Core/Driver/oled/ssd1306.c **** }
 1611              		.loc 1 485 0 is_stmt 1
 1612 0090 05B0     		add	sp, sp, #20
 1613              		@ sp needed
 1614              	.LVL206:
 1615              	.LVL207:
 1616 0092 3CBC     		pop	{r2, r3, r4, r5}
 1617 0094 9046     		mov	r8, r2
 1618 0096 9946     		mov	r9, r3
ARM GAS  /tmp/cczv7fP8.s 			page 39


 1619 0098 A246     		mov	r10, r4
 1620 009a AB46     		mov	fp, r5
 1621 009c F0BD     		pop	{r4, r5, r6, r7, pc}
 1622              		.cfi_endproc
 1623              	.LFE330:
 1625 009e C046     		.section	.text.ssd1306_SetContrast,"ax",%progbits
 1626              		.align	2
 1627              		.global	ssd1306_SetContrast
 1628              		.code	16
 1629              		.thumb_func
 1631              	ssd1306_SetContrast:
 1632              	.LFB331:
 486:Core/Driver/oled/ssd1306.c **** 
 487:Core/Driver/oled/ssd1306.c **** void ssd1306_SetContrast(const uint8_t value) {
 1633              		.loc 1 487 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 0
 1636              		@ frame_needed = 0, uses_anonymous_args = 0
 1637              	.LVL208:
 1638 0000 10B5     		push	{r4, lr}
 1639              	.LCFI29:
 1640              		.cfi_def_cfa_offset 8
 1641              		.cfi_offset 4, -8
 1642              		.cfi_offset 14, -4
 1643 0002 0400     		movs	r4, r0
 1644              	.LVL209:
 488:Core/Driver/oled/ssd1306.c ****     const uint8_t kSetContrastControlRegister = 0x81;
 489:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(kSetContrastControlRegister);
 1645              		.loc 1 489 0
 1646 0004 8120     		movs	r0, #129
 1647              	.LVL210:
 1648 0006 FFF7FEFF 		bl	ssd1306_WriteCommand
 1649              	.LVL211:
 490:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(value);
 1650              		.loc 1 490 0
 1651 000a 2000     		movs	r0, r4
 1652 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 1653              	.LVL212:
 491:Core/Driver/oled/ssd1306.c **** }
 1654              		.loc 1 491 0
 1655              		@ sp needed
 1656 0010 10BD     		pop	{r4, pc}
 1657              		.cfi_endproc
 1658              	.LFE331:
 1660 0012 C046     		.section	.text.ssd1306_SetDisplayOn,"ax",%progbits
 1661              		.align	2
 1662              		.global	ssd1306_SetDisplayOn
 1663              		.code	16
 1664              		.thumb_func
 1666              	ssd1306_SetDisplayOn:
 1667              	.LFB332:
 492:Core/Driver/oled/ssd1306.c **** 
 493:Core/Driver/oled/ssd1306.c **** void ssd1306_SetDisplayOn(const uint8_t on) {
 1668              		.loc 1 493 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 0
 1671              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cczv7fP8.s 			page 40


 1672              	.LVL213:
 1673 0000 10B5     		push	{r4, lr}
 1674              	.LCFI30:
 1675              		.cfi_def_cfa_offset 8
 1676              		.cfi_offset 4, -8
 1677              		.cfi_offset 14, -4
 494:Core/Driver/oled/ssd1306.c ****     uint8_t value;
 495:Core/Driver/oled/ssd1306.c ****     if (on) {
 1678              		.loc 1 495 0
 1679 0002 0028     		cmp	r0, #0
 1680 0004 04D0     		beq	.L99
 1681              	.LVL214:
 496:Core/Driver/oled/ssd1306.c ****         value = 0xAF;   // Display on
 497:Core/Driver/oled/ssd1306.c ****         SSD1306.DisplayOn = 1;
 1682              		.loc 1 497 0
 1683 0006 0122     		movs	r2, #1
 1684 0008 054B     		ldr	r3, .L101
 1685 000a 5A71     		strb	r2, [r3, #5]
 496:Core/Driver/oled/ssd1306.c ****         value = 0xAF;   // Display on
 1686              		.loc 1 496 0
 1687 000c AF20     		movs	r0, #175
 1688              	.LVL215:
 1689 000e 03E0     		b	.L100
 1690              	.LVL216:
 1691              	.L99:
 498:Core/Driver/oled/ssd1306.c ****     } else {
 499:Core/Driver/oled/ssd1306.c ****         value = 0xAE;   // Display off
 500:Core/Driver/oled/ssd1306.c ****         SSD1306.DisplayOn = 0;
 1692              		.loc 1 500 0
 1693 0010 0022     		movs	r2, #0
 1694 0012 034B     		ldr	r3, .L101
 1695 0014 5A71     		strb	r2, [r3, #5]
 499:Core/Driver/oled/ssd1306.c ****         SSD1306.DisplayOn = 0;
 1696              		.loc 1 499 0
 1697 0016 AE20     		movs	r0, #174
 1698              	.LVL217:
 1699              	.L100:
 501:Core/Driver/oled/ssd1306.c ****     }
 502:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(value);
 1700              		.loc 1 502 0
 1701 0018 FFF7FEFF 		bl	ssd1306_WriteCommand
 1702              	.LVL218:
 503:Core/Driver/oled/ssd1306.c **** }
 1703              		.loc 1 503 0
 1704              		@ sp needed
 1705 001c 10BD     		pop	{r4, pc}
 1706              	.L102:
 1707 001e C046     		.align	2
 1708              	.L101:
 1709 0020 00000000 		.word	.LANCHOR1
 1710              		.cfi_endproc
 1711              	.LFE332:
 1713              		.section	.text.ssd1306_Init,"ax",%progbits
 1714              		.align	2
 1715              		.global	ssd1306_Init
 1716              		.code	16
 1717              		.thumb_func
ARM GAS  /tmp/cczv7fP8.s 			page 41


 1719              	ssd1306_Init:
 1720              	.LFB316:
  85:Core/Driver/oled/ssd1306.c ****     // Reset OLED
 1721              		.loc 1 85 0
 1722              		.cfi_startproc
 1723              		@ args = 0, pretend = 0, frame = 0
 1724              		@ frame_needed = 0, uses_anonymous_args = 0
 1725 0000 10B5     		push	{r4, lr}
 1726              	.LCFI31:
 1727              		.cfi_def_cfa_offset 8
 1728              		.cfi_offset 4, -8
 1729              		.cfi_offset 14, -4
  90:Core/Driver/oled/ssd1306.c **** 
 1730              		.loc 1 90 0
 1731 0002 6420     		movs	r0, #100
 1732 0004 FFF7FEFF 		bl	HAL_Delay
 1733              	.LVL219:
  94:Core/Driver/oled/ssd1306.c **** 		CPRINTF("Can not found ssd1306!\r\n");
 1734              		.loc 1 94 0
 1735 0008 FFF7FEFF 		bl	is_ssd1306_ready
 1736              	.LVL220:
 1737 000c 0028     		cmp	r0, #0
 1738 000e 5DD0     		beq	.L105
 100:Core/Driver/oled/ssd1306.c **** 
 1739              		.loc 1 100 0
 1740 0010 0020     		movs	r0, #0
 1741 0012 FFF7FEFF 		bl	ssd1306_SetDisplayOn
 1742              	.LVL221:
 102:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
 1743              		.loc 1 102 0
 1744 0016 2020     		movs	r0, #32
 1745 0018 FFF7FEFF 		bl	ssd1306_WriteCommand
 1746              	.LVL222:
 103:Core/Driver/oled/ssd1306.c ****                                 // 10b,Page Addressing Mode (RESET); 11b,Invalid
 1747              		.loc 1 103 0
 1748 001c 0020     		movs	r0, #0
 1749 001e FFF7FEFF 		bl	ssd1306_WriteCommand
 1750              	.LVL223:
 106:Core/Driver/oled/ssd1306.c **** 
 1751              		.loc 1 106 0
 1752 0022 B020     		movs	r0, #176
 1753 0024 FFF7FEFF 		bl	ssd1306_WriteCommand
 1754              	.LVL224:
 111:Core/Driver/oled/ssd1306.c **** #endif
 1755              		.loc 1 111 0
 1756 0028 C820     		movs	r0, #200
 1757 002a FFF7FEFF 		bl	ssd1306_WriteCommand
 1758              	.LVL225:
 114:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x10); //---set high column address
 1759              		.loc 1 114 0
 1760 002e 0020     		movs	r0, #0
 1761 0030 FFF7FEFF 		bl	ssd1306_WriteCommand
 1762              	.LVL226:
 115:Core/Driver/oled/ssd1306.c **** 
 1763              		.loc 1 115 0
 1764 0034 1020     		movs	r0, #16
 1765 0036 FFF7FEFF 		bl	ssd1306_WriteCommand
ARM GAS  /tmp/cczv7fP8.s 			page 42


 1766              	.LVL227:
 117:Core/Driver/oled/ssd1306.c **** 
 1767              		.loc 1 117 0
 1768 003a 4020     		movs	r0, #64
 1769 003c FFF7FEFF 		bl	ssd1306_WriteCommand
 1770              	.LVL228:
 119:Core/Driver/oled/ssd1306.c **** 
 1771              		.loc 1 119 0
 1772 0040 FF20     		movs	r0, #255
 1773 0042 FFF7FEFF 		bl	ssd1306_SetContrast
 1774              	.LVL229:
 124:Core/Driver/oled/ssd1306.c **** #endif
 1775              		.loc 1 124 0
 1776 0046 A120     		movs	r0, #161
 1777 0048 FFF7FEFF 		bl	ssd1306_WriteCommand
 1778              	.LVL230:
 130:Core/Driver/oled/ssd1306.c **** #endif
 1779              		.loc 1 130 0
 1780 004c A620     		movs	r0, #166
 1781 004e FFF7FEFF 		bl	ssd1306_WriteCommand
 1782              	.LVL231:
 138:Core/Driver/oled/ssd1306.c **** #endif
 1783              		.loc 1 138 0
 1784 0052 A820     		movs	r0, #168
 1785 0054 FFF7FEFF 		bl	ssd1306_WriteCommand
 1786              	.LVL232:
 144:Core/Driver/oled/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 1787              		.loc 1 144 0
 1788 0058 3F20     		movs	r0, #63
 1789 005a FFF7FEFF 		bl	ssd1306_WriteCommand
 1790              	.LVL233:
 151:Core/Driver/oled/ssd1306.c **** 
 1791              		.loc 1 151 0
 1792 005e A420     		movs	r0, #164
 1793 0060 FFF7FEFF 		bl	ssd1306_WriteCommand
 1794              	.LVL234:
 153:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x00); //-not offset
 1795              		.loc 1 153 0
 1796 0064 D320     		movs	r0, #211
 1797 0066 FFF7FEFF 		bl	ssd1306_WriteCommand
 1798              	.LVL235:
 154:Core/Driver/oled/ssd1306.c **** 
 1799              		.loc 1 154 0
 1800 006a 0020     		movs	r0, #0
 1801 006c FFF7FEFF 		bl	ssd1306_WriteCommand
 1802              	.LVL236:
 156:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0xF0); //--set divide ratio
 1803              		.loc 1 156 0
 1804 0070 D520     		movs	r0, #213
 1805 0072 FFF7FEFF 		bl	ssd1306_WriteCommand
 1806              	.LVL237:
 157:Core/Driver/oled/ssd1306.c **** 
 1807              		.loc 1 157 0
 1808 0076 F020     		movs	r0, #240
 1809 0078 FFF7FEFF 		bl	ssd1306_WriteCommand
 1810              	.LVL238:
 159:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x22); //
ARM GAS  /tmp/cczv7fP8.s 			page 43


 1811              		.loc 1 159 0
 1812 007c D920     		movs	r0, #217
 1813 007e FFF7FEFF 		bl	ssd1306_WriteCommand
 1814              	.LVL239:
 160:Core/Driver/oled/ssd1306.c **** 
 1815              		.loc 1 160 0
 1816 0082 2220     		movs	r0, #34
 1817 0084 FFF7FEFF 		bl	ssd1306_WriteCommand
 1818              	.LVL240:
 162:Core/Driver/oled/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 1819              		.loc 1 162 0
 1820 0088 DA20     		movs	r0, #218
 1821 008a FFF7FEFF 		bl	ssd1306_WriteCommand
 1822              	.LVL241:
 166:Core/Driver/oled/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 1823              		.loc 1 166 0
 1824 008e 1220     		movs	r0, #18
 1825 0090 FFF7FEFF 		bl	ssd1306_WriteCommand
 1826              	.LVL242:
 173:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 1827              		.loc 1 173 0
 1828 0094 DB20     		movs	r0, #219
 1829 0096 FFF7FEFF 		bl	ssd1306_WriteCommand
 1830              	.LVL243:
 174:Core/Driver/oled/ssd1306.c **** 
 1831              		.loc 1 174 0
 1832 009a 2020     		movs	r0, #32
 1833 009c FFF7FEFF 		bl	ssd1306_WriteCommand
 1834              	.LVL244:
 176:Core/Driver/oled/ssd1306.c ****     ssd1306_WriteCommand(0x14); //
 1835              		.loc 1 176 0
 1836 00a0 8D20     		movs	r0, #141
 1837 00a2 FFF7FEFF 		bl	ssd1306_WriteCommand
 1838              	.LVL245:
 177:Core/Driver/oled/ssd1306.c ****     ssd1306_SetDisplayOn(1); //--turn on SSD1306 panel
 1839              		.loc 1 177 0
 1840 00a6 1420     		movs	r0, #20
 1841 00a8 FFF7FEFF 		bl	ssd1306_WriteCommand
 1842              	.LVL246:
 178:Core/Driver/oled/ssd1306.c **** 
 1843              		.loc 1 178 0
 1844 00ac 0120     		movs	r0, #1
 1845 00ae FFF7FEFF 		bl	ssd1306_SetDisplayOn
 1846              	.LVL247:
 181:Core/Driver/oled/ssd1306.c ****     
 1847              		.loc 1 181 0
 1848 00b2 0020     		movs	r0, #0
 1849 00b4 FFF7FEFF 		bl	ssd1306_Fill
 1850              	.LVL248:
 184:Core/Driver/oled/ssd1306.c ****     
 1851              		.loc 1 184 0
 1852 00b8 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1853              	.LVL249:
 187:Core/Driver/oled/ssd1306.c ****     SSD1306.CurrentY = 0;
 1854              		.loc 1 187 0
 1855 00bc 044B     		ldr	r3, .L106
 1856 00be 0022     		movs	r2, #0
ARM GAS  /tmp/cczv7fP8.s 			page 44


 1857 00c0 1A80     		strh	r2, [r3]
 188:Core/Driver/oled/ssd1306.c ****     
 1858              		.loc 1 188 0
 1859 00c2 5A80     		strh	r2, [r3, #2]
 190:Core/Driver/oled/ssd1306.c **** 
 1860              		.loc 1 190 0
 1861 00c4 0132     		adds	r2, r2, #1
 1862 00c6 1A71     		strb	r2, [r3, #4]
 192:Core/Driver/oled/ssd1306.c **** }
 1863              		.loc 1 192 0
 1864 00c8 0020     		movs	r0, #0
 1865 00ca 00E0     		b	.L104
 1866              	.L105:
  96:Core/Driver/oled/ssd1306.c **** 	}
 1867              		.loc 1 96 0
 1868 00cc 0120     		movs	r0, #1
 1869              	.L104:
 193:Core/Driver/oled/ssd1306.c **** 
 1870              		.loc 1 193 0
 1871              		@ sp needed
 1872 00ce 10BD     		pop	{r4, pc}
 1873              	.L107:
 1874              		.align	2
 1875              	.L106:
 1876 00d0 00000000 		.word	.LANCHOR1
 1877              		.cfi_endproc
 1878              	.LFE316:
 1880              		.section	.text.ssd1306_GetDisplayOn,"ax",%progbits
 1881              		.align	2
 1882              		.global	ssd1306_GetDisplayOn
 1883              		.code	16
 1884              		.thumb_func
 1886              	ssd1306_GetDisplayOn:
 1887              	.LFB333:
 504:Core/Driver/oled/ssd1306.c **** 
 505:Core/Driver/oled/ssd1306.c **** uint8_t ssd1306_GetDisplayOn() {
 1888              		.loc 1 505 0
 1889              		.cfi_startproc
 1890              		@ args = 0, pretend = 0, frame = 0
 1891              		@ frame_needed = 0, uses_anonymous_args = 0
 1892              		@ link register save eliminated.
 506:Core/Driver/oled/ssd1306.c ****     return SSD1306.DisplayOn;
 1893              		.loc 1 506 0
 1894 0000 014B     		ldr	r3, .L109
 1895 0002 5879     		ldrb	r0, [r3, #5]
 507:Core/Driver/oled/ssd1306.c **** }
 1896              		.loc 1 507 0
 1897              		@ sp needed
 1898 0004 7047     		bx	lr
 1899              	.L110:
 1900 0006 C046     		.align	2
 1901              	.L109:
 1902 0008 00000000 		.word	.LANCHOR1
 1903              		.cfi_endproc
 1904              	.LFE333:
 1906              		.section	.bss.SSD1306_Buffer,"aw",%nobits
 1907              		.align	2
ARM GAS  /tmp/cczv7fP8.s 			page 45


 1908              		.set	.LANCHOR0,. + 0
 1911              	SSD1306_Buffer:
 1912 0000 00000000 		.space	1024
 1912      00000000 
 1912      00000000 
 1912      00000000 
 1912      00000000 
 1913              		.section	.bss.SSD1306,"aw",%nobits
 1914              		.align	2
 1915              		.set	.LANCHOR1,. + 0
 1918              	SSD1306:
 1919 0000 00000000 		.space	6
 1919      0000
 1920              		.text
 1921              	.Letext0:
 1922              		.file 2 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/lib/gcc/arm-none-eabi/5.4.1/include/stddef.h"
 1923              		.file 3 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 1924              		.file 4 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 1925              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g070xx.h"
 1926              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 1927              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 1928              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_i2c.h"
 1929              		.file 9 "Core/Driver/oled/ssd1306_fonts.h"
 1930              		.file 10 "Core/Driver/oled/ssd1306.h"
 1931              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 1932              		.file 12 "Drivers/CMSIS/Include/cmsis_gcc.h"
 1933              		.file 13 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/math.h"
 1934              		.file 14 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
ARM GAS  /tmp/cczv7fP8.s 			page 46


DEFINED SYMBOLS
                            *ABS*:00000000 ssd1306.c
     /tmp/cczv7fP8.s:24     .text.ssd1306_DegToRad:00000000 $t
     /tmp/cczv7fP8.s:28     .text.ssd1306_DegToRad:00000000 ssd1306_DegToRad
     /tmp/cczv7fP8.s:60     .text.ssd1306_DegToRad:0000001c $d
     /tmp/cczv7fP8.s:67     .text.ssd1306_NormalizeTo0_360:00000000 $t
     /tmp/cczv7fP8.s:71     .text.ssd1306_NormalizeTo0_360:00000000 ssd1306_NormalizeTo0_360
     /tmp/cczv7fP8.s:98     .text.ssd1306_Reset:00000000 $t
     /tmp/cczv7fP8.s:103    .text.ssd1306_Reset:00000000 ssd1306_Reset
     /tmp/cczv7fP8.s:117    .text.ssd1306_WriteCommand:00000000 $t
     /tmp/cczv7fP8.s:122    .text.ssd1306_WriteCommand:00000000 ssd1306_WriteCommand
     /tmp/cczv7fP8.s:160    .text.ssd1306_WriteCommand:00000028 $d
     /tmp/cczv7fP8.s:165    .text.ssd1306_WriteData:00000000 $t
     /tmp/cczv7fP8.s:170    .text.ssd1306_WriteData:00000000 ssd1306_WriteData
     /tmp/cczv7fP8.s:206    .text.ssd1306_WriteData:00000020 $d
     /tmp/cczv7fP8.s:211    .text.ssd1306_FillBuffer:00000000 $t
     /tmp/cczv7fP8.s:216    .text.ssd1306_FillBuffer:00000000 ssd1306_FillBuffer
     /tmp/cczv7fP8.s:257    .text.ssd1306_FillBuffer:0000001c $d
     /tmp/cczv7fP8.s:262    .text.is_ssd1306_ready:00000000 $t
     /tmp/cczv7fP8.s:267    .text.is_ssd1306_ready:00000000 is_ssd1306_ready
     /tmp/cczv7fP8.s:293    .text.is_ssd1306_ready:00000014 $d
     /tmp/cczv7fP8.s:298    .text.ssd1306_Fill:00000000 $t
     /tmp/cczv7fP8.s:303    .text.ssd1306_Fill:00000000 ssd1306_Fill
     /tmp/cczv7fP8.s:341    .text.ssd1306_Fill:0000001c $d
     /tmp/cczv7fP8.s:347    .text.ssd1306_UpdateScreen:00000000 $t
     /tmp/cczv7fP8.s:352    .text.ssd1306_UpdateScreen:00000000 ssd1306_UpdateScreen
     /tmp/cczv7fP8.s:408    .text.ssd1306_UpdateScreen:00000034 $d
     /tmp/cczv7fP8.s:413    .text.ssd1306_DrawPixel:00000000 $t
     /tmp/cczv7fP8.s:418    .text.ssd1306_DrawPixel:00000000 ssd1306_DrawPixel
     /tmp/cczv7fP8.s:476    .text.ssd1306_DrawPixel:00000040 $d
     /tmp/cczv7fP8.s:481    .text.ssd1306_WriteChar:00000000 $t
     /tmp/cczv7fP8.s:486    .text.ssd1306_WriteChar:00000000 ssd1306_WriteChar
     /tmp/cczv7fP8.s:647    .text.ssd1306_WriteChar:000000c0 $d
     /tmp/cczv7fP8.s:652    .text.ssd1306_WriteString:00000000 $t
     /tmp/cczv7fP8.s:657    .text.ssd1306_WriteString:00000000 ssd1306_WriteString
     /tmp/cczv7fP8.s:709    .text.ssd1306_SetCursor:00000000 $t
     /tmp/cczv7fP8.s:714    .text.ssd1306_SetCursor:00000000 ssd1306_SetCursor
     /tmp/cczv7fP8.s:733    .text.ssd1306_SetCursor:00000008 $d
     /tmp/cczv7fP8.s:738    .text.ssd1306_Line:00000000 $t
     /tmp/cczv7fP8.s:743    .text.ssd1306_Line:00000000 ssd1306_Line
     /tmp/cczv7fP8.s:899    .text.ssd1306_Polyline:00000000 $t
     /tmp/cczv7fP8.s:904    .text.ssd1306_Polyline:00000000 ssd1306_Polyline
     /tmp/cczv7fP8.s:969    .text.ssd1306_Polyline:0000003c $d
     /tmp/cczv7fP8.s:981    .text.ssd1306_DrawArc:00000000 $t
     /tmp/cczv7fP8.s:986    .text.ssd1306_DrawArc:00000000 ssd1306_DrawArc
     /tmp/cczv7fP8.s:1224   .text.ssd1306_DrawCircle:00000000 $t
     /tmp/cczv7fP8.s:1229   .text.ssd1306_DrawCircle:00000000 ssd1306_DrawCircle
     /tmp/cczv7fP8.s:1398   .text.ssd1306_DrawRectangle:00000000 $t
     /tmp/cczv7fP8.s:1403   .text.ssd1306_DrawRectangle:00000000 ssd1306_DrawRectangle
     /tmp/cczv7fP8.s:1466   .text.ssd1306_DrawBitmap:00000000 $t
     /tmp/cczv7fP8.s:1471   .text.ssd1306_DrawBitmap:00000000 ssd1306_DrawBitmap
     /tmp/cczv7fP8.s:1626   .text.ssd1306_SetContrast:00000000 $t
     /tmp/cczv7fP8.s:1631   .text.ssd1306_SetContrast:00000000 ssd1306_SetContrast
     /tmp/cczv7fP8.s:1661   .text.ssd1306_SetDisplayOn:00000000 $t
     /tmp/cczv7fP8.s:1666   .text.ssd1306_SetDisplayOn:00000000 ssd1306_SetDisplayOn
     /tmp/cczv7fP8.s:1709   .text.ssd1306_SetDisplayOn:00000020 $d
     /tmp/cczv7fP8.s:1714   .text.ssd1306_Init:00000000 $t
ARM GAS  /tmp/cczv7fP8.s 			page 47


     /tmp/cczv7fP8.s:1719   .text.ssd1306_Init:00000000 ssd1306_Init
     /tmp/cczv7fP8.s:1876   .text.ssd1306_Init:000000d0 $d
     /tmp/cczv7fP8.s:1881   .text.ssd1306_GetDisplayOn:00000000 $t
     /tmp/cczv7fP8.s:1886   .text.ssd1306_GetDisplayOn:00000000 ssd1306_GetDisplayOn
     /tmp/cczv7fP8.s:1902   .text.ssd1306_GetDisplayOn:00000008 $d
     /tmp/cczv7fP8.s:1907   .bss.SSD1306_Buffer:00000000 $d
     /tmp/cczv7fP8.s:1911   .bss.SSD1306_Buffer:00000000 SSD1306_Buffer
     /tmp/cczv7fP8.s:1914   .bss.SSD1306:00000000 $d
     /tmp/cczv7fP8.s:1918   .bss.SSD1306:00000000 SSD1306
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
HAL_I2C_Mem_Write
hi2c1
memcpy
HAL_I2C_IsDeviceReady
__aeabi_idiv
__aeabi_uidiv
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_i2d
__aeabi_d2iz
sin
cos
HAL_Delay
